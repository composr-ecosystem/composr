[title sub="Written by Patrick Schmalstig"]Composr Tutorial: Relaying Errors and Statistics to Composr[/title]

Composr CMS has an optional and secure way to automatically relay some errors you encounter on your site to the core developers (via the homesite); we call this the telemetry service. The telemetry service can also relay some basic statistics about your site so that developers can improve on the software according to how it is used.

While optional, we highly recommend enabling telemetry at least for relayed errors. That way, core developers can be informed of potential software bugs you might miss or neglect to report normally to the tracker. With that being said, this also should not serve as a replacement to reporting issues; not every error gets reported (e.g. critical errors which bail out Composr do not get reported).

The telemetry service is also fully GDPR-compliant. And you can opt-out of it (and even request automatic deletion of your data) at any time.

[contents]decimal,lower-alpha[/contents]

[title="2"]Configuring telemetry[/title]
[surround]
[media width="150" description="Telemetry options on the installer (step 2)" float="right"]data_custom/images/docs/tut_telemetry/telemetry_installer.png[/media]
[media width="150" description="Telemetry options under Privacy / legal compliance options" float="right"]data_custom/images/docs/tut_telemetry/telemetry_config.png[/media]
There are two places you can set your telemetry options. The installer will prompt you on step 2 when you agree to the licence whether you want to relay errors and/or statistics to the developers.

You can also change your telemetry options at any time under Admin Zone > Setup > Configuration > Privacy / legal compliance options.
[/surround]

[title="2"]Viewing relayed errors[/title]
[surround]
[media_set]
[media width="150" description="A relayed error from low-level logging" float="right"]data_custom/images/docs/tut_telemetry/telemetry_lowlevel.png[/media]
[media width="150" description="A relayed error from data_custom/errorlog.php" float="right"]data_custom/images/docs/tut_telemetry/telemetry_errorlog.png[/media]
[media width="150" description="The relayed error status page; the error has not yet been resolved" float="right"]data_custom/images/docs/tut_telemetry/telemetry_statusopen.png[/media]
[media width="150" description="The relayed error now has a message from the developers" float="right"]data_custom/images/docs/tut_telemetry/telemetry_statusclosed.png[/media]
[/media_set]
When an error occurs and you have telemetry set to relay errors to the core developers, the error might (but not always) get relayed. Errors which are very likely not to be bugs, and critical errors which bail out the software, will not be relayed. It is important that you report any errors you encounter that you believe to be a software bug to [page="_SEARCH:report-issue"]the tracker[/page] so the developers are aware of them.

You can check whether an error was relayed in one of two ways. You can either look under Admin Zone > Audit > Low-level logging, and observe the "Relayed?" column in the error log. Or, you can view [tt]data_custom/errorlog.php[/tt] manually, where relayed errors will have a line under them like this: [tt]TELEMETRY <GUID>[/tt].

You can then view the status and potential information about that relayed error by clicking the link ("Yes" items under the "Relayed?" column will be hyperlinks), or by going to [tt]homesiteurl/telemetry/<GUID>.htm[/tt] where [tt]<GUID>[/tt] is the GUID you pulled from [tt]data_custom/errorlog.php[/tt].

Common errors, or errors which already have a resolution, will be marked auto-resolved by the homesite and will have some instructions / troubleshooting for you to follow. Otherwise, the status will be 'open', meaning a core developer has not reviewed the error yet. Check back to the page often (and consider adding the error to [page="_SEARCH:report-issue"]the tracker[/page]) for updates.
[/surround]

[title="2"]Viewing telemetry status[/title]
[surround]
[media width="150" description="Viewing the status of a site with the telemetry service" float="right"]data_custom/images/docs/tut_telemetry/telemetry_status.png[/media]

When telemetry is enabled, you can view a basic overview of your site's status with the telemetry system under Admin Zone > Audit > Telemetry status.

You will see what the telemetry service knows about your site, such as its URL and name, software version, when the telemetry service last checked if you still had Composr installed, the last time your site sent statistics, how many errors were relayed total, and the members / hits last reported (if applicable).
[/surround]

[title="2"]Deleting your data[/title]
If you want the homesite telemetry service to delete all telemetry data associated with your site, you must follow this process; we do not accept requests through e-mail or other means as this is the only way telemetry can verify you own the site you want erased:
[list="1"]
[*]Disable telemetry under Admin Zone > Setup > Configuration > Privacy / legal compliance options.
[*]Open [tt]data/installed.php[/tt] in a text editor.
[*]Un-comment the indicated lines in the file which makes it output 'Remove me!'.
[*]Wait at least a few days for the telemetry service to pick up on the file (telemetry only scans [tt]data/installed.php[/tt] once per day).
[/list]

The page at Admin Zone > Audit > Telemetry status will let you know (via a message at the top) when your site is still registered in the telemetry service. The message disappears when you are not registered anymore.

[title="2"]Understanding telemetry security (advanced)[/title]
Telemetry data, particularly relayed errors, can be sensitive in nature as they may contain full server paths and passwords. For this reason, Composr encrypts the data sent to the telemetry service on the homesite for the core developers. And the homesite uses several processes to verify the integrity of the data sent. Anything sent which does not conform to these standards will be rejected with an error.

Encryption is done using cryptographic keys located both in [tt]data/keys[/tt] and [tt]data_custom/keys[/tt]. These are generated using PHP's [tt]libsodium[/tt] library. Keys specifically for telemetry will be prefixed [tt]telemetry-*[/tt].

There are several keys used in telemetry:
[list]
[*][tt]data/keys/telemetry.pub[/tt]
This is the public key for the software distributed to anyone who downloads it. It is specific to the major.minor version of Composr you download. While the public key is freely distributed and available, the private key is not and is only located on the homesite.

This key is used to encrypt anything sent to the telemetry service. The homesite will then decrypt the data using the relevant version's private key. This verifies the data was sent from a site running Composr and verifies its version number.

The core developers can invalidate these keys at any time simply by deleting the private key off of the homesite and releasing a new minor version with a new public key should they suspect a severe security breach with the telemetry system.

[*][tt]data_custom/keys/telemetry-site.key[/tt], [tt]data_custom/keys/telemetry-site.pub[/tt], [tt]data_custom/keys/telemetry-site-sign.key[/tt], and [tt]data_custom/keys/telemetry-site-sign.pub[/tt]
These are the public and private key-pairs specific for your site. They are generated when you enable telemetry and are destroyed when you disable it. The sign ones are used to sign and verify that data sent from your site actually came from your site. The non-sign ones are used to encrypt telemetry data sent by your site.

When you enable telemetry, your public key and public sign key is sent to the homesite (encrypted by the software key), and the homesite remembers it for when your site sends encrypted telemetry data. That way, it can decrypt your data.
[/list]

Let's run through the process:
[list="1"]
[*][b]Enabling telemetry[/b]
 - When you enable telemetry, your site will generate [tt]data_custom/keys/telemetry-site.key[/tt], [tt]data_custom/keys/telemetry-site.pub[/tt], [tt]data_custom/keys/telemetry-site-sign.key[/tt], and [tt]data_custom/keys/telemetry-site-sign.pub[/tt] keys. It will also generate a random "challenge" string and save it to [tt]data_custom/telemetry_challenge.txt[/tt].
 - Then, it will inform the homesite telemetry service that you enabled telemetry by sending the public ([tt].pub[/tt]) keys and the challenge to the homesite, encrypted by the software public key ([tt]data/keys/telemetry.pub[/tt]).
 - The homesite then decrypts the payload. The homesite will verify the authenticity of the registration request (to prevent malicious actors from registering sites on their behalf) by calling your site's [tt]data/installed.php[/tt] script, which will return the contents of [tt]data_custom/telemetry_challenge.txt[/tt] and then delete the file. It will then compare the returned challenge with the challenge that was sent in your payload. If they do not match, the registration request is rejected.
 - The homesite then stores your public keys. Note your private keys ([tt].key[/tt]) remain private on your server, cannot be accessed, and are not transmitted (so even the homesite does not know them).
[*][b]Sending telemetry data[/b]
 - When your site sends telemetry data, it will first encrypt the data using a key-pair of your site's private key ([tt]data_custom/keys/telemetry-site.key[/tt]) and the software's public key ([tt]data/keys/telemetry.pub[/tt]).
 - Then, your site will sign the data with the private sign key ([tt]data_custom/keys/telemetry-site-sign.key[/tt]).
 - This payload is then sent to the homesite.
 - The homesite locates your stored public keys according to your base URL.
 - Then, it verifies the signature of the payload using your public sign key.
 - If it's valid, it will then use a key-pair of your public key and the software's private key (according to the version you are running) to decrypt the payload and read/process the data.
[*]Number 2 also happens when you go to Admin Zone > Audit > Telemetry status (but just for some arbitrary data) to prove to the homesite you are who you say you are when you request to see your status.
[/list]

[concepts
 1_key="telemetry"     1_value="The optional service by which Composr sites send data (e.g. errors) to the homesite for improving the software"
 2_key="keys"          2_value="Files used to encrypt/decrypt or sign/verify data; in the case of telemetry, they are located in data[_custom]/keys"
 3_key="private key"   3_value="The key which is kept secret and used to generate public keys; usually used to decrypt or sign data"
 4_key="public key"    4_value="A key generated from the private key which is publicly shared; usually used to encrypt or verify data"
 5_key="payload"       5_value="A JSON-encoded string of data sent to the homesite (usually encrypted)"
]Concepts[/concepts]

[title="2"]See also[/title]

 - [page="_SEARCH:tut_software_feedback"]Problem and feedback reports, and development policies[/page]
 - [page="_SEARCH:tut_disaster"]Disaster recovery[/page]
 - [page="_SEARCH:tut_website_health"]Website Health[/page]
 - [page="_SEARCH:tut_endpoints"]Server-side public API[/page]
 - [page="_SEARCH:codebook_3"]Code Book, part 3 (Miscellany)[/page]

{$SET,tutorial_tags,Contributing,Development,Maintenance,core_privacy,novice}{$SET,tutorial_add_date,Feb 2025}{$SET,tutorial_summary,Composr has an optional and secure way to automatically relay some errors and statistics to the core development team.}[block]main_tutorial_rating[/block]
