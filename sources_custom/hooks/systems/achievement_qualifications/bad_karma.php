<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    achievements
 */

/*
    Supported parameters for this qualification:
    1) count        -- A member must have *less than* the given amount of bad karma for this qualification to be satisfied (not specified: 10)
    2) as_percent   -- If 1, then "count" is a percentage; the member's bad karma must make up less than count percent of their total karma (sum of good and bad karma, so 50% would mean bad karma must not exceed good karma) (not specified: 1)
*/

/**
 * Hook class.
 */
class Hook_achievement_qualifications_bad_karma
{
    /**
     * Get information about this qualification.
     *
     * @param  MEMBER $member_id The member we are viewing
     * @param  array $params Map of parameters which were specified on the XML for this qualification
     * @return ?array Map of details (null: qualification is disabled)
     */
    public function info(int $member_id, array $params) : ?array
    {
        if (!addon_installed('achievements')) {
            return null;
        }

        if (!addon_installed('karma')) {
            return null;
        }

        return [
            'supports_persist' => false,
            'persist_progress_default' => false,
        ];
    }

    /**
     * Run calculations on this qualification to see how much it has been completed.
     *
     * @param  MEMBER $member_id The member we are viewing
     * @param  array $params Map of parameters which were specified on the XML for this qualification
     * @param  ?TIME $last_time Only calculate results more recent than the given time (null: never calculated before, or not persisting progress)
     * @return ?array Double: the number accomplished, and the number needed for the qualification to be considered "complete" (null: qualification should be ignored)
     */
    public function run(int $member_id, array $params, ?int $last_time = null) : ?array
    {
        if (!addon_installed('achievements')) {
            return null;
        }

        if (!addon_installed('karma')) {
            return null;
        }

        require_lang('achievements');

        // Read in parameters
        $count = isset($params['count']) ? intval($params['count']) : 10;
        $as_percent = isset($params['as_percent']) ? ($params['as_percent'] == '1') : true;

        // Get karma
        require_code('karma');
        list($good_karma, $bad_karma) = get_karma($member_id);
        $total_karma = $good_karma + $bad_karma;

        // Condition is always satisfied if the member has not earned any karma yet
        if ($total_karma == 0) {
            return [1, 1];
        }

        // Determine if we satisfied
        if ($as_percent) {
            if (($bad_karma / $total_karma) >= floatval($count * 100)) {
                return [0, 1];
            }
            return [1, 1];
        }
        if ($bad_karma >= $count) {
            return [0, 1];
        }

        return [1, 1];
    }

    /**
     * Convert information about the qualification into human-readable text where members can track their progress.
     *
     * @param  MEMBER $member_id The member we are viewing
     * @param  array $params Map of parameters which were specified on the XML for this qualification
     * @param  integer $count_done Count of items achieved for the qualification (from run)
     * @param  integer $count_required Count of items required for the qualification to be complete (from run)
     * @return ?Tempcode The text explaining this condition and the progress (null: hidden or disabled qualification)
     */
    public function to_text(int $member_id, array $params, int $count_done, int $count_required) : ?object
    {
        if (!addon_installed('achievements')) {
            return null;
        }

        if (!addon_installed('karma')) {
            return null;
        }

        // Read in parameters
        $count = isset($params['count']) ? intval($params['count']) : 10;
        $as_percent = isset($params['as_percent']) ? ($params['as_percent'] == '1') : true;

        // Condition
        if ($as_percent) {
            $conditions = do_lang_tempcode('ACHIEVEMENT_BAD_KARMA_REQUIREMENT_PERCENT', escape_html(integer_format($count)));
        } else {
            $conditions = do_lang_tempcode('ACHIEVEMENT_BAD_KARMA_REQUIREMENT_COUNT', escape_html(integer_format($count)));
        }

        // Progress
        if ($count_done > 0) {
            $progress = do_lang_tempcode('ACHIEVEMENT_PROGRESS_SATISFIED');
        } else {
            $progress = do_lang_tempcode('ACHIEVEMENT_PROGRESS_NOT_SATISFIED');
        }

        // Finalise
        return do_lang_tempcode('ACHIEVEMENT_BAD_KARMA_REQUIREMENT', protect_from_escaping($conditions), protect_from_escaping($progress));
    }
}
