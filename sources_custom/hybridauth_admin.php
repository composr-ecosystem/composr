<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2020

 See docs/LICENSE.md for full licensing information.

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    hybridauth
 */

function init__hybridauth_admin()
{
    define('HYBRIDAUTH__AUTHENTICATION_FLOW', 1);
    define('HYBRIDAUTH__GET_PROFILE', 2);
    define('HYBRIDAUTH__PROFILE_EMAIL', 4);
    define('HYBRIDAUTH__GET_CONTACTS', 8);
    define('HYBRIDAUTH__SIMPLEAPI_GET_ACTIVITIES', 16);
    define('HYBRIDAUTH__SIMPLEAPI_UPDATE_STATUS', 32);
    define('HYBRIDAUTH__SIMPLEAPI_GET_PAGES', 64);
    define('HYBRIDAUTH__SIMPLEAPI_UPDATE_STATUS_ON_PAGES', 128);
    define('HYBRIDAUTH__ADVANCEDAPI_READ_ATOMS', 256);
    //define('HYBRIDAUTH__ADVANCEDAPI_READ_ATOMS_FROM_URL', 512);
    //define('HYBRIDAUTH__ADVANCEDAPI_WRITE_ATOMS', 1024);
    //define('HYBRIDAUTH__ADVANCEDAPI_READ_CATEGORIES', 2048);
    //define('HYBRIDAUTH__ADVANCEDAPI_WRITE_CATEGORIES', 4096);
    //define('HYBRIDAUTH__SPECIFIED_IDS', 8192);
    //define('HYBRIDAUTH__STRING_IDS', 16384);
    //define('HYBRIDAUTH__FILESYSTEM_CATEGORIES', 32768);
    //define('HYBRIDAUTH__HIERARCHICAL_CATEGORIES', 65536);
    //define('HYBRIDAUTH__MULTIPLE_CATEGORIZATION', 131072);
    //define('HYBRIDAUTH__STATUS_ATOM_TYPES', 262144);
    //define('HYBRIDAUTH__MULTIPLE_ENCLOSURES', 524288);
    //define('HYBRIDAUTH__IMAGE_ENCLOSURES', 1048576);
    //define('HYBRIDAUTH__VIDEO_ENCLOSURES', 2097152);
    //define('HYBRIDAUTH__BINARY_ENCLOSURES', 4194304);
    //define('HYBRIDAUTH__ATOMS_HAVE_TITLE', 8388608);
    //define('HYBRIDAUTH__ATOMS_HAVE_SUMMARY', 16777216);
    //define('HYBRIDAUTH__ATOMS_HAVE_CONTENT', 33554432);
    //define('HYBRIDAUTH__SHARE_URLS', 67108864);
    //define('HYBRIDAUTH__IDS_TO_PROFILE_URLS', 134217728);
    //define('HYBRIDAUTH__OVERVIEW_STATS', 268435456);
    define('HYBRIDAUTH__REQUIRES_TOKEN_MAINTENANCE', 536870912);
    //define('HYBRIDAUTH__TODO_B', 1073741824); // Available for future use

    require_code('hybridauth');
}

function initiate_hybridauth_admin($mask = 0)
{
    $providers = find_all_hybridauth_admin_providers_matching($mask);

    global $CSP_NONCE;

    $_providers = [];
    foreach ($providers as $provider => $info) {
        $_providers[$provider] = [
            'enabled' => true,
            'nonce' => $CSP_NONCE,
            'keys' => $info['keys'],
        ] + $info['other_parameters'];
    }

    $config = [
        'providers' => $_providers,
        'callback' => find_script('hybridauth_admin'),
    ];

    require_code('hybridauth/autoload');

    require_code('hybridauth_admin_storage');
    $admin_storage = new ComposrHybridauthValuesStorage();

    $hybridauth = new Hybridauth\Hybridauth($config, null, $admin_storage);

    return [$hybridauth, $admin_storage, $providers];
}

function find_all_hybridauth_admin_providers_matching($mask)
{
    $provider_metadata = [
        'Amazon' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'AOLOpenID' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Apple' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Authentiq' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'BitBucket' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'BlizzardAPAC' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'BlizzardEU' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Blizzard' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'DeviantArt' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Discord' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Disqus' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Dribbble' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Dropbox' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Facebook' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL | HYBRIDAUTH__GET_CONTACTS | HYBRIDAUTH__SIMPLEAPI_GET_ACTIVITIES | HYBRIDAUTH__SIMPLEAPI_UPDATE_STATUS | HYBRIDAUTH__SIMPLEAPI_GET_PAGES | HYBRIDAUTH__SIMPLEAPI_UPDATE_STATUS_ON_PAGES | HYBRIDAUTH__REQUIRES_TOKEN_MAINTENANCE,
        'Foursquare' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL | HYBRIDAUTH__GET_CONTACTS,
        'GitHub' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'GitLab' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Google' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL | HYBRIDAUTH__GET_CONTACTS,
        'Instagram' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__ADVANCEDAPI_READ_ATOMS | HYBRIDAUTH__REQUIRES_TOKEN_MAINTENANCE,
        'LinkedIn' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL | HYBRIDAUTH__SIMPLEAPI_UPDATE_STATUS,
        'Mailru' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'MicrosoftGraph' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL | HYBRIDAUTH__GET_CONTACTS,
        'Odnoklassniki' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'OpenID' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'ORCID' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Patreon' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'PaypalOpenID' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Paypal' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Pinterest' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'QQ' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Reddit' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Slack' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Spotify' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'StackExchangeOpenID' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'StackExchange' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Steam' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'SteemConnect' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Strava' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Telegram' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Tumblr' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__GET_CONTACTS | HYBRIDAUTH__SIMPLEAPI_UPDATE_STATUS,
        'TwitchTV' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Twitter' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL | HYBRIDAUTH__GET_CONTACTS | HYBRIDAUTH__SIMPLEAPI_GET_ACTIVITIES | HYBRIDAUTH__SIMPLEAPI_UPDATE_STATUS,
        'Vkontakte' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL | HYBRIDAUTH__GET_CONTACTS,
        'WeChatChina' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'WeChat' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'WindowsLive' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL | HYBRIDAUTH__GET_CONTACTS,
        'WordPress' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Yahoo' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
    ];

    $providers = enumerate_hybridauth_providers(true);

    $relevant_providers = [];
    foreach ($providers as $provider => $info) {
        $features = isset($provider_metadata[$provider]) ? $provider_metadata[$provider] : 0;

        if (($features & $mask) == $mask) {
            $relevant_providers[$provider] = $info;
        }
    }

    return $relevant_providers;
}
