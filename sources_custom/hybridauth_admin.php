<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2020

 See docs/LICENSE.md for full licensing information.

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    hybridauth
 */

function init__hybridauth_admin()
{
    define('HYBRIDAUTH__AUTHENTICATION_FLOW', 1 << 0);
    define('HYBRIDAUTH__GET_PROFILE', 1 << 1);
    define('HYBRIDAUTH__PROFILE_EMAIL', 1 << 2);
    define('HYBRIDAUTH__GET_CONTACTS', 1 << 3);
    define('HYBRIDAUTH__REQUIRES_TOKEN_MAINTENANCE', 1 << 4);
    define('HYBRIDAUTH__SIMPLEAPI_GET_ACTIVITIES', 1 << 5);
    define('HYBRIDAUTH__SIMPLEAPI_UPDATE_STATUS', 1 << 6);
    define('HYBRIDAUTH__SIMPLEAPI_GET_PAGES', 1 << 7);
    define('HYBRIDAUTH__SIMPLEAPI_UPDATE_STATUS_ON_PAGES', 1 << 8);
    define('HYBRIDAUTH__ADVANCEDAPI_READ_ATOMS', 1 << 9);
    define('HYBRIDAUTH__ADVANCEDAPI_READ_ATOMS_FROM_URL', 1 << 10);
    define('HYBRIDAUTH__ADVANCEDAPI_INSERT_ATOMS', 1 << 11);
    define('HYBRIDAUTH__ADVANCEDAPI_UPDATE_ATOMS', 1 << 12);
    define('HYBRIDAUTH__ADVANCEDAPI_DELETE_ATOMS', 1 << 13);
    define('HYBRIDAUTH__ADVANCEDAPI_READ_CATEGORIES', 1 << 14);
    define('HYBRIDAUTH__ADVANCEDAPI_WRITE_CATEGORIES', 1 << 15);
    define('HYBRIDAUTH__ADVANCEDAPI_SPECIFIED_IDENTIFIERS', 1 << 16);
    define('HYBRIDAUTH__ADVANCEDAPI_FILESYSTEM_CATEGORIES', 1 << 17);
    define('HYBRIDAUTH__ADVANCEDAPI_HIERARCHICAL_CATEGORIES', 1 << 18);
    define('HYBRIDAUTH__ADVANCEDAPI_MULTIPLE_CATEGORIZATION', 1 << 19);
    define('HYBRIDAUTH__ADVANCEDAPI_MULTIPLE_ENCLOSURES', 1 << 20);
    define('HYBRIDAUTH__ADVANCEDAPI_IMAGE_ENCLOSURES', 1 << 21);
    define('HYBRIDAUTH__ADVANCEDAPI_VIDEO_ENCLOSURES', 1 << 22);
    define('HYBRIDAUTH__ADVANCEDAPI_BINARY_ENCLOSURES', 1 << 23);
    define('HYBRIDAUTH__ADVANCEDAPI_ATOMS_HAVE_TITLE', 1 << 24);
    define('HYBRIDAUTH__ADVANCEDAPI_ATOMS_HAVE_SUMMARY', 1 << 25);
    define('HYBRIDAUTH__ADVANCEDAPI_ATOMS_HAVE_CONTENT', 1 << 26);
    //define('HYBRIDAUTH__SHARE_URLS', 1 << 27);
    //define('HYBRIDAUTH__IDS_TO_PROFILE_URLS', 1 << 28);
    //define('HYBRIDAUTH__OVERVIEW_STATS', 1 << 29);
    define('HYBRIDAUTH__AUTHENTICATED_OEMBED', 1 << 30);

    global $HYBRIDAUTH_PROVIDER_METADATA;
    $HYBRIDAUTH_PROVIDER_METADATA = [
        'Amazon' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'AOLOpenID' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Apple' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Authentiq' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'BitBucket' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'BlizzardAPAC' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'BlizzardEU' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Blizzard' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'DeviantArt' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Discord' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Disqus' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Dribbble' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Dropbox' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Facebook' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL | HYBRIDAUTH__GET_CONTACTS | HYBRIDAUTH__SIMPLEAPI_GET_ACTIVITIES | HYBRIDAUTH__SIMPLEAPI_UPDATE_STATUS | HYBRIDAUTH__SIMPLEAPI_GET_PAGES | HYBRIDAUTH__SIMPLEAPI_UPDATE_STATUS_ON_PAGES | HYBRIDAUTH__REQUIRES_TOKEN_MAINTENANCE | HYBRIDAUTH__ADVANCEDAPI_READ_CATEGORIES | HYBRIDAUTH__ADVANCEDAPI_INSERT_ATOMS | HYBRIDAUTH__ADVANCEDAPI_UPDATE_ATOMS | HYBRIDAUTH__ADVANCEDAPI_DELETE_ATOMS | HYBRIDAUTH__ADVANCEDAPI_IMAGE_ENCLOSURES | HYBRIDAUTH__ADVANCEDAPI_VIDEO_ENCLOSURES | HYBRIDAUTH__ADVANCEDAPI_ATOMS_HAVE_CONTENT | HYBRIDAUTH__ADVANCEDAPI_MULTIPLE_ENCLOSURES | HYBRIDAUTH__AUTHENTICATED_OEMBED,
        'Foursquare' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL | HYBRIDAUTH__GET_CONTACTS,
        'GitHub' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'GitLab' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Google' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL | HYBRIDAUTH__GET_CONTACTS,
        'Instagram' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__ADVANCEDAPI_READ_ATOMS | HYBRIDAUTH__REQUIRES_TOKEN_MAINTENANCE | HYBRIDAUTH__ADVANCEDAPI_IMAGE_ENCLOSURES | HYBRIDAUTH__ADVANCEDAPI_VIDEO_ENCLOSURES | HYBRIDAUTH__ADVANCEDAPI_ATOMS_HAVE_CONTENT | HYBRIDAUTH__ADVANCEDAPI_MULTIPLE_ENCLOSURES | HYBRIDAUTH__AUTHENTICATED_OEMBED,
        'LinkedIn' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL | HYBRIDAUTH__SIMPLEAPI_UPDATE_STATUS,
        'Mailru' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'MicrosoftGraph' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL | HYBRIDAUTH__GET_CONTACTS,
        'Odnoklassniki' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'OpenID' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'ORCID' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Patreon' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'PaypalOpenID' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Paypal' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Pinterest' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'QQ' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Reddit' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Slack' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Spotify' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'StackExchangeOpenID' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'StackExchange' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Steam' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'SteemConnect' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Strava' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Telegram' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'Tumblr' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__GET_CONTACTS | HYBRIDAUTH__SIMPLEAPI_UPDATE_STATUS,
        'TwitchTV' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Twitter' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL | HYBRIDAUTH__GET_CONTACTS | HYBRIDAUTH__SIMPLEAPI_GET_ACTIVITIES | HYBRIDAUTH__SIMPLEAPI_UPDATE_STATUS | HYBRIDAUTH__ADVANCEDAPI_READ_ATOMS_FROM_URL | HYBRIDAUTH__ADVANCEDAPI_INSERT_ATOMS | HYBRIDAUTH__ADVANCEDAPI_DELETE_ATOMS | HYBRIDAUTH__ADVANCEDAPI_IMAGE_ENCLOSURES | HYBRIDAUTH__ADVANCEDAPI_VIDEO_ENCLOSURES | HYBRIDAUTH__ADVANCEDAPI_ATOMS_HAVE_CONTENT | HYBRIDAUTH__ADVANCEDAPI_MULTIPLE_ENCLOSURES,
        'Vkontakte' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL | HYBRIDAUTH__GET_CONTACTS,
        'WeChatChina' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'WeChat' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE,
        'WindowsLive' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL | HYBRIDAUTH__GET_CONTACTS,
        'WordPress' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'Yahoo' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__PROFILE_EMAIL,
        'YouTube' => HYBRIDAUTH__AUTHENTICATION_FLOW | HYBRIDAUTH__GET_PROFILE | HYBRIDAUTH__GET_CONTACTS | HYBRIDAUTH__ADVANCEDAPI_READ_ATOMS_FROM_URL | HYBRIDAUTH__ADVANCEDAPI_READ_CATEGORIES | HYBRIDAUTH__ADVANCEDAPI_INSERT_ATOMS | HYBRIDAUTH__ADVANCEDAPI_UPDATE_ATOMS | HYBRIDAUTH__ADVANCEDAPI_DELETE_ATOMS | HYBRIDAUTH__ADVANCEDAPI_VIDEO_ENCLOSURES | HYBRIDAUTH__ADVANCEDAPI_ATOMS_HAVE_TITLE | HYBRIDAUTH__ADVANCEDAPI_ATOMS_HAVE_CONTENT,
    ];

    require_code('hybridauth');
}

function initiate_hybridauth_admin($mask = 0)
{
    $providers = find_all_hybridauth_admin_providers_matching($mask);

    global $CSP_NONCE;

    $_providers = [];
    foreach ($providers as $provider => $info) {
        $_providers[$provider] = [
            'enabled' => true,
            'nonce' => $CSP_NONCE,
            'keys' => $info['keys'],
        ] + $info['other_parameters'];
    }

    $config = [
        'providers' => $_providers,
        'callback' => find_script('hybridauth_admin'),
    ];

    require_code('hybridauth_admin_storage');
    $admin_storage = new ComposrHybridauthValuesStorage();

    $hybridauth = new Hybridauth\Hybridauth($config, null, $admin_storage);

    return [$hybridauth, $admin_storage, $providers];
}

function find_all_hybridauth_admin_providers_matching($mask)
{
    $providers = enumerate_hybridauth_providers(true);

    global $HYBRIDAUTH_PROVIDER_METADATA;

    $relevant_providers = [];
    foreach ($providers as $provider => $info) {
        $features = isset($HYBRIDAUTH_PROVIDER_METADATA[$provider]) ? $HYBRIDAUTH_PROVIDER_METADATA[$provider] : 0;

        if (($features & $mask) == $mask) {
            $relevant_providers[$provider] = $info;
        }
    }

    return $relevant_providers;
}

function hybridauth_provider_matches($provider, $mask)
{
    global $HYBRIDAUTH_PROVIDER_METADATA;

    $features = isset($HYBRIDAUTH_PROVIDER_METADATA[$provider]) ? $HYBRIDAUTH_PROVIDER_METADATA[$provider] : 0;

    return (($features & $mask) == $mask);
}
