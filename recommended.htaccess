# Stop any potential content-type sniffing vulnerabilities
<IfModule mod_headers.c>
Header set X-Content-Type-Options "nosniff"

# Enable these lines if you want whole domain to be HTTPS
#<If "%{HTTP_HOST} in { 'example.com', 'www.example.com' }">
#Header always set Strict-Transport-Security "max-age=31536000"
#Header set Content-Security-Policy "upgrade-insecure-requests"
#</If>
</IfModule>

# Disable inaccurate security scanning (Composr has its own). This disabling only works with modsecurity1 unfortunately.
<IfModule mod_security.c>
SecFilterEngine Off
SecFilterScanPOST Off
SecRuleRemoveById 300018 340147 340014 950119 950120 973331
</IfModule>

LimitRequestBody 524288000

# Set Composr to handle 404 errors. Assume Composr is in the root
<FilesMatch "(?<!\.jpg|\.jpeg|\.gif|\.png|\.ico|\.cur|\.svg|\.css|\.js)$">
ErrorDocument 404 /index.php?page=404
</FilesMatch>

# Compress some static resources
<IfModule mod_deflate.c>
<IfModule mod_filter.c>
AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/x-javascript
</IfModule>
</IfModule>

# We do not want for TAR files, due to IE bug http://blogs.msdn.com/b/wndp/archive/2006/08/21/content-encoding-not-equal-content-type.aspx (IE won't decompress again as it thinks it's a mistake)
<IfModule mod_setenvif.c>
SetEnvIfNoCase Request_URI \.tar$ no-gzip dont-vary
</IfModule>

# Cache expiry (stops having to first ask server to see if cache is updated)
#<IfModule mod_expires.c>
#ExpiresActive On

# We use timestamps in URLs to obviate this in CDN mode. Uncomment if you have Composr's CDN option configured and are using the CDN_FILTER directive.
#ExpiresByType image/gif "access plus 12 months"
#ExpiresByType image/jpg "access plus 12 months"
#ExpiresByType image/jpeg "access plus 12 months"
#ExpiresByType image/png "access plus 12 months"
#ExpiresByType image/vnd.microsoft.icon "access plus 12 months"
#ExpiresByType image/x-icon "access plus 12 months"
#ExpiresByType image/ico "access plus 12 months"
#ExpiresByType image/svg+xml "access plus 12 months"
#ExpiresByType image/webp "access plus 12 months"

# We use timestamps in URLs to obviate this
#ExpiresByType text/css "access plus 12 months"
#ExpiresByType text/javascript "access plus 12 months"
#ExpiresByType application/x-javascript "access plus 12 months"
#ExpiresByType application/javascript "access plus 12 months"
#</IfModule>

# Exotic file types we may want
AddType text/vtt .vtt

<IfModule mod_alias.c>
# Security - block access to .git
RedirectMatch 404 /\.git
</IfModule>

<IfModule mod_rewrite.c>

# Needed for mod_rewrite. Disable this line if your server does not have AllowOverride permission (can be one cause of Internal Server Errors)
Options +SymLinksIfOwnerMatch -MultiViews

RewriteEngine on

# Example to ensure canonical URLs: www.example.com --> example.com
#RewriteCond %{HTTP_HOST} ^www\.example\.com [NC]
#RewriteRule ^(.*)$ https://example.com/$1 [L,R=301]

# Example to ensure canonical URLs: HTTP --> HTTPS
#RewriteCond %{HTTP_HOST} ^(www\.)?example\.com [NC]
#RewriteCond %{SERVER_PORT} 80 [OR]
#RewriteCond %{HTTP_X_FORWARDED_PROTO} http
#RewriteRule ^(.*)$ https://example.com/$1 [L,R=301]

# Needed to pass HTTP-auth header on PHP CGI (it's not automatic, unlike PHP Module)
RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]

# Ad-hoc redirects go here. If this file is writeable, Composr will write in configured redirects below)
# RewriteRule somerule sometarget (leave this comment here!)

# If rewrites are directing to bogus URLs, try adding a "RewriteBase /" line, or a "RewriteBase /subdir" line if you're in a subdirectory. Requirements vary from server to server.

# Rewrite .gif animations for browsers that support APNG (LEGACY; when possible we want to get rid of the gifs, but IE11 does not yet support)
RewriteCond %{HTTP_USER_AGENT} (Chrom|Firefox|Safari)
RewriteCond %{REQUEST_FILENAME}.png -f
RewriteRule ^(themes/default/images/cns_emoticons/.*\.gif)$ $1.png [L,QSA]
RewriteCond %{HTTP_USER_AGENT} (Chrom|Firefox|Safari)
RewriteCond %{REQUEST_FILENAME}.png -f
RewriteRule ^(themes/default/images/cns_emoticons/.*\.gif)$ $1.png [L,QSA]
RewriteCond %{HTTP_USER_AGENT} (Chrom|Firefox|Safari)
RewriteCond %{REQUEST_FILENAME}.png -f
RewriteRule ^(themes/default/images/loading\.gif)$ themes/default/images/loading.gif.png [L,QSA]

# crossdomain.xml is actually Composr-driven
RewriteRule ^crossdomain\.xml data/crossdomain.php

# WebDAV implementation (requires the non-bundled WebDAV addon)
RewriteRule ^webdav(/.*|$) data_custom/webdav.php
RewriteCond %{HTTP_HOST} ^webdav\..*
RewriteRule ^(.*)$ data_custom/webdav.php

# Anything that would point to a real file should actually be allowed to do so. If you have a "RewriteBase /subdir" command, you may need to change to "%{DOCUMENT_ROOT}/subdir/$1".
RewriteCond $1 ^\d+.shtml [OR]
RewriteCond $1 \.(1st|3g2|3gp|3gp2|3gpp|3p|7z|aac|ai|aif|aifc|aiff|asf|atom|avi|bin|bmp|br|bz2|css|csv|cur|diff|dmg|doc|docx|dot|dotx|eml|exe|f4v|gif|gz|html|ico|ics|ini|iso|jpe|jpeg|jpg|js|json|keynote|log|m2v|m4v|mdb|mid|mov|mp2|mp3|mp4|mpa|mpe|mpeg|mpg|mpv2|numbers|odb|odc|odg|odi|odp|ods|odt|ogg|ogv|otf|pages|patch|pdf|php|png|ppt|pptx|ps|psd|pub|qt|ra|ram|rar|rm|rss|rtf|sql|svg|swf|tar|tga|tgz|tif|tiff|torrent|tpl|ttf|txt|yaml|yml|vsd|vtt|wav|weba|webm|webp|wma|wmv|woff|woff2|xls|xlsx|xml|xsd|xsl|zip)($|\?) [OR]
RewriteCond %{DOCUMENT_ROOT}/$1 -f [OR]
RewriteCond %{DOCUMENT_ROOT}/$1 -l [OR]
RewriteCond %{DOCUMENT_ROOT}/$1 -d [OR]
RewriteCond $1 -f [OR]
RewriteCond $1 -l [OR]
RewriteCond $1 -d
RewriteRule ^(.*) - [L]

#FAILOVER STARTS
### LEAVE THIS ALONE, AUTOMATICALLY MAINTAINED ###
#FAILOVER ENDS

# Redirect away from modules called directly by URL. Helpful as it allows you to "run" a module file in a debugger and still see it running.
RewriteRule ^([^=]*)pages/(modules|modules_custom)/([^/]*)\.php$ $1index.php\?page=$3 [L,QSA,R]

# PG STYLE: These have a specially reduced form (no need to make it too explicit that these are Wiki+). We shouldn't shorten them too much, or the actual zone or base URL might conflict
RewriteRule ^([^=]*)pg/s/([^\&\?]*)/index\.php$ $1index.php\?page=wiki&id=$2 [L,QSA]

# PG STYLE: These are standard patterns
RewriteRule ^([^=]*)pg/([^/\&\?]*)/([^/\&\?]*)/([^\&\?]*)/index\.php(.*)$ $1index.php\?page=$2&type=$3&id=$4$5 [L,QSA]
RewriteRule ^([^=]*)pg/([^/\&\?]*)/([^/\&\?]*)/index\.php(.*)$ $1index.php\?page=$2&type=$3$4 [L,QSA]
RewriteRule ^([^=]*)pg/([^/\&\?]*)/index\.php(.*)$ $1index.php\?page=$2$3 [L,QSA]
RewriteRule ^([^=]*)pg/index\.php(.*)$ $1index.php\?page=$2 [L,QSA]

# PG STYLE: Now the same as the above sets, but without any additional parameters (and thus no index.php)
RewriteRule ^([^=]*)pg/s/([^\&\?]*)$ $1index.php\?page=wiki&id=$2 [L,QSA]
RewriteRule ^([^=]*)pg/([^/\&\?]*)/([^/\&\?]*)/([^\&\?]*)/$ $1index.php\?page=$2&type=$3&id=$4 [L,QSA]
RewriteRule ^([^=]*)pg/([^/\&\?]*)/([^/\&\?]*)/([^\&\?]*)$ $1index.php\?page=$2&type=$3&id=$4 [L,QSA]
RewriteRule ^([^=]*)pg/([^/\&\?]*)/([^/\&\?]*)$ $1index.php\?page=$2&type=$3 [L,QSA]
RewriteRule ^([^=]*)pg/([^/\&\?]*)$ $1index.php\?page=$2 [L,QSA]

# PG STYLE: And these for those nasty situations where index.php was missing and we couldn't do anything about it (usually due to keep_session creeping into a semi-cached URL)
RewriteRule ^([^=]*)pg/s/([^\&\?\.]*)&(.*)$ $1index.php\?$3&page=wiki&id=$2 [L,QSA]
RewriteRule ^([^=]*)pg/([^/\&\?\.]*)/([^/\&\?\.]*)/([^/\&\?\.]*)&(.*)$ $1index.php\?$5&page=$2&type=$3&id=$4 [L,QSA]
RewriteRule ^([^=]*)pg/([^/\&\?\.]*)/([^/\&\?\.]*)&(.*)$ $1index.php\?$4&page=$2&type=$3 [L,QSA]
RewriteRule ^([^=]*)pg/([^/\&\?\.]*)&(.*)$ $1index.php\?$3&page=$2 [L,QSA]

# HTM STYLE: These have a specially reduced form (no need to make it too explicit that these are Wiki+). We shouldn't shorten them too much, or the actual zone or base URL might conflict
RewriteRule ^(site|forum|adminzone|cms|docs)/s/([^\&\?]*)\.htm$ $1/index.php\?page=wiki&id=$2 [L,QSA]
RewriteRule ^s/([^\&\?]*)\.htm$ index\.php\?page=wiki&id=$1 [L,QSA]

# HTM STYLE: These are standard patterns
RewriteRule ^(site|forum|adminzone|cms|docs)/([^/\&\?]+)/([^/\&\?]*)/([^\&\?]*)\.htm$ $1/index.php\?page=$2&type=$3&id=$4 [L,QSA]
RewriteRule ^(site|forum|adminzone|cms|docs)/([^/\&\?]+)/([^/\&\?]*)\.htm$ $1/index.php\?page=$2&type=$3 [L,QSA]
RewriteRule ^(site|forum|adminzone|cms|docs)/([^/\&\?]+)\.htm$ $1/index.php\?page=$2 [L,QSA]
RewriteRule ^([^/\&\?]+)/([^/\&\?]*)/([^\&\?]*)\.htm$ index.php\?page=$1&type=$2&id=$3 [L,QSA]
RewriteRule ^([^/\&\?]+)/([^/\&\?]*)\.htm$ index.php\?page=$1&type=$2 [L,QSA]
RewriteRule ^([^/\&\?]+)\.htm$ index.php\?page=$1 [L,QSA]

# SIMPLE STYLE: These have a specially reduced form (no need to make it too explicit that these are Wiki+). We shouldn't shorten them too much, or the actual zone or base URL might conflict
#RewriteRule ^(site|forum|adminzone|cms|docs)/s/([^\&\?]*)$ $1/index.php\?page=wiki&id=$2 [L,QSA]
#RewriteRule ^s/([^\&\?]*)$ index\.php\?page=wiki&id=$1 [L,QSA]

# SIMPLE STYLE: These are standard patterns
#RewriteRule ^(site|forum|adminzone|cms|docs)/([^/\&\?]+)/([^/\&\?]*)/([^\&\?]*)$ $1/index.php\?page=$2&type=$3&id=$4 [L,QSA]
#RewriteRule ^(site|forum|adminzone|cms|docs)/([^/\&\?]+)/([^/\&\?]*)$ $1/index.php\?page=$2&type=$3 [L,QSA]
#RewriteRule ^(site|forum|adminzone|cms|docs)/([^/\&\?]+)$ $1/index.php\?page=$2 [L,QSA]
#RewriteRule ^([^/\&\?]+)/([^/\&\?]*)/([^\&\?]*)$ index.php\?page=$1&type=$2&id=$3 [L,QSA]
#RewriteRule ^([^/\&\?]+)/([^/\&\?]*)$ index.php\?page=$1&type=$2 [L,QSA]
#RewriteRule ^([^/\&\?]+)$ index.php\?page=$1 [L,QSA]

</IfModule>


<RequireAll>
require all granted
# IP bans go here (leave this comment here! If this file is writeable, Composr will write in IP bans below, in sync with its own DB-based banning - this makes DOS/hack-attack prevention stronger)
# Require not ip xxx.xx.x.x (leave this comment here!)
</RequireAll>
