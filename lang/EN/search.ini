[strings]
BLOCK_side_tag_cloud_DESCRIPTION=Show a tag cloud, based on content meta-keywords.
BLOCK_side_tag_cloud_USE=This is a common Web 2.0 feature, designed to provide automatic navigation through content-rich websites. Be aware that the tag cloud doesn't filter based on privileges: don't use sensitive words in your keywords if you're using this block.
BLOCK_side_tag_cloud_PARAM_param_TITLE=Content type
BLOCK_side_tag_cloud_PARAM_title_TITLE=Title
BLOCK_side_tag_cloud_PARAM_zone_TITLE=Zone
BLOCK_side_tag_cloud_PARAM_max_TITLE=Maximum to show
BLOCK_side_tag_cloud_PARAM_param=You may use this parameter to limit the cloud to a specific content type (hook-type: 'systems/meta'). Default: ''.
BLOCK_side_tag_cloud_PARAM_zone=Advanced feature. The zone to look for the search module in. Default: search for it.
BLOCK_side_tag_cloud_PARAM_max=The maximum number of tags to show (the most frequent of all will be shown with priority). Default: '30'.
BLOCK_side_tag_cloud_PARAM_title=The title for the box. Default: 'Tag cloud'.
TAG_CLOUD=Tag cloud
TAGS=Tags
BLOCK_main_search_DESCRIPTION=Place a search box.
BLOCK_main_search_USE=Allows quick searching for content.
BLOCK_main_search_PARAM_title_TITLE=Title
BLOCK_main_search_PARAM_input_fields_TITLE=Input fields
BLOCK_main_search_PARAM_limit_to_TITLE=Limit to
BLOCK_main_search_PARAM_search_under_TITLE=Search under
BLOCK_main_search_PARAM_zone_TITLE=Zone
BLOCK_main_search_PARAM_sort_TITLE=Sort by
BLOCK_main_search_PARAM_author_TITLE=Author
BLOCK_main_search_PARAM_days_TITLE=Days
BLOCK_main_search_PARAM_direction_TITLE=Direction
BLOCK_main_search_PARAM_only_titles_TITLE=Only titles
BLOCK_main_search_PARAM_only_search_meta_TITLE=Only search metadata
BLOCK_main_search_PARAM_extra_TITLE=Extra
BLOCK_main_search_PARAM_limit_to=Optionally, only search the given content types (hook-type: 'modules/search'). You can also specify multiple content types here. If you do not make a selection, a hard-coded selection of content types will be searched (not a complete selection). Default: ''.
BLOCK_main_search_PARAM_search_under=Advanced feature. Only search underneath the given category ID (only applicable if "Limit To" is set).
BLOCK_main_search_PARAM_zone=Advanced feature. The zone to look for the search module in. Default: search for it.
BLOCK_main_search_PARAM_sort=Field to sort by (must be either 'add_date', 'title', or 'relevance'). Default: 'relevance'.
BLOCK_main_search_PARAM_title=Title for block. Default: 'Search'.
BLOCK_main_search_PARAM_author=Advanced feature. Author/submitter/username to match with or blank. Default: ''.
BLOCK_main_search_PARAM_days=Only find records created within this many days, or -1 for no limit. Default: '-1'.
BLOCK_main_search_PARAM_direction=Direction (must be either 'ASC', 'DESC'). Default: 'DESC'.
BLOCK_main_search_PARAM_only_titles=Whether to search only titles. Default: '0'.
BLOCK_main_search_PARAM_only_search_meta=Advanced feature. Whether to search only metadata (the meta description and keywords). Default: '0'.
BLOCK_main_search_PARAM_extra=Advanced feature. Arbitrary extra hidden information to be passed through to the website's search engine, to hard-code certain search parameters. E.g. 'option_11=Sports' to force only results where CPF #4 contains the word 'Sports'. Default: ''.
BLOCK_main_search_PARAM_input_fields=Advanced feature. By default, you'd only have one search field on your search block (the "content" field, which will search everything). But if you're doing an advanced search (you've set "Limit To"), then you can allow the user to do more complex searches. Put all the field names you'd like to be searchable, separated with commas; after each add "=The Title The Field Should Have On Your Block". E.g. 'content=Search for,option_11=Favourite food' (this example is for a members search, where CPF ID#11 happens to store the member's food preference). You would find the field names by analysing the HTML on the corresponding full advanced search form. Default: 'content=Search for'.
BLOCK_top_search_DESCRIPTION=Place a search box.
BLOCK_top_search_USE=Allows quick searching for content.
BLOCK_top_search_PARAM_title_TITLE=Title
BLOCK_top_search_PARAM_input_fields_TITLE=Input fields
BLOCK_top_search_PARAM_limit_to_TITLE=Limit to
BLOCK_top_search_PARAM_search_under_TITLE=Search under
BLOCK_top_search_PARAM_zone_TITLE=Zone
BLOCK_top_search_PARAM_sort_TITLE=Sort by
BLOCK_top_search_PARAM_author_TITLE=Author
BLOCK_top_search_PARAM_days_TITLE=Days
BLOCK_top_search_PARAM_direction_TITLE=Direction
BLOCK_top_search_PARAM_only_titles_TITLE=Only titles
BLOCK_top_search_PARAM_only_search_meta_TITLE=Only search metadata
BLOCK_top_search_PARAM_extra_TITLE=Extra
BLOCK_top_search_PARAM_limit_to=Optionally, only search the given content types (hook-type: 'modules/search'). You can also specify multiple content types here. If you do not make a selection, a hard-coded selection of content types will be searched (not a complete selection). Default: ''.
BLOCK_top_search_PARAM_search_under=Advanced feature. Only search underneath the given category ID (only applicable if "Limit To" is set).
BLOCK_top_search_PARAM_zone=Advanced feature. The zone to look for the search module in. Default: search for it.
BLOCK_top_search_PARAM_sort=Field to sort by (must be either 'add_date', 'title', or 'relevance'). Default: 'relevance'.
BLOCK_top_search_PARAM_title=Title for block. Default: 'Search'.
BLOCK_top_search_PARAM_author=Advanced feature. Author/submitter/username to match with or blank. Default: ''.
BLOCK_top_search_PARAM_days=Only find records created within this many days, or -1 for no limit. Default: '-1'.
BLOCK_top_search_PARAM_direction=Direction (must be either 'ASC', 'DESC'). Default: 'DESC'.
BLOCK_top_search_PARAM_only_titles=Whether to search only titles. Default: '0'.
BLOCK_top_search_PARAM_only_search_meta=Advanced feature. Whether to search only metadata (the meta description and keywords). Default: '0'.
BLOCK_top_search_PARAM_extra=Advanced feature. Arbitrary extra hidden information to be passed through to the website's search engine, to hard-code certain search parameters. E.g. 'option_11=Sports' to force only results where CPF #4 contains the word 'Sports'. Default: ''.
BLOCK_top_search_PARAM_input_fields=Advanced feature. By default, you'd only have one search field on your search block (the "content" field, which will search everything). But if you're doing an advanced search (you've set "Limit To"), then you can allow the user to do more complex searches. Put all the field names you'd like to be searchable, separated with commas; after each add "=The Title The Field Should Have On Your Block". E.g. 'content=Search for,option_11=Favourite food' (this example is for a members search, where CPF ID#11 happens to store the member's food preference). You would find the field names by analysing the HTML on the corresponding full advanced search form. Default: 'content=Search for'.
MAY_LEAVE_BLANK_ADVANCED=You may leave this field blank if you choose to do a template search using the advanced options below.
ADDITIONAL_FILTERS=Additional filters
SEARCH_HOOK_NOT_AVAILABLE=This search type is not available: it is likely the content it is for has been disabled, or does not yet exist.
USERGROUP_SEARCH_COMBO=[{1}]
SHOW_SEARCH_FORM=Show search form
ONLY_TITLES=Search only titles
SEARCH_UNDERNEATH=Search underneath
SEARCH_TITLE=Search content
_SEARCH_TITLE=Search &ndash; {1}
SEARCH_FOR=Search for
SEARCH_USER=Author / Submitter
SEARCH_DOMAIN=Search the following content types:
NO_RESULTS_SEARCH=Your search yielded no results. Please try a less specific search.
RELEVANCE_SORT=Relevance
DIRECTION=Direction
NUM_RESULTS={1} {1|result|results}
NO_RESULTS_DAYS=No results could be found for your {1} {1|day|days} search, so the following results are for an all-time search.
ALSO_ADMIN_ZONE_SEARCH=You can also use your staff access to search the <a href="{1}">administration features</a> for the same keyword.
SEARCH_OPTIONS=Search options
SEARCH_RESULTS=Search results
_SEARCH_RESULTS=Search results ({1})
CONFIG_OPTION_search_results_per_page=The number of search results to be shown on each pagination-screen of the search results.
SEARCH_RESULTS_PER_PAGE=Search results per page
SEARCH_QUERY_TOO_SLOW=Query failed. This usually happens if there are too many applicable results to consider.
DID_YOU_MEAN=Did you mean: <a href="{2}">{1}</a>?
PRIVILEGE_autocomplete_past_search=Autocomplete searches based on other's past searches
MINIMUM_AUTOCOMPLETE_LENGTH=Minimum autocomplete length
CONFIG_OPTION_minimum_autocomplete_length=The minimum number of characters before autocomplete kicks in.
MINIMUM_AUTOCOMPLETE_PAST_SEARCH=Minimum past searches to autocomplete against
CONFIG_OPTION_minimum_autocomplete_past_search=The minimum number of times a search phrase was searched with before it may be provided as an autocomplete completion. Lower numbers will lead to noise and reduction in privacy, while higher numbers may lead to a lack of usefulness.
MAXIMUM_AUTOCOMPLETE_SUGGESTIONS=Maximum autocomplete suggestions
CONFIG_OPTION_maximum_autocomplete_suggestions=The maximum number of suggestions autocomplete may provide.
SEARCH_WITH_DATE_RANGE=Search using date range
CONFIG_OPTION_search_with_date_range=Whether to feature a date range option on search forms rather than a simpler maximum age (minimum recency) option.
COMPOSR_FAST_CUSTOM_INDEX=Composr fast custom index
COMPOSR_FAST_CUSTOM_INDEX_ENABLE=Composr fast custom index: When to enable
CONFIG_GROUP_DEFAULT_DESCRIP_COMPOSR_FAST_CUSTOM_INDEX_ENABLE=The Composr fast custom index provides a faster alternative to standard database full-text search engines for certain types of search query.
COMPOSR_FAST_CUSTOM_INDEX__MAX_POST_LENGTH=Maximum post length
CONFIG_OPTION_composr_fast_custom_index__max_post_length=The maximum length of a post to index in characters.
COMPOSR_FAST_CUSTOM_INDEX__ALLOW_FUZZY_SEARCH=Allow fuzzy search
CONFIG_OPTION_composr_fast_custom_index__allow_fuzzy_search=Whether to allow fuzzy searching. With fuzzy searching, individual ngrams (basically keywords) in the search query are indicators for ranking but not actually required unless prefixed with <kbd>+</kbd>. Fuzzy searching significantly slows down searches.
COMPOSR_FAST_CUSTOM_INDEX__SCALE_BY_COMMONALITY=Scale by commonality
CONFIG_OPTION_composr_fast_custom_index__scale_by_commonality=Whether to include ngram (basically keyword) commonality when ranking searches. For example, if you use a very obscure word in a query then its relative-obscurity will make its relative-presence be weighted higher than for less obscure words in your query.
COMPOSR_FAST_CUSTOM_INDEX__USE_IMPRECISE_ORDERING=Use imprecise ordering
CONFIG_OPTION_composr_fast_custom_index__use_imprecise_ordering=Whether to rank based only on the most obscure ngram (basically keyword) in your query. This is significantly faster.
COMPOSR_FAST_CUSTOM_INDEX__DO_STEMMING=Do stemming
CONFIG_OPTION_composr_fast_custom_index__do_stemming=Whether to do stemming. This means words like 'buy' and 'buyer' will be indexed as the same word. If you change this setting you will need to rebuild the index.
COMPOSR_FAST_CUSTOM_INDEX__MAX_NGRAM_SIZE=Maximum ngram indexing size
CONFIG_OPTION_composr_fast_custom_index__max_ngram_size=The maximum number of sequential ngrams (basically keywords) that will be indexed together. Ngram sequencing is what allows quoted phrases to be searched. So for example, if you have a value of 3 here, you can search for 3 words in a quote. If this number is greater than 1 it will use a lot more disk space &ndash; exponentially more based on how high a number you choose. If you change this setting you will need to rebuild the index.
COMPOSR_FAST_CUSTOM_INDEX__ENABLE=Enable always
CONFIG_OPTION_composr_fast_custom_index__enable=Enable the Composr fast custom index for all queries. For the simplest queries that the database's full-text index can handle fastest, on very large databases, the Composr fast index may be about 3x slower &ndash; but enabling it always will result in a consistent experience.
COMPOSR_FAST_CUSTOM_INDEX__ENABLE_FOR_NGRAMS=Enable for particular ngrams
CONFIG_OPTION_composr_fast_custom_index__enable_for_ngrams=Enable for particular ngrams (basically keywords). Separate them by commas. You may want to do this for very common words across your website that cause database full-text indexing to run slowly due to over-indexing. For example, for a car website, 'car'. Composr fast custom index usually handles over-indexed words much more efficiently.
COMPOSR_FAST_CUSTOM_INDEX__ENABLE_FOR_FILTERED=Enable for filtered queries
CONFIG_OPTION_composr_fast_custom_index__enable_for_filtered=Enable for queries that have filtering on top of the actual search query. For example, limiting a search to a particular author or category. Composr fast custom index usually handles filtered queries much more efficiently.
COMPOSR_FAST_CUSTOM_INDEX__ENABLE_FOR_NO_FULLTEXT=Enable when no full-text support
CONFIG_OPTION_composr_fast_custom_index__enable_for_no_fulltext=Enable for websites where the backend database has no full-text index support. A lack of full-text support would make querying using native database functionality very slow. Most supported database software does support full-text indexing.
COMPOSR_FAST_CUSTOM_INDEX__ENABLE_FOR_UNDER_RADAR=Enable for short search queries
CONFIG_OPTION_composr_fast_custom_index__enable_for_under_radar=Enable for very short search queries that are below the minimum word length of the database software, and hence cannot work using full-text indexing. Composr fast custom index has no word length restrictions.
COMPOSR_FAST_CUSTOM_INDEX__ENABLE_FOR_MINIMUM_NGRAM_COUNT=Enable for queries with at least this many ngrams
CONFIG_OPTION_composr_fast_custom_index__enable_for_minimum_ngram_count=Queries with a lot of ngrams (basically keywords) may be very slow in full-text searches, but (as long as fuzzy searching is disabled, and imprecise ordering is enabled) can execute very quickly using the Composr fast custom index.
SEARCH_MAXIMUM_RESULT_COUNT_POINT=Maximum count point
CONFIG_OPTION_search_maximum_result_count_point=Don't try and count total search results past this number. Counting total results is a slow process if there are a lot of matches, especially with natural/fuzzy searching, so imposing a count limit is sensible.
SEARCH_DO_DAYS_FALLBACK=Fallback to no day filter
CONFIG_OPTION_search_do_days_fallback=If no results are found for a search with a days filter, repeat the search with no days filter and show a message about it. Enabling this option will impose a performance/responsiveness cost as some queries will happen multiple times &ndash; but it also makes things more user-friendly.
SEARCH_DAYS_DEFAULT=Default search days filter
CONFIG_OPTION_search_days_default=The default number of days to search back to. Blank means to not restrict by default.
SEARCH_DID_YOU_MEAN=Provide spelling suggestions
CONFIG_OPTION_search_did_you_mean=If a search query looks misspelled then suggest to repeat the search with corrected spelling.
DATE_RANGE_LABEL=Submitted between
JOINED_DATE_RANGE=Joined between
CONFIG_CATEGORY_SEARCH=Search
CONFIG_CATEGORY_DESCRIPTION__SEARCH=Options relating to the search addon.
SEARCH_DEFAULTS=Search defaults
DEFAULT_SEARCH_COMCODE_PAGES=Search Comcode pages
CONFIG_OPTION_search_comcode_pages=Include Comcode pages in searches by default.
BLOCK_TOP_SEARCH=Search
CONFIG_OPTION_block_top_search=Show a search bar.
SEARCHES=Searches
DESCRIPTION_CLEAR_COMPOSR_FAST_CUSTOM_INDEX=Clear the Composr fast custom index, so it will be regenerated next time the system scheduler runs. This is an intensive process so should only be done if there's a good reason.

MODULE_TRANS_NAME_search=Search
BLOCK_TRANS_NAME_main_search=Search form
BLOCK_TRANS_NAME_side_search=Search form
BLOCK_TRANS_NAME_top_search=Search form
BLOCK_TRANS_NAME_side_tag_cloud=Tag cloud
