<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2023

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    leader_board
 */

/**
 * Module page class.
 */
class Module_leader_board
{
    /**
     * Find details of the module.
     *
     * @return ?array Map of module info (null: module is disabled)
     */
    public function info() : ?array
    {
        $info = [];
        $info['author'] = 'Patrick Schmalstig';
        $info['organisation'] = 'ocProducts';
        $info['hacked_by'] = null;
        $info['hack_version'] = null;
        $info['version'] = 2;
        $info['locked'] = false;
        return $info;
    }

    /**
     * Find entry-points available within this module.
     *
     * @param  boolean $check_perms Whether to check permissions
     * @param  ?MEMBER $member_id The member to check permissions as (null: current user)
     * @param  boolean $support_crosslinks Whether to allow cross links to other modules (identifiable via a full-page-link rather than a screen-name)
     * @param  boolean $be_deferential Whether to avoid any entry-point (or even return null to disable the page in the Sitemap) if we know another module, or page_group, is going to link to that entry-point. Note that "!" and "browse" entry points are automatically merged with container page nodes (likely called by page-groupings) as appropriate.
     * @return ?array A map of entry points (screen-name=>language-code/string or screen-name=>[language-code/string, icon-theme-image]) (null: disabled)
     */
    public function get_entry_points(bool $check_perms = true, ?int $member_id = null, bool $support_crosslinks = true, bool $be_deferential = false) : ?array
    {
        if (!addon_installed('leader_board') || !addon_installed('points')) {
            return null;
        }

        if ($GLOBALS['SITE_DB']->query_select_value('leader_board', 'COUNT(*)') == 0) {
            return [];
        }
        return [
            '!' => ['POINT_LEADER_BOARD', 'menu/social/leader_board'],
        ];
    }

    public $title;

    /**
     * Module pre-run function. Allows us to know metadata for <head> before we start streaming output.
     *
     * @return ?Tempcode Tempcode indicating some kind of exceptional output (null: none)
     */
    public function pre_run() : ?object
    {
        $error_msg = new Tempcode();
        if (!addon_installed__messaged('leader_board', $error_msg)) {
            return $error_msg;
        }
        if (!addon_installed__messaged('points', $error_msg)) {
            return $error_msg;
        }

        $type = get_param_string('type', 'browse');

        require_lang('leader_board');

        $this->title = get_screen_title('POINT_LEADER_BOARD');

        return null;
    }

    /**
     * Execute the module.
     *
     * @return Tempcode The result of execution
     */
    public function run() : object
    {
        if (!cron_installed()) {
            attach_message(do_lang_tempcode('CRON_NEEDED_TO_WORK', escape_html(get_tutorial_url('tut_configuration'))), 'warn');
        }

        $id = get_param_integer('id', null);
        $date = get_param_integer('lb_date_and_time', null);
        $start = get_param_integer('lb_start', 0);
        $max = get_param_integer('lb_max', 52);
        $all = get_param_integer('all', 0);

        $list = [];

        require_code('leader_board');
        require_code('points');

        require_css('leader_board');
        require_lang('leader_board');

        // If id not provided, display selection UI for choosing a leader-board
        if ($id === null) {
            $tpl_li = new Tempcode();
            $sets = $GLOBALS['SITE_DB']->query_select('leader_boards', ['*'], [], '');
            foreach ($sets as $set) {
                $_url = build_url(['page' => '_SELF', 'type' => 'browse', 'id' => $set['id'], 'all' => $all, 'lb_date_and_time' => $date], '_SELF');
                $tpl = do_template('INDEX_SCREEN_FANCIER_ENTRY', [
                    '_GUID' => 'bvjnkjlgn3lgj3pj3lgojlvblfbvmdbmsdlb',
                    'URL' => $_url,
                    'NAME' => strval($set['lb_title']),
                    'TITLE' => strval($set['lb_title']),
                    'DESCRIPTION' => '',
                ]);
                $tpl_li->attach($tpl->evaluate());
            }
            $list[''] = $tpl_li;

            return do_template('INDEX_SCREEN_FANCIER_SCREEN', ['TITLE' => $this->title, 'ARRAY' => true, 'CONTENT' => $list, 'POST' => '', 'PRE' => '']);
        }

        // Get leader-board
        $boards = $GLOBALS['SITE_DB']->query_select('leader_boards', ['*'], ['id' => $id], '', 1);
        if (empty($boards)) {
            warn_exit(do_lang_tempcode('NO_ENTRIES'));
        }

        $board = $boards[0];

        // Determine number of sets
        $query = 'SELECT COUNT(DISTINCT lb_date_and_time) FROM ' . $GLOBALS['SITE_DB']->get_table_prefix() . 'leader_board WHERE lb_leader_board_id=' . strval($id);
        if ($date !== null) {
            $query .= ' AND lb_date_and_time=' . strval($date);
        }
        $num_sets = $GLOBALS['SITE_DB']->query_value_if_there($query);

        // No sets? The leader-board has probably not generated yet
        if ($num_sets == 0) {
            warn_exit(do_lang_tempcode('LEADER_BOARD_NOT_GENERATED', escape_html($board['lb_title'])));
        }

        // Find timestamps for all sets (with pagination support)
        $query = 'SELECT DISTINCT lb_date_and_time FROM ' . $GLOBALS['SITE_DB']->get_table_prefix() . 'leader_board WHERE lb_leader_board_id=' . strval($id);
        if ($date !== null) {
            $query .= ' AND lb_date_and_time=' . strval($date);
        }
        $sets = $GLOBALS['SITE_DB']->query($query . ' ORDER BY lb_date_and_time DESC', $max, $start);
        if (empty($sets)) { // Should not happen because of $num_sets == 0 check
            warn_exit(do_lang_tempcode('LEADER_BOARD_NOT_GENERATED', escape_html($board['lb_title'])));
        }

        // If there are is than one set and we are not explicitly requesting all of them, display a selection UI based on dates
        if ($num_sets > 1 && $all == 0) {
            $tpl_li = new Tempcode();
            foreach ($sets as $set) {
                $_url = build_url(['page' => '_SELF', 'type' => 'browse', 'id' => $id, 'lb_date_and_time' => $set['lb_date_and_time']], '_SELF');
                $tpl = do_template('INDEX_SCREEN_FANCIER_ENTRY', [
                    '_GUID' => 'fvnsfkjehfo3i4tl3g5n42itjg4ljg434',
                    'URL' => $_url,
                    'NAME' => get_timezoned_date($set['lb_date_and_time']),
                    'TITLE' => get_timezoned_date($set['lb_date_and_time']),
                    'DESCRIPTION' => '',
                ]);
                $tpl_li->attach($tpl->evaluate());
            }
            $list[do_lang('DATE')] = $tpl_li;

            return do_template('INDEX_SCREEN_FANCIER_SCREEN', ['_GUID' => 'kghekgh4lkg4lktktgknviu42gh2ot', 'TITLE' => $this->title, 'ARRAY' => true, 'CONTENT' => $list, 'POST' => '', 'PRE' => '']);
        }

        // Are there any rank images going to display?
        $or_list = '1=1';
        $admin_groups = $GLOBALS['FORUM_DRIVER']->get_super_admin_groups();
        $moderator_groups = $GLOBALS['FORUM_DRIVER']->get_moderator_groups();
        foreach (array_merge($admin_groups, $moderator_groups) as $group_id) {
            $or_list .= ' AND id<>' . strval($group_id);
        }
        $has_rank_images = (get_forum_type() == 'cns') && ($GLOBALS['FORUM_DB']->query_value_if_there('SELECT COUNT(*) FROM ' . $GLOBALS['FORUM_DB']->get_table_prefix() . 'f_groups WHERE (' . $or_list . ') AND ' . db_string_not_equal_to('g_rank_image', '')) != 0);

        // Continue on to displaying the leader-board...

        $first_set = $sets[count($sets) - 1]['lb_date_and_time'];
        $sets = collapse_1d_complexity('lb_date_and_time', $sets);

        $out = new Tempcode();
        foreach ($sets as $index => $date) {
            $rows = get_leader_board($id, $date);
            $set_tpl = new Tempcode();
            foreach ($rows as $row) {
                if (get_forum_type() == 'cns') {
                    $points_url = null; // No link, as $profile_url essentially links to the same place
                } else {
                    $points_url = points_url($row['lb_member']);
                }

                $profile_url = $GLOBALS['FORUM_DRIVER']->member_profile_url($row['lb_member'], true);

                $username = $GLOBALS['FORUM_DRIVER']->get_username($row['lb_member']);

                if (addon_installed('cns_forum')) {
                    require_lang('cns_polls');
                    $voting_power = $row['lb_voting_power'];
                    $voting_control = $row['lb_voting_control'];
                } else {
                    $voting_power = null;
                    $voting_control = null;
                }

                $set_tpl->attach(do_template('POINTS_LEADER_BOARD_ROW', [
                    '_GUID' => 'fuyi2f2yrhhf894fh1hvnu31ht9945tbnjk',
                    'POINTS_URL' => $points_url,
                    'PROFILE_URL' => $profile_url,
                    '_POINTS' => strval($row['lb_points']),
                    'POINTS' => integer_format($row['lb_points']),
                    '_VOTING_POWER' => (($voting_power !== null) ? float_to_raw_string($voting_power, 10) : ''),
                    'VOTING_POWER' => (($voting_power !== null) ? float_format($voting_power, 3) : ''),
                    '_VOTING_CONTROL' => (($voting_control !== null) ? float_to_raw_string($voting_control, 10) : ''),
                    'VOTING_CONTROL' => (($voting_control !== null) ? float_format($voting_control, 3) : ''),
                    'USERNAME' => $username,
                    'ID' => strval($row['lb_member']),
                    'HAS_RANK_IMAGES' => $has_rank_images,
                ]));
            }
            $nice_date = get_timezoned_date($date, false);
            $start_date = strtotime('-1 ' . $board['lb_timeframe'], $date);
            $nice_start_date = get_timezoned_date($start_date, false);

            $about = ($board['lb_type'] == 'earners') ? do_lang_tempcode('LEADER_BOARD_ABOUT_earners', integer_format(count($sets)), escape_html($nice_start_date), escape_html($nice_date)) : do_lang_tempcode('LEADER_BOARD_ABOUT_holders', integer_format(count($sets)), escape_html($nice_date));

            $url = build_url(['page' => '_SELF', 'id' => $board['id']], '_SELF');

            $out->attach(do_template('POINTS_LEADER_BOARD_SET', [
                '_GUID' => 'f2r81347fh3f49y134tgf752ythho8317gh1',
                '_SET_NUMBER' => strval($index),
                '_TYPE' => $board['lb_type'],
                '_COUNT' => strval(count($rows)),
                '_DATE' => strval($date),
                '_START_DATE' => strval($start_date),
                'URL' => $url,
                'TITLE' => $board['lb_title'],
                'ABOUT' => $about,
                'ROWS' => $set_tpl,
                'IS_BLOCK' => false,
            ]));
        }

        require_code('templates_pagination');
        $pagination = pagination(do_lang_tempcode('POINT_LEADER_BOARD'), $start, 'lb_start', $max, 'lb_max', $num_sets);

        $tpl = do_template('POINTS_LEADER_BOARD_SCREEN', [
            '_GUID' => 'gg76ty2utkidh12iotbtuyg254if3yt3867tg3oti8',
            '_ID' => strval($board['id']),
            '_TYPE' => $board['lb_type'],
            '_COUNT' => strval(count($rows)),
            'TITLE' => $this->title,
            'LEADER_BOARD_TYPE' => do_lang_tempcode('LEADER_BOARD_TYPE_SHORT_' . $board['lb_type']),
            'LEADER_BOARD_TITLE' => $board['lb_title'],
            'SETS' => $out,
            'PAGINATION' => $pagination,
        ]);

        require_code('templates_internalise_screen');
        return internalise_own_screen($tpl);
    }
}
