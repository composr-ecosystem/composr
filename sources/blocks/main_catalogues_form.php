<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2023

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

// TODO: Document this new block

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    catalogues
 */

/**
 * Block class.
 */
class Block_main_catalogues_form
{
    /**
     * Find details of the block.
     *
     * @return ?array Map of block info (null: block is disabled)
     */
    public function info() : ?array
    {
        $info = [];
        $info['author'] = 'Patrick Schmalstig';
        $info['organisation'] = 'PDStig, LLC';
        $info['hacked_by'] = null;
        $info['hack_version'] = null;
        $info['version'] = 1;
        $info['locked'] = false;
        $info['min_cms_version'] = 11.0;
        $info['addon'] = 'catalogues';
        $info['parameters'] = ['param', 'only_one', 'redirect', 'guid'];
        return $info;
    }

    /**
     * Find caching details for the block.
     *
     * @return ?array Map of cache details (cache_on and ttl) (null: block is disabled)
     */
    public function caching_environment() : ?array
    {
        $info = [];
        $info['cache_on'] = <<<'PHP'
        (post_param_string('_block_id', '') != '')
        ?
        null // No cache when submitting the form
        :
        [
            md5(get_ip_address() . ' ' . strval(get_member())), // Separate cache by member / IP so CAPTCHA works
            array_key_exists('param', $map) ? $map['param'] : '',
            array_key_exists('only_one', $map) ? $map['only_one'] : '',
            array_key_exists('guid', $map) ? $map['guid'] : '',
            array_key_exists('redirect', $map) ? $map['redirect'] : '',
        ]
PHP;
        $info['ttl'] = 60 * 24;
        return $info;
    }

    /**
     * Execute the block.
     *
     * @param  array $map A map of parameters
     * @return Tempcode The result of execution
     */
    public function run(array $map) : object
    {
        $error_msg = new Tempcode();
        if (!addon_installed__messaged('catalogues', $error_msg)) {
            return $error_msg;
        }

        require_code('fields');
        require_code('catalogues2');
        require_lang('catalogues');

        $text = new Tempcode();

        // Options...

        if (addon_installed('captcha')) {
            require_code('captcha');
            $use_captcha = ((get_option('captcha_on_feedback') == '1') && (use_captcha()));
        } else {
            $use_captcha = false;
        }

        if (@cms_empty_safe($map['param'])) {
            $catalogue_name = $GLOBALS['SITE_DB']->query_select_value_if_there('catalogue_categories', 'c_name', ['id' => db_get_first_id()]);
            if ($catalogue_name === null) {
                return do_template('RED_ALERT', ['TEXT' => do_lang_tempcode('MISSING_RESOURCE', 'catalogue')]);
            }
        } else {
            $catalogue_name = $GLOBALS['SITE_DB']->query_select_value_if_there('catalogues', 'c_name', ['c_name' => $map['param']]);
            if ($catalogue_name === null) {
                return do_template('RED_ALERT', ['TEXT' => do_lang_tempcode('MISSING_RESOURCE', 'catalogue')]);
            }
        }

        // If only_one, check if the member already submitted an entry
        if (isset($map['only_one']) && ($map['only_one'] == '1')) {
            if (is_guest(get_member())) {
                return do_template('RED_ALERT', ['TEXT' => do_lang_tempcode('permissions:ACCESS_DENIED__NOT_AS_GUEST')]);
            }

            $already_filled_in = $GLOBALS['SITE_DB']->query_select_value_if_there('catalogue_entries', 'id', ['c_name' => $catalogue_name, 'ce_submitter' => get_member()]);

            if ($already_filled_in !== null) {
                return do_template('RED_ALERT', ['TEXT' => do_lang_tempcode('ALREADY_SUBMITTED_CONTENT')]);
            }
        }

        $special_fields = $GLOBALS['SITE_DB']->query_select('catalogue_fields', ['*'], ['c_name' => $catalogue_name], 'ORDER BY cf_order,' . $GLOBALS['SITE_DB']->translate_field_ref('cf_name'));

        $guid = isset($map['guid']) ? $map['guid'] : '6092b1533f549abe94a764d88d89c66b';

        $block_id = md5(serialize($map));

        // Submission...
        if (post_param_string('_block_id', '') == $block_id) {
            // Check CAPTCHA
            if ($use_captcha) {
                enforce_captcha();
            }

            // Data
            $category_id = post_param_integer('catalogue_category');
            $c_map = [];
            foreach ($special_fields as $field_num => $field) {
                $ob = get_fields_hook($field['cf_type']);
                $inputted_value = $ob->inputted_to_field_value(false, $field, null);

                // Required field validation (a standard for all field hooks)
                if (($field['cf_required'] == 1) && (($inputted_value == '') || ($inputted_value === null) || (($inputted_value == STRING_MAGIC_NULL) && !fractional_edit()))) {
                    warn_exit(do_lang_tempcode('_REQUIRED_NOT_FILLED_IN', $field['cf_name']));
                }

                if ($inputted_value !== null) {
                    $c_map[$field['id']] = $inputted_value;
                }
            }

            // Create catalogue entry which is not validated
            actual_add_catalogue_entry($category_id, 0, do_lang('CATALOGUE_ENTRY_VIA_BLOCK', 'main_catalogues_form'), 0, 0, 0, $c_map);

            // Redirect/messaging (we use redirect_exit because the only_once check already happened before adding the entry)
            require_code('site2');
            $redirect = array_key_exists('redirect', $map) ? $map['redirect'] : '';
            if ($redirect != '') {
                $redirect = page_link_to_url($redirect);
                redirect_exit($redirect, null, do_lang_tempcode('SUCCESS'));
            } else {
                redirect_exit(get_self_url(), null, do_lang_tempcode('SUCCESS'));
            }
        }

        // Form (note that this needs updated if changed in main_contact_catalogues)...

        require_code('form_templates');

        $fields = new Tempcode();

        $hidden = new Tempcode();

        if ($use_captcha) {
            $fields->attach(form_input_captcha($hidden));
            $text->attach(do_lang_tempcode('captcha:FORM_TIME_SECURITY'));
        }

        // Attach catalogue category selection field
        $fields->attach(form_input_tree_list(do_lang_tempcode('CATEGORY'), '', 'catalogue_category', null, 'choose_catalogue_category', ['catalogue_name' => $catalogue_name], true));

        $field_groups = [];

        url_default_parameters__enable();

        foreach ($special_fields as $field_num => $field) {
            $ob = get_fields_hook($field['cf_type']);

            $_cf_name = get_translated_text($field['cf_name']);
            $field_cat = '';
            if (strpos($_cf_name, ': ') !== false) {
                $field_cat = substr($_cf_name, 0, strpos($_cf_name, ': '));
                if ($field_cat . ': ' == $_cf_name) {
                    $_cf_name = $field_cat; // Just been pulled out as heading, nothing after ": "
                } else {
                    $_cf_name = substr($_cf_name, strpos($_cf_name, ': ') + 2);
                }
            }
            if (!array_key_exists($field_cat, $field_groups)) {
                $field_groups[$field_cat] = new Tempcode();
            }

            $_cf_description = escape_html(get_translated_text($field['cf_description']));

            $GLOBALS['NO_DEV_MODE_FULLSTOP_CHECK'] = true;
            $result = $ob->get_field_inputter($_cf_name, $_cf_description, $field, null, true, !array_key_exists($field_num + 1, $special_fields));
            $GLOBALS['NO_DEV_MODE_FULLSTOP_CHECK'] = false;

            if ($result === null) {
                continue;
            }

            if (is_array($result)) {
                $field_groups[$field_cat]->attach($result[0]);
            } else {
                $field_groups[$field_cat]->attach($result);
            }

            unset($result);
            unset($ob);
        }

        if (array_key_exists('', $field_groups)) { // Blank prefix must go first
            $field_groups_blank = $field_groups[''];
            unset($field_groups['']);
            $field_groups = array_merge([$field_groups_blank], $field_groups);
        }
        foreach ($field_groups as $field_group_title => $extra_fields) {
            if (is_integer($field_group_title)) {
                $field_group_title = ($field_group_title == 0) ? '' : strval($field_group_title);
            }

            if ($field_group_title != '') {
                $fields->attach(do_template('FORM_SCREEN_FIELD_SPACER', ['TITLE' => $field_group_title]));
            }
            $fields->attach($extra_fields);
        }

        url_default_parameters__disable();

        $hidden->attach(form_input_hidden('_block_id', $block_id));

        $url = get_self_url();

        return do_template('FORM', [
            '_GUID' => $guid,
            'FIELDS' => $fields,
            'HIDDEN' => $hidden,
            'SUBMIT_ICON' => 'buttons/send',
            'SUBMIT_NAME' => do_lang_tempcode('SEND'),
            'URL' => $url,
            'TEXT' => $text,
            'SECONDARY_FORM' => true,
        ]);
    }
}