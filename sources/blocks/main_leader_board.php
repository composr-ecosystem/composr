<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2021

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    leader_board
 */

/**
 * Block class.
 */
class Block_main_leader_board
{
    /**
     * Find details of the block.
     *
     * @return ?array Map of block info (null: block is disabled)
     */
    public function info() : ?array
    {
        $info = [];
        $info['author'] = 'Chris Graham';
        $info['organisation'] = 'ocProducts';
        $info['hacked_by'] = null;
        $info['hack_version'] = null;
        $info['version'] = 3;
        $info['locked'] = false;
        $info['parameters'] = ['zone', 'id', 'timestamp'];
        $info['update_require_upgrade'] = true;
        return $info;
    }

    /**
     * Find caching details for the block.
     *
     * @return ?array Map of cache details (cache_on and ttl) (null: block is disabled)
     */
    public function caching_environment() : ?array
    {
        $info = [];
        $info['cache_on'] = <<<'PHP'
        [
            array_key_exists('zone', $map) ? $map['zone'] : get_module_zone('leader_board'),
        ]
PHP;
        $info['ttl'] = 60 * 15; // 15 minutes
        return $info;
    }

    /**
     * Execute the block.
     *
     * @param  array $map A map of parameters
     * @return Tempcode The result of execution
     */
    public function run(array $map) : object
    {
        require_lang('leader_board');
        require_code('leader_board');

        $error_msg = new Tempcode();
        if (!addon_installed__messaged('leader_board', $error_msg)) {
            return $error_msg;
        }
        if (!addon_installed__messaged('points', $error_msg)) {
            return $error_msg;
        }

        if (!array_key_exists('id', $map)) {
            return do_template('RED_ALERT', ['_GUID' => 'cv34fj3f34jof3joitj059tj940t', 'TEXT' => do_lang_tempcode('LEADER_BOARD_MISSING_ID')]);
        }

        $board = $GLOBALS['FORUM_DB']->query_select('leader_boards', ['*'], ['id' => $map['id']], '', 1);
        if (empty($board)) {
            return do_template('RED_ALERT', ['_GUID' => 'cv34fj3f34jof3joitj059tj940t', 'TEXT' => do_lang_tempcode('LEADER_BOARD_MISSING_BOARD')]);
        }

        $zone = array_key_exists('zone', $map) ? $map['zone'] : get_module_zone('leader_board');

        require_lang('leader_board');
        require_code('leader_board');

        $rows = get_leader_board($map['id'], array_key_exists('timestamp', $map) ? $map['timestamp'] : null);
        if (empty($rows)) {
            return do_template('RED_ALERT', ['_GUID' => 'cv34fj3f34jof3joitj059tj940t', 'TEXT' => do_lang_tempcode('NO_RESULTS')]);
        }

        $date = get_timezoned_date($rows[0]['lb_date_and_time'], false);
        $start_date = get_timezoned_date(strtotime('-1 ' . $board[0]['lb_timeframe'], $rows[0]['lb_date_and_time']), false);

        $rows = collapse_2d_complexity('lb_member', 'lb_points', $rows);

        $out = new Tempcode();
        $i = 0;

        // Are there any rank images going to display?
        $or_list = '1=1';
        $admin_groups = $GLOBALS['FORUM_DRIVER']->get_super_admin_groups();
        $moderator_groups = $GLOBALS['FORUM_DRIVER']->get_moderator_groups();
        foreach (array_merge($admin_groups, $moderator_groups) as $group_id) {
            $or_list .= ' AND id<>' . strval($group_id);
        }
        $has_rank_images = (get_forum_type() == 'cns') && ($GLOBALS['FORUM_DB']->query_value_if_there('SELECT COUNT(*) FROM ' . $GLOBALS['FORUM_DB']->get_table_prefix() . 'f_groups WHERE (' . $or_list . ') AND ' . db_string_not_equal_to('g_rank_image', '')) != 0);

        foreach ($rows as $member_id => $points) {
            $points_url = build_url(['page' => 'points', 'type' => 'member', 'id' => $member_id], get_module_zone('points'));

            $profile_url = $GLOBALS['FORUM_DRIVER']->member_profile_url($member_id, true);

            $username = $GLOBALS['FORUM_DRIVER']->get_username($member_id, false, USERNAME_DEFAULT_DELETED);

            $out->attach(do_template('POINTS_LEADER_BOARD_ROW', [
                '_GUID' => '68caa55091aade84bc7ca760e6655a45',
                'ID' => strval($member_id),
                'POINTS_URL' => $points_url,
                'PROFILE_URL' => $profile_url,
                '_POINTS' => strval($points),
                'POINTS' => integer_format($points, 0),
                'USERNAME' => $username,
                'HAS_RANK_IMAGES' => $has_rank_images,
            ]));

            $i++;
        }

        $about = $board[0]['lb_type'] == 'earners' ? do_lang_tempcode('LEADER_BOARD_ABOUT_earners', count($rows), $start_date, $date) : do_lang_tempcode('LEADER_BOARD_ABOUT_holders', count($rows), $date);

        $url = build_url(['page' => 'leader_board', 'id' => $map['id']], $zone);

        return do_template('POINTS_LEADER_BOARD', [
            '_GUID' => 'c875cce925e73f46408acc0a153a2902',
            'URL' => $url,
            'TITLE' => strval($board[0]['lb_title']),
            'ABOUT' => strval($about),
            'ROWS' => $out,
        ]);
    }
}
