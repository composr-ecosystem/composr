<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2020

 See text/EN/licence.txt for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    awards
 */

/**
 * Block class.
 */
class Block_main_awards
{
    /**
     * Find details of the block.
     *
     * @return ?array Map of block info (null: block is disabled)
     */
    public function info()
    {
        $info = [];
        $info['author'] = 'Chris Graham';
        $info['organisation'] = 'ocProducts';
        $info['hacked_by'] = null;
        $info['hack_version'] = null;
        $info['version'] = 2;
        $info['locked'] = false;
        $info['parameters'] = ['param', 'zone', 'give_context', 'include_breadcrumbs', 'guid'];
        return $info;
    }

    /**
     * Find caching details for the block.
     *
     * @return ?array Map of cache details (cache_on and ttl) (null: block is disabled)
     */
    public function caching_environment()
    {
        $info = [];
        $info['cache_on'] = <<<'PHP'
        ((count($_POST) != 0) || (get_param_integer('keep_rating_test', 0) == 1))
        ?
        null
        :
        [
            array_key_exists('guid', $map) ? $map['guid'] : '',
            (array_key_exists('give_context', $map) ? $map['give_context'] : '0') == '1',
            (array_key_exists('include_breadcrumbs', $map) ? $map['include_breadcrumbs'] : '0') == '1',
            array_key_exists('param', $map) ? $map['param'] : strval(db_get_first_id()),
            array_key_exists('zone', $map) ? $map['zone'] : '_SEARCH',
        ]
PHP;
        $info['special_cache_flags'] = CACHE_AGAINST_DEFAULT | CACHE_AGAINST_PERMISSIVE_GROUPS; // Due to submit link
        $info['ttl'] = 60 * 24; // Intentionally, do randomisation acts as 'of the day'
        return $info;
    }

    /**
     * Execute the block.
     *
     * @param  array $map A map of parameters
     * @return Tempcode The result of execution
     */
    public function run($map)
    {
        $error_msg = new Tempcode();
        if (!addon_installed__messaged('awards', $error_msg)) {
            return $error_msg;
        }

        require_lang('awards');
        require_code('awards');

        $block_id = get_block_id($map);

        // Read parameters
        $award = @cms_empty_safe($map['param']) ? $GLOBALS['SITE_DB']->query_select_value('award_types', 'MIN(id)') : intval($map['param']);
        $zone = array_key_exists('zone', $map) ? $map['zone'] : '_SEARCH';
        $guid = array_key_exists('guid', $map) ? $map['guid'] : '';
        $give_context = (array_key_exists('give_context', $map) ? $map['give_context'] : '0') == '1';
        $include_breadcrumbs = (array_key_exists('include_breadcrumbs', $map) ? $map['include_breadcrumbs'] : '0') == '1';

        // Award type
        $_award_type_row = $GLOBALS['SITE_DB']->query_select('award_types', ['*'], ['id' => $award], '', 1);
        if (!array_key_exists(0, $_award_type_row)) {
            return do_lang_tempcode('MISSING_RESOURCE', 'award_type');
        }
        $award_type_row = $_award_type_row[0];
        $award_title = get_translated_text($award_type_row['a_title']);
        $award_description = get_translated_text($award_type_row['a_description']);

        // Read content object
        require_code('content');
        $object = get_content_object($award_type_row['a_content_type']);
        $info = $object->info(null, true);
        if ($info === null) {
            return do_template('RED_ALERT', ['_GUID' => '2ynzlkmrjkdpo76e5htq9t8bwl2q6jia', 'TEXT' => do_lang_tempcode('NO_SUCH_CONTENT_TYPE', $award_type_row['a_content_type'])]);
        }

        // Submit URL
        $submit_url = $info['add_url'];
        if ($submit_url !== null) {
            $submit_url = page_link_to_url($submit_url);
        } else {
            $submit_url = '';
        }
        if (!has_actual_page_access(null, $info['cms_page'], null, null)) {
            $submit_url = '';
        }
        if (!has_category_access(get_member(), 'award', strval($award))) {
            $submit_url = '';
        }
        if ($submit_url != '') {
            extend_url($submit_url, 'award=' . strval($award));
        }

        // Find latest award that exists
        $sup = '';
        do {
            $rows = $GLOBALS['SITE_DB']->query('SELECT * FROM ' . get_table_prefix() . 'award_archive WHERE a_type_id=' . strval($award) . ' ' . $sup . ' ORDER BY date_and_time DESC', 1, 0, false, true);
            if (!array_key_exists(0, $rows)) {
                return do_template('BLOCK_NO_ENTRIES', [
                    '_GUID' => ($guid != '') ? $guid : 'f32b50770fd6581c4a2c839a1ed25801',
                    'BLOCK_ID' => $block_id,
                    'HIGH' => false,
                    'TITLE' => $award_title,
                    'MESSAGE' => do_lang_tempcode('NO_AWARD'),
                    'ADD_NAME' => content_language_string($award_type_row['a_content_type'], 'ADD'),
                    'SUBMIT_URL' => str_replace('=!', '__ignore=1', $submit_url),
                ]);
            }
            $myrow = $rows[0];

            $submit_url = str_replace('!', $myrow['content_id'], $submit_url);

            $award_content_row = content_get_row($myrow['content_id'], $info);
            $sup = ' AND date_and_time<' . strval($myrow['date_and_time']);
        } while ($award_content_row === null);

        // Move towards render...

        $archive_url = build_url(['page' => 'awards', 'type' => 'award', 'id' => $award], get_module_zone('awards'));

        $rendered_content = $object->run($award_content_row, $zone, $give_context, $include_breadcrumbs, null, false, $guid);

        if (($award_type_row['a_show_awardee'] == 0) || (is_guest($myrow['member_id']))) {
            $awardee = '';
            $awardee_username = '';
            $awardee_profile_url = '';
        } else {
            $awardee = strval($myrow['member_id']);
            $awardee_username = $GLOBALS['FORUM_DRIVER']->get_username($myrow['member_id']);
            $awardee_profile_url = $GLOBALS['FORUM_DRIVER']->member_profile_url($myrow['member_id'], true);
        }

        return do_template('BLOCK_MAIN_AWARDS', [
            '_GUID' => ($guid != '') ? $guid : '99f092e35db0c17f407f40ed55c42cfd',
            'BLOCK_ID' => $block_id,
            'TITLE' => $award_title,
            'TYPE' => $award_type_row['a_content_type'],
            'DESCRIPTION' => $award_description,
            'AWARDEE_PROFILE_URL' => $awardee_profile_url,
            'AWARDEE' => $awardee,
            'AWARDEE_USERNAME' => $awardee_username,
            'RAW_AWARD_DATE' => strval($myrow['date_and_time']),
            'AWARD_DATE' => get_timezoned_date_time_tempcode($myrow['date_and_time']),
            'CONTENT' => $rendered_content,
            'SUBMIT_URL' => $submit_url,
            'ARCHIVE_URL' => $archive_url,
        ]);
    }
}
