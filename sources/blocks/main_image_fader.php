<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    galleries
 */

/**
 * Block class.
 */
class Block_main_image_fader
{
    /**
     * Find details of the block.
     *
     * @return ?array Map of block info (null: block is disabled)
     */
    public function info() : ?array
    {
        $info = [];
        $info['author'] = 'Chris Graham';
        $info['organisation'] = 'ocProducts';
        $info['hacked_by'] = null;
        $info['hack_version'] = null;
        $info['version'] = 2;
        $info['locked'] = false;
        $info['min_cms_version'] = 11.0;
        $info['addon'] = 'galleries';
        $info['parameters'] = ['param', 'time', 'zone', 'order', 'as_guest', 'check'];
        return $info;
    }

    /**
     * Find caching details for the block.
     *
     * @return ?array Map of cache details (cache_on and ttl) (null: block is disabled)
     */
    public function caching_environment() : ?array
    {
        $info = [];
        $info['cache_on'] = <<<'PHP'
        [
            array_key_exists('as_guest', $map) ? ($map['as_guest'] == '1') : false,
            array_key_exists('order', $map) ? $map['order'] : '',
            array_key_exists('time', $map) ? intval($map['time']) : 8000,
            array_key_exists('zone', $map) ? $map['zone'] : get_module_zone('galleries'),
            array_key_exists('param', $map) ? $map['param'] : '',
            array_key_exists('check', $map) ? ($map['check'] == '1') : true,
        ]
PHP;
        $info['special_cache_flags'] = CACHE_AGAINST_DEFAULT | CACHE_AGAINST_PERMISSIVE_GROUPS;
        if (addon_installed('content_privacy')) {
            $info['special_cache_flags'] |= CACHE_AGAINST_MEMBER;
        }
        $info['ttl'] = 60;
        return $info;
    }

    /**
     * Execute the block.
     *
     * @param  array $map A map of parameters
     * @return Tempcode The result of execution
     */
    public function run(array $map) : object
    {
        $error_msg = new Tempcode();
        if (!addon_installed__messaged('galleries', $error_msg)) {
            return $error_msg;
        }

        require_css('galleries');
        require_lang('galleries');
        require_code('galleries');
        require_javascript('core_rich_media');
        require_code('images');
        require_code('content');

        $block_id = get_block_id($map);

        $check_perms = array_key_exists('check', $map) ? ($map['check'] == '1') : true;

        if (@cms_empty_safe($map['param'])) {
            $_cat = $GLOBALS['SITE_DB']->query_select('images', ['cat', 'COUNT(*) AS cnt'], [], 'GROUP BY cat ORDER BY cnt DESC', 1);
            if (!empty($_cat)) {
                $cat = $_cat[0]['cat'];
            } else {
                $cat = 'root';
            }
        } else {
            $cat = $map['param'];
        }

        $mill = array_key_exists('time', $map) ? intval($map['time']) : 8000; // milliseconds between animations
        $zone = array_key_exists('zone', $map) ? $map['zone'] : get_module_zone('galleries');
        $order = array_key_exists('order', $map) ? $map['order'] : '';

        if ($cat == 'root') {
            $cat_select = db_string_equal_to('cat', $cat);
        } else {
            require_code('selectcode');
            $cat_select = selectcode_to_sqlfragment($cat, 'cat', 'galleries', 'parent_id', 'cat', 'name', false, false);
        }

        $images = [];
        $titles = [];
        $html = [];

        $extra_where = ' AND ' . $cat_select;
        list($rows, $max_rows) = content_rows_for_multi_type(
            ['image', 'video'],
            null,
            $extra_where,
            '',
            'recent ASC',
            0,
            100, /*reasonable limit*/
            '',
            '',
            '',
            $check_perms,
            []
        );

        $all_rows = [];
        if ($order != '') {
            foreach (explode(',', $order) as $o) {
                $content_type = (substr($o, 0, 1) == 'v') ? 'video' : 'image';
                $_id = substr($o, 1);

                if (is_numeric($_id)) {
                    $id = intval($_id);
                    foreach ($rows as $i => $row) {
                        if ((($content_type == 'video') && ($row['content_type'] == 'video') && ($row['id'] == $id)) || (($content_type == 'image') && ($row['content_type'] == 'image') && ($row['id'] == $id))) {
                            $all_rows[] = $row;
                            unset($rows[$i]);
                        }
                    }
                }
            }
        }
        $all_rows = array_merge($all_rows, $rows);

        foreach ($all_rows as $row) {
            if ($row['content_type'] == 'video') {
                $image_url = $row['thumb_url'];
            } else {
                $image_url = $row['url'];
            }
            if (url_is_local($image_url)) {
                $image_url = get_custom_base_url() . '/' . $image_url;
            }
            $images[] = $image_url;

            $titles[] = get_translated_text($row['title']);
            $just_media_row = db_map_restrict($row, ['id', 'the_description']);
            $html[] = get_translated_tempcode($row['content_type'] . 's', $just_media_row, 'the_description');
        }

        if (empty($images)) {
            $submit_url = null;
            if ((has_actual_page_access(null, 'cms_galleries', null, null)) && (has_submit_permission('mid', get_member(), get_ip_address(), 'cms_galleries', ['galleries', $cat])) && (can_submit_to_gallery($cat))) {
                $submit_url = build_url(['page' => 'cms_galleries', 'type' => 'add', 'cat' => $cat, 'redirect' => protect_url_parameter(SELF_REDIRECT_RIP)], get_module_zone('cms_galleries'));
            }
            return do_template('BLOCK_NO_ENTRIES', [
                '_GUID' => 'aa84d65b8dd134ba6cd7b1b7bde99de2',
                'BLOCK_ID' => $block_id,
                'HIGH' => false,
                'TITLE' => do_lang_tempcode('GALLERY'),
                'MESSAGE' => do_lang_tempcode('NO_ENTRIES', 'image'),
                'ADD_NAME' => do_lang_tempcode('ADD_IMAGE'),
                'SUBMIT_URL' => $submit_url,
            ]);
        }

        $nice_cat = str_replace('*', '', $cat);
        if (preg_match('#^[' . URL_CONTENT_REGEXP . ']+$#', $nice_cat) == 0) {
            $nice_cat = 'root';
        }
        $gallery_url = build_url(['page' => 'galleries', 'type' => 'browse', 'id' => $nice_cat], $zone);

        return do_template('BLOCK_MAIN_IMAGE_FADER', [
            '_GUID' => '92337749fa084393a97f97eedbcf81f6',
            'BLOCK_ID' => $block_id,
            'GALLERY_URL' => $gallery_url,
            'PREVIOUS_URL' => $images[count($images) - 1],
            'FIRST_URL' => $images[0],
            'NEXT_URL' => isset($images[1]) ? $images[1] : '',
            'IMAGES' => $images,
            'TITLES' => $titles,
            'HTML' => $html,
            'MILL' => strval($mill),
        ]);
    }
}
