<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    users_online_block
 */

/**
 * Block class.
 */
class Block_side_users_online
{
    /**
     * Find details of the block.
     *
     * @return ?array Map of block info (null: block is disabled)
     */
    public function info() : ?array
    {
        $info = [];
        $info['author'] = 'Chris Graham';
        $info['organisation'] = 'Composr';
        $info['hacked_by'] = null;
        $info['hack_version'] = null;
        $info['version'] = 3;
        $info['locked'] = false;
        $info['min_cms_version'] = 11.0;
        $info['addon'] = 'users_online_block';
        $info['parameters'] = [];
        return $info;
    }

    /**
     * Find caching details for the block.
     *
     * @return ?array Map of cache details (cache_on and ttl) (null: block is disabled)
     */
    public function caching_environment() : ?array
    {
        $info = [];
        $info['cache_on'] = <<<'PHP'
        [
        ]
PHP;
        $info['special_cache_flags'] = CACHE_AGAINST_DEFAULT | CACHE_AGAINST_PERMISSIVE_GROUPS;
        $info['ttl'] = 3;
        return $info;
    }

    /**
     * Execute the block.
     *
     * @param  array $map A map of parameters
     * @return Tempcode The result of execution
     */
    public function run(array $map) : object
    {
        $error_msg = new Tempcode();
        if (!addon_installed__messaged('users_online_block', $error_msg)) {
            return $error_msg;
        }

        $count = 0;
        require_code('users2');
        $members = get_users_online(false, null, $count);
        if ($members === null) {
            return new Tempcode(); // Too many to show
        }

        if (get_forum_type() == 'cns') {
            require_code('cns_general');
            require_code('cns_members');
            require_css('cns');
        }

        $block_id = get_block_id($map);

        $online = [];
        $guests = 0;
        $_members = 0;
        $done_members = [];
        $done_ips = [];
        foreach ($members as $_member) {
            $member_id = $_member['member_id'];
            $username = $_member['cache_username'];
            $ip = $_member['ip'];

            if ((is_guest($member_id)) || ($username === null)) {
                if (!array_key_exists($ip, $done_ips)) {
                    $done_ips[$ip] = true;
                    $guests++;
                }
            } else {
                if (!array_key_exists($member_id, $done_members)) {
                    $colour = (get_forum_type() == 'cns') ? get_group_colour(cns_get_member_primary_group($member_id)) : null;
                    $done_members[$member_id] = true;
                    $url = $GLOBALS['FORUM_DRIVER']->member_profile_url($member_id, true);
                    $online[] = [
                        'URL' => $url,
                        'USERNAME' => $GLOBALS['FORUM_DRIVER']->get_username($member_id, true),
                        'COLOUR' => $colour,
                        'MEMBER_ID' => strval($member_id),
                        'AVATAR_URL' => $GLOBALS['FORUM_DRIVER']->get_member_avatar_url($member_id),
                    ];
                    $_members++;
                }
            }
        }

        $newest = new Tempcode();
        $birthdays = [];
        if (get_forum_type() == 'cns') {
            require_lang('cns');

            // Show newest member
            if (get_option('usersonline_show_newest_member') == '1') {
                $newest_member = $GLOBALS['FORUM_DB']->query_select('f_members', ['m_username', 'id', 'm_join_time'], ['m_validated' => 1], 'ORDER BY m_join_time DESC', 1);
                $username_link = $GLOBALS['FORUM_DRIVER']->member_profile_hyperlink($newest_member[0]['id'], $newest_member[0]['m_username']);
                $newest->attach(paragraph(do_lang_tempcode('NEWEST_MEMBER_WELCOME', $username_link), 'gdgdfhrug'));
            }

            // Birthdays
            if (get_option('usersonline_show_birthdays') == '1') {
                require_code('cns_members');
                $_birthdays = cns_find_birthdays();
                foreach ($_birthdays as $_birthday) {
                    $birthday_url = build_url(['page' => 'topics', 'type' => 'birthday', 'id' => $_birthday['username']], get_module_zone('topics'));
                    $birthdays[] = [
                        'AGE' => array_key_exists('age', $_birthday) ? integer_format($_birthday['age']) : null,
                        'PROFILE_URL' => $GLOBALS['CNS_DRIVER']->member_profile_url($_birthday['id'], true),
                        'USERNAME' => $GLOBALS['FORUM_DRIVER']->get_username($_birthday['id'], true),
                        'MEMBER_ID' => strval($_birthday['id']),
                        'BIRTHDAY_URL' => $birthday_url,
                    ];
                }
            }
        }

        return do_template('BLOCK_SIDE_USERS_ONLINE', [
            '_GUID' => 'fdfa68dff479b4ea7d517585297ea6af',
            'BLOCK_ID' => $block_id,
            'ONLINE' => $online,
            '_GUESTS' => strval($guests),
            '_MEMBERS' => strval($_members),
            'GUESTS' => integer_format($guests, 0),
            'MEMBERS' => integer_format($_members, 0),
            'BIRTHDAYS' => $birthdays,
            'NEWEST' => $newest,
        ]);
    }
}
