<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    core_cns
 */

/**
 * Block class.
 */
class Block_main_members
{
    /**
     * Find details of the block.
     *
     * @return ?array Map of block info (null: block is disabled)
     */
    public function info() : ?array
    {
        $info = [];
        $info['author'] = 'Chris Graham';
        $info['organisation'] = 'Composr';
        $info['hacked_by'] = null;
        $info['hack_version'] = null;
        $info['version'] = 2;
        $info['locked'] = false;
        $info['min_cms_version'] = 11.0;
        $info['addon'] = 'core_cns';
        $info['parameters'] = [
            'display_mode',
            'must_have_avatar',
            'must_have_photo',
            'include_form',
            'select',
            'filter',
            'filters_row_a',
            'filters_row_b',
            'usergroup',
            'max',
            'start',
            'pagination',
            'sort',
            'parent_gallery',
            'per_row',
            'include_non_confirmed',
            'guid',
        ];
        return $info;
    }

    /**
     * Find caching details for the block.
     *
     * @return ?array Map of cache details (cache_on and ttl) (null: block is disabled)
     */
    public function caching_environment() : ?array
    {
        $info = [];
        $info['cache_on'] = <<<'PHP'
        (strpos(serialize($_GET), 'filter_') !== false)
        ?
        null
        :
        [
            array_key_exists('display_mode', $map) ? $map['display_mode'] : 'avatars',
            array_key_exists('must_have_avatar', $map) ? ($map['must_have_avatar'] == '1') : false,
            array_key_exists('must_have_photo', $map) ? ($map['must_have_photo'] == '1') : false,
            array_key_exists('include_form', $map) ? ($map['include_form'] == '1') : true,
            array_key_exists('filter', $map) ? $map['filter'] : '*',
            array_key_exists('filters_row_a', $map) ? $map['filters_row_a'] : '',
            array_key_exists('filters_row_b', $map) ? $map['filters_row_b'] : '',
            array_key_exists('select', $map) ? $map['select'] : '',
            array_key_exists('usergroup', $map) ? $map['usergroup'] : '',
            get_param_integer($block_id . '_max', array_key_exists('max', $map) ? intval($map['max']) : 30),
            get_param_integer($block_id . '_start', array_key_exists('start', $map) ? intval($map['start']) : 0),
            ((array_key_exists('pagination', $map) ? $map['pagination'] : '0') == '1'),
            get_param_string($block_id . '_sort', array_key_exists('sort', $map) ? $map['sort'] : 'm_join_time DESC'),
            array_key_exists('parent_gallery', $map) ? $map['parent_gallery'] : '',
            array_key_exists('per_row', $map) ? intval($map['per_row']) : 0,
            array_key_exists('include_non_confirmed', $map) ? $map['include_non_confirmed'] : 'exclude',
            array_key_exists('guid', $map) ? $map['guid'] : '',
        ]
PHP;
        $info['special_cache_flags'] = CACHE_AGAINST_DEFAULT | CACHE_AGAINST_PERMISSIVE_GROUPS; // Due to CPF permissions
        $info['ttl'] = 60;
        return $info;
    }

    /**
     * Execute the block.
     *
     * @param  array $map A map of parameters
     * @return Tempcode The result of execution
     */
    public function run(array $map) : object
    {
        if (get_forum_type() != 'cns') {
            return do_template('RED_ALERT', ['_GUID' => 'lnxrdzazqbcnmcg8ubo3y915wcef6t13', 'TEXT' => do_lang_tempcode('NO_CNS')]);
        }

        $block_id = get_block_id($map);

        $default_max = array_key_exists('max', $map) ? intval($map['max']) : 30;
        $max = get_param_integer($block_id . '_max', $default_max);
        if ($max == 0) {
            $max = 30;
        }
        $start = get_param_integer($block_id . '_start', array_key_exists('start', $map) ? intval($map['start']) : 0);

        // Don't allow guest bots to probe too deep into the forum index, it gets very slow; the XML Sitemap is for guiding to topics like this
        if (($start > $max * 5) && (is_guest()) && (get_bot_type() !== null)) {
            access_denied('NOT_AS_GUEST');
        }

        require_code('cns_members');
        require_code('cns_groups');
        require_code('cns_members2');

        require_css('cns_member_directory');
        require_lang('cns');
        require_lang('cns_member_directory');

        if (strpos(serialize($_GET), 'filter_') !== false) {
            if (has_privilege(get_member(), 'view_any_profile_field')) {
                log_it('MEMBER_SEARCH');
            }
        }

        push_query_limiting(false);

        $guid = array_key_exists('guid', $map) ? $map['guid'] : '';

        $where = 'id<>' . strval($GLOBALS['FORUM_DRIVER']->get_guest_id());

        $usergroup = array_key_exists('usergroup', $map) ? $map['usergroup'] : '';

        $filter = array_key_exists('filter', $map) ? $map['filter'] : '';
        if ((!empty($map['filters_row_a'])) || (!empty($map['filters_row_b']))) {
            $filters_row_a = array_key_exists('filters_row_a', $map) ? $map['filters_row_a'] : '';
            $filters_row_b = array_key_exists('filters_row_b', $map) ? $map['filters_row_b'] : '';
        } else {
            $filters_row_a = 'm_username=' . php_addslashes(do_lang('USERNAME'));
            if ($usergroup == '') {
                $filters_row_a .= ',usergroup=' . php_addslashes(do_lang('USERGROUP'));
            }
            $filters_row_b = '';
            $cpfs = cns_get_all_custom_fields_match(
                cns_get_all_default_groups(), // groups
                1, // public view
                1, // owner view
                null, // owner set
                null, // required
                1, // show in posts
                null // show in post previews
            );
            $_filters_row_a = 2;
            $_filters_row_b = 0;
            foreach ($cpfs as $cpf) {
                $cf_name = get_translated_text($cpf['cf_name']);
                if (in_array($cpf['cf_type'], ['float', 'integer', 'list', 'long_text', 'long_trans', 'short_text', 'short_text_multi', 'short_trans', 'short_trans_multi'])) {
                    $filter_term = str_replace(',', '\,', $cf_name) . '=' . str_replace(',', '\,', $cf_name);
                    if ($_filters_row_a < 6) {
                        if ($filters_row_a != '') {
                            $filters_row_a .= ',';
                        }
                        $filters_row_a .= $filter_term;
                        $_filters_row_a++;
                    } else {
                        if ($filters_row_b != '') {
                            $filters_row_b .= ',';
                        }
                        $filters_row_b .= $filter_term;
                        $_filters_row_b++;
                    }
                }
            }
        }
        foreach ([$filters_row_a, $filters_row_b] as $filters_row) {
            foreach (array_keys(comma_list_str_to_arr($filters_row)) as $filter_term) {
                if ($filter_term != '') {
                    if ($filter_term == 'usergroup') {
                        $usergroup = either_param_string('filter_' . $block_id . '_' . $filter_term, $usergroup);
                    } else {
                        if ($filter != '') {
                            $filter .= ',';
                        }
                        $filter .= $filter_term . '~=<' . fix_id($block_id . '_' . $filter_term) . '>';
                    }
                }
            }
        }
        if ($filter != '') {
            require_code('filtercode');
            list($filter_extra_join, $filter_extra_where) = filtercode_to_sql($GLOBALS['FORUM_DB'], parse_filtercode($filter), 'member');
            $extra_join_sql = implode('', $filter_extra_join);
        } else {
            $extra_join_sql = '';
            $filter_extra_where = '';
        }
        $where .= $filter_extra_where;

        $select = array_key_exists('select', $map) ? $map['select'] : '*';
        if ($select != '*') {
            require_code('selectcode');
            $where .= ' AND (' . selectcode_to_sqlfragment($select, 'id') . ')';
        }

        if ($usergroup != '') {
            $where .= ' AND (1=0';
            foreach (explode(',', $usergroup) as $_usergroup) {
                if (is_numeric($_usergroup)) {
                    $group_id = intval($_usergroup);
                } else {
                    $group_id = $GLOBALS['FORUM_DB']->query_select_value_if_there('f_groups', 'id', [$GLOBALS['FORUM_DB']->translate_field_ref('g_name') => $_usergroup]);
                    if ($group_id === null) {
                        return paragraph(do_lang_tempcode('MISSING_RESOURCE', 'group'), '3e6642ua0bf7q3qcmlt322rpnik8nlhh', 'nothing-here');
                    }
                }
                $where .= ' OR (m_primary_group=' . strval($group_id) . ' OR EXISTS(SELECT gm_member_id FROM ' . $GLOBALS['FORUM_DB']->get_table_prefix() . 'f_group_members x WHERE x.gm_member_id=r.id AND gm_group_id=' . strval($group_id) . '))';
            }
            $where .= ')';
        }

        if ((!has_privilege(get_member(), 'see_not_validated')) && (addon_installed('validation'))) {
            $where .= ' AND m_validated=1';
        }
        if ((!has_privilege(get_member(), 'see_not_validated')) || (!isset($map['include_non_confirmed'])) || ($map['include_non_confirmed'] == 'exclude')) {
            $where .= ' AND ' . db_string_equal_to('m_validated_email_confirm_code', '');
        } elseif ((has_privilege(get_member(), 'see_not_validated')) && (isset($map['include_non_confirmed'])) && ($map['include_non_confirmed'] == 'exclusively')) {
            $where .= ' AND ' . db_string_not_equal_to('m_validated_email_confirm_code', '');
        }

        $include_form = array_key_exists('include_form', $map) ? ($map['include_form'] == '1') : true;

        $must_have_avatar = array_key_exists('must_have_avatar', $map) ? ($map['must_have_avatar'] == '1') : false;
        if ($must_have_avatar) {
            $where .= ' AND ' . db_string_not_equal_to('m_avatar_url', '');
        }
        $must_have_photo = array_key_exists('must_have_photo', $map) ? ($map['must_have_photo'] == '1') : false;
        if ($must_have_photo) {
            $where .= ' AND ' . db_string_not_equal_to('m_photo_url', '');
        }

        $display_mode = array_key_exists('display_mode', $map) ? $map['display_mode'] : 'avatars';
        $show_avatar = true;
        switch ($display_mode) {
            case 'listing':
                $show_avatar = true;
                break;

            case 'boxes':
                $show_avatar = true;
                break;

            case 'photos':
                $show_avatar = false;
                break;

            case 'media':
                if (addon_installed('galleries')) {
                    require_css('galleries');
                    $show_avatar = true;
                    break;
                }
                // no break

            case 'avatars':
            default:
                $show_avatar = false;
                $display_mode = 'avatars';
                break;
        }

        $parent_gallery = array_key_exists('parent_gallery', $map) ? $map['parent_gallery'] : '';
        if ($parent_gallery == '') {
            $parent_gallery = '%';
        }

        $per_row = array_key_exists('per_row', $map) ? intval($map['per_row']) : 0;
        if ($per_row == 0) {
            $per_row = null;
        }

        inform_non_canonical_parameter($block_id . '_sort');
        $current_ordering = get_param_string($block_id . '_sort', array_key_exists('sort', $map) ? $map['sort'] : 'm_join_time DESC');
        $sortables = [
            'm_username' => do_lang_tempcode('USERNAME'),
            'm_cache_num_posts' => do_lang_tempcode('COUNT_POSTS'),
            'm_join_time' => do_lang_tempcode('JOIN_DATE'),
            'm_last_visit_time' => do_lang_tempcode('LAST_VISIT_TIME'),
            'm_profile_views' => do_lang_tempcode('PROFILE_VIEWS'),
            'random' => do_lang_tempcode('RANDOM'),
            'total_sessions' => do_lang_tempcode('LOGIN_FREQUENCY'),
        ];
        list($sql_sort, $sort_order, $sortable) = process_sorting_params('member', $current_ordering, null, false);

        $sql = 'SELECT DISTINCT r.* FROM ';
        $main_sql = $GLOBALS['FORUM_DB']->get_table_prefix() . 'f_members r';
        $main_sql .= $extra_join_sql;
        $main_sql .= ' WHERE ' . $where;
        $sql .= $main_sql;
        $sql .= ' ORDER BY ' . $sql_sort;
        $count_sql = 'SELECT COUNT(DISTINCT r.id) FROM ' . $main_sql;

        inform_non_canonical_parameter($block_id . '_max');
        inform_non_canonical_parameter($block_id . '_start');

        // Don't allow guest bots to probe too deep into the member directory, it gets very slow; the XML Sitemap is for guiding to topics like this
        if (($start > $default_max * 5) && (is_guest()) && (get_bot_type() !== null)) {
            access_denied('NOT_AS_GUEST');
        }

        $max_rows = $GLOBALS['FORUM_DB']->query_value_if_there($count_sql);

        $rows = $GLOBALS['FORUM_DB']->query($sql, ($display_mode == 'media') ? ($max + $start) : $max, ($display_mode == 'media') ? 0 : $start);

        /*if (count($rows)==0)   We let our template control no-result output
        {
            return do_template('BLOCK_NO_ENTRIES', [
                '_GUID' => '8e2691c84c5ff6e4ca16305fa409f7b8',
                'BLOCK_ID' => $block_id,
                'HIGH' => false,
                'TITLE' => do_lang_tempcode('RECENT', escape_html(integer_format($max)), do_lang_tempcode('MEMBERS')),
                'MESSAGE' => do_lang_tempcode('NO_ENTRIES', 'member'),
                'ADD_NAME' => '',
                'SUBMIT_URL' => '',
            ]);
        }*/

        $cnt = 0;
        $member_boxes = [];
        foreach ($rows as $row) {
            $member_id = $row['id'];
            $GLOBALS['FORUM_DRIVER']->MEMBER_ROWS_CACHED[$member_id] = $row;

            if ($display_mode != 'listing') {
                $box = render_member_box($member_id, true, $show_avatar, [], false);
            } else {
                $box = null;
            }

            if ($display_mode == 'media') {
                $gallery_sql = 'SELECT name,fullname FROM ' . get_table_prefix() . 'galleries WHERE';
                $gallery_sql .= ' name LIKE \'' . db_encode_like('member\_' . strval($member_id) . '\_' . $parent_gallery) . '\'';
                $galleries = $GLOBALS['SITE_DB']->query($gallery_sql);
                foreach ($galleries as $gallery) {
                    $num_images = $GLOBALS['SITE_DB']->query_select_value('images', 'COUNT(*)', ['cat' => $gallery['name'], 'validated' => 1]);
                    $num_videos = $GLOBALS['SITE_DB']->query_select_value('videos', 'COUNT(*)', ['cat' => $gallery['name'], 'validated' => 1]);
                    if (($num_images > 0) || ($num_videos > 0)) {
                        if ($cnt >= $start) {
                            $member_boxes[] = [
                                'I' => strval($cnt - $start + 1),
                                'BREAK' => ($per_row !== null) && (($cnt - $start + 1) % $per_row == 0),
                                'BOX' => $box,
                                'MEMBER_ID' => strval($member_id),
                                'GALLERY_NAME' => $gallery['name'],
                                'GALLERY_TITLE' => get_translated_text($gallery['fullname']),
                            ];
                        }

                        $cnt++;
                        if ($cnt + $start == $max) {
                            break; // We have to read deep with media mode, as the number to display is not determinable within an SQL limit range
                        }
                    }
                }
            } else {
                $member_boxes[$member_id] = [
                    'I' => strval($cnt + 1),
                    'BREAK' => ($per_row !== null) && (($cnt + 1) % $per_row == 0),
                    'BOX' => ($display_mode != 'listing') ? $box : null,
                    'MEMBER_ID' => strval($member_id),
                    'GALLERY_NAME' => '',
                    'GALLERY_TITLE' => '',
                ];

                $cnt++;
                if ($cnt == $max) {
                    break;
                }
            }
        }

        require_code('templates_results_table');

        if (($display_mode == 'listing') && (!empty($rows))) {
            $results_entries = new Tempcode();

            $_header_row = [];
            $_header_row[] = (get_option('display_name_generator') == '') ? do_lang_tempcode('USERNAME') : do_lang_tempcode('NAME');
            $_header_row[] = do_lang_tempcode('PRIMARY_GROUP');
            if (addon_installed('points')) {
                $_header_row[] = do_lang_tempcode('POINTS');
            }
            if (addon_installed('cns_forum')) {
                $_header_row[] = do_lang_tempcode('COUNT_POSTS');
            }
            if (get_option('use_lastondate') == '1') {
                $_header_row[] = do_lang_tempcode('LAST_VISIT_TIME');
            }
            if (get_option('use_joindate') == '1') {
                $_header_row[] = do_lang_tempcode('JOIN_DATE');
            }
            $header_row = results_header_row($_header_row, $sortables, $block_id . '_sort', $sortable . ' ' . $sort_order);
            require_code('cns_members2');
            foreach ($rows as $row) {
                $_entry = [];

                $_entry[] = do_template('CNS_MEMBER_DIRECTORY_USERNAME', [
                    '_GUID' => '868074cc21dcdf4427e93ce78e8f5637',
                    'ID' => strval($row['id']),
                    'USERNAME' => $row['m_username'],
                    'URL' => $GLOBALS['FORUM_DRIVER']->member_profile_url($row['id'], true),
                    'AVATAR_URL' => $GLOBALS['FORUM_DRIVER']->get_member_avatar_url($row['id']),
                    'PHOTO_URL' => $GLOBALS['FORUM_DRIVER']->get_member_photo_url($row['id']),
                    'VALIDATED' => ($row['m_validated'] == 1),
                    'CONFIRMED' => ($row['m_validated_email_confirm_code'] == ''),
                ]);

                $member_primary_group = cns_get_member_primary_group($row['id']);
                $primary_group = cns_get_group_link($member_primary_group);
                $_entry[] = $primary_group;

                if (addon_installed('points')) {
                    require_code('points');
                    $_entry[] = escape_html(integer_format(points_rank($row['id']), 0));
                }

                if (addon_installed('cns_forum')) {
                    $_entry[] = escape_html(integer_format($row['m_cache_num_posts'], 0));
                }

                if (get_option('use_lastondate') == '1') {
                    $_entry[] = escape_html_tempcode(get_timezoned_date_tempcode($row['m_last_visit_time']));
                }

                if (get_option('use_joindate') == '1') {
                    $_entry[] = escape_html_tempcode(get_timezoned_date_tempcode($row['m_join_time']));
                }

                $results_entries->attach(results_entry($_entry, false));
            }
            $results_table = results_table(do_lang_tempcode('MEMBERS'), $start, $block_id . '_start', $max, $block_id . '_max', $max_rows, $header_row, $results_entries, $sortables, $sortable, $sort_order, $block_id . '_sort');

            $sorting = new Tempcode();
        } else {
            $results_table = new Tempcode();

            $do_pagination = ((array_key_exists('pagination', $map) ? $map['pagination'] : '0') == '1');
            if ($do_pagination) {
                require_code('templates_pagination');
                $pagination = pagination(do_lang_tempcode('MEMBERS'), $start, $block_id . '_start', $max, $block_id . '_max', $max_rows, true);
            } else {
                $pagination = new Tempcode();
            }

            $sorting = results_sorter($sortables, $sortable, $sort_order, $block_id . '_sort');
        }

        $_usergroups = $GLOBALS['FORUM_DRIVER']->get_usergroup_list(true, false, false);
        $usergroups = [];
        require_code('cns_groups2');
        foreach ($_usergroups as $group_id => $group) {
            $num = cns_get_group_members_raw_count($group_id, true);
            $usergroups[$group_id] = ['USERGROUP' => $group, 'NUM' => strval($num)];
        }

        $symbols = null;
        if (get_option('allow_alpha_search') == '1') {
            $alpha_query = $GLOBALS['FORUM_DB']->query('SELECT m_username FROM ' . $GLOBALS['FORUM_DB']->get_table_prefix() . 'f_members WHERE id<>' . strval(db_get_first_id()) . ' ORDER BY m_username ASC');
            $symbols = [['START' => '0', 'SYMBOL' => do_lang('ALL')], ['START' => '0', 'SYMBOL' => '#']];
            foreach (['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'] as $s) {
                foreach ($alpha_query as $i => $q) {
                    if (cms_strtolower_ascii(substr($q['m_username'], 0, 1)) == $s) {
                        break;
                    }
                }
                if (substr(cms_strtolower_ascii($q['m_username']), 0, 1) != $s) {
                    $i = intval($symbols[count($symbols) - 1]['START']);
                }
                $symbols[] = ['START' => strval(intval($max * floor(floatval($i) / floatval($max)))), 'SYMBOL' => $s];
            }
        }

        $has_active_filter = false;
        foreach ($_GET as $key => $val) {
            if ((substr($key, 0, strlen('filter_' . $block_id)) == 'filter_' . $block_id) && ($val != '')) {
                $has_active_filter = true;
                break;
            }
        }

        $tpl = ($display_mode == 'listing') ? 'BLOCK_MAIN_MEMBERS' : 'BLOCK_MAIN_MEMBERS_COMPLEX';

        pop_query_limiting();

        return do_template($tpl, [
            '_GUID' => $guid,
            'BLOCK_ID' => $block_id,
            'START' => strval($start),
            'MAX' => strval($max),
            'SORTABLE' => $sortable,
            'SORT_ORDER' => $sort_order,
            'FILTERS_ROW_A' => $filters_row_a,
            'FILTERS_ROW_B' => $filters_row_b,
            'ITEM_WIDTH' => ($per_row === null) ? '' : (float_to_raw_string(99.0 /*avoid possibility of rounding issues as pixels won't divide perfectly*/ / floatval($per_row)) . '%'),
            'PER_ROW' => ($per_row === null) ? '' : strval($per_row),
            'DISPLAY_MODE' => $display_mode,
            'MEMBER_BOXES' => $member_boxes,
            'PAGINATION' => new Tempcode(),
            'RESULTS_TABLE' => $results_table,
            'USERGROUPS' => $usergroups,
            'SYMBOLS' => $symbols,
            'HAS_ACTIVE_FILTER' => $has_active_filter,
            'INCLUDE_FORM' => $include_form,
            'SORT' => $sorting,
        ]);
    }
}
