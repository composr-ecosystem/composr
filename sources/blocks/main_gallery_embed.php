<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2022

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    galleries
 */

/**
 * Block class.
 */
class Block_main_gallery_embed
{
    /**
     * Find details of the block.
     *
     * @return ?array Map of block info (null: block is disabled)
     */
    public function info() : ?array
    {
        $info = [];
        $info['author'] = 'Chris Graham';
        $info['organisation'] = 'ocProducts';
        $info['hacked_by'] = null;
        $info['hack_version'] = null;
        $info['version'] = 2;
        $info['locked'] = false;
        $info['parameters'] = ['param', 'filter', 'video_filter', 'select', 'video_select', 'zone', 'title', 'sort', 'days', 'render_if_empty', 'max', 'start', 'pagination', 'root', 'as_guest', 'check', 'show_sorting'];
        return $info;
    }

    /**
     * Find caching details for the block.
     *
     * @return ?array Map of cache details (cache_on and ttl) (null: block is disabled)
     */
    public function caching_environment() : ?array
    {
        $info = [];
        $info['cache_on'] = <<<'PHP'
        (preg_match('#<\w+>#', ((array_key_exists('filter', $map) ? $map['filter'] : '') . (array_key_exists('video_filter', $map) ? $map['video_filter'] : ''))) != 0)
        ?
        null
        :
        [
            array_key_exists('as_guest', $map) ? ($map['as_guest'] == '1') : false,
            get_param_integer($block_id . '_max', array_key_exists('max', $map) ? intval($map['max']) : null),
            get_param_integer($block_id . '_start', array_key_exists('start', $map) ? intval($map['start']) : 0),
            empty($map['sort']) && ((array_key_exists('show_sorting', $map) ? $map['show_sorting'] : '0') == '1'),
            ((array_key_exists('pagination', $map) ? $map['pagination'] : '0') == '1'),
            ((array_key_exists('root', $map)) && ($map['root'] != '')) ? $map['root'] : get_param_string('keep_gallery_root', null),
            array_key_exists('filter', $map) ? $map['filter'] : '',
            array_key_exists('video_filter', $map) ? $map['video_filter'] : '',
            array_key_exists('render_if_empty', $map) ? $map['render_if_empty'] : '0',
            array_key_exists('days', $map) ? $map['days'] : '',
            !empty($map['sort']) ? $map['sort'] : get_param_string('sort', get_option('gallery_media_default_sort_order'), INPUT_FILTER_GET_COMPLEX),
            array_key_exists('param', $map) ? $map['param'] : db_get_first_id(),
            array_key_exists('zone', $map) ? $map['zone'] : '',
            (($map === null) || (!array_key_exists('select', $map))) ? '*' : $map['select'],
            (($map === null) || (!array_key_exists('video_select', $map))) ? '*' : $map['video_select'],
            array_key_exists('title', $map) ? $map['title'] : '',
            array_key_exists('check', $map) ? ($map['check'] == '1') : true,
        ]
PHP;
        $info['special_cache_flags'] = CACHE_AGAINST_DEFAULT | CACHE_AGAINST_PERMISSIVE_GROUPS;
        if (addon_installed('content_privacy')) {
            $info['special_cache_flags'] |= CACHE_AGAINST_MEMBER;
        }
        $info['ttl'] = 60 * 2;
        return $info;
    }

    /**
     * Execute the block.
     *
     * @param  array $map A map of parameters
     * @return Tempcode The result of execution
     */
    public function run(array $map) : object
    {
        $error_msg = new Tempcode();
        if (!addon_installed__messaged('galleries', $error_msg)) {
            return $error_msg;
        }

        require_css('galleries');
        require_lang('galleries');
        require_code('galleries');
        require_code('images');
        require_code('content');
        require_code('feedback');
        require_javascript('galleries');

        $block_id = get_block_id($map);

        // Read display parameters
        $check_perms = array_key_exists('check', $map) ? ($map['check'] == '1') : true;
        $show_sorting = empty($map['sort']) && ((array_key_exists('show_sorting', $map) ? $map['show_sorting'] : '0') == '1');
        $root = ((array_key_exists('root', $map)) && ($map['root'] != '')) ? $map['root'] : get_param_string('keep_gallery_root', null);
        $title = array_key_exists('title', $map) ? $map['title'] : '';
        $zone = array_key_exists('zone', $map) ? $map['zone'] : get_module_zone('galleries');

        // Read selection parameters
        if (@cms_empty_safe($map['param'])) {
            $_cat = $GLOBALS['SITE_DB']->query_select('images', ['cat', 'COUNT(*) AS cnt'], [], 'GROUP BY cat ORDER BY cnt DESC', 1);
            if (!empty($_cat)) {
                $cat = $_cat[0]['cat'];
            } else {
                $cat = 'root';
            }
        } else {
            $cat = $map['param'];
        }
        $cat_raw = trim($cat, '>*#');
        if ($cat == 'root') {
            $cat_select = db_string_equal_to('cat', $cat);
        } else {
            require_code('selectcode');
            $cat_select = selectcode_to_sqlfragment($cat, 'cat', 'galleries', 'parent_id', 'cat', 'name', false, false);
        }
        $days = @cms_empty_safe($map['days']) ? null : intval($map['days']);
        $image_select = array_key_exists('select', $map) ? $map['select'] : '';
        $video_select = array_key_exists('video_select', $map) ? $map['video_select'] : '';
        $image_filter = array_key_exists('filter', $map) ? $map['filter'] : '';
        $video_filter = array_key_exists('video_filter', $map) ? $map['video_filter'] : '';

        // Read pagination parameters
        $max = get_param_integer($block_id . '_max', array_key_exists('max', $map) ? intval($map['max']) : get_default_gallery_max());
        $start = get_param_integer($block_id . '_start', array_key_exists('start', $map) ? intval($map['start']) : 0);
        $do_pagination = ((array_key_exists('pagination', $map) ? $map['pagination'] : '0') == '1');
        $sort = !empty($map['sort']) ? $map['sort'] : get_param_string('sort', get_option('gallery_media_default_sort_order'), INPUT_FILTER_GET_COMPLEX);

        $extra_where = ' AND ' . $cat_select;

        list($rows, $max_rows) = content_rows_for_multi_type(
            ['image', 'video'],
            $days,
            $extra_where,
            '',
            $sort,
            $start,
            $max,
            ['image' => $image_select, 'video' => $video_select],
            '',
            ['image' => $image_filter, 'video' => $video_filter],
            $check_perms,
            [],
            ['recent', 'average_rating', 'compound_rating', 'fixed_random', 'title', 'url']
        );

        $first_type = null;
        $first_id = null;

        // Display
        $entries = new Tempcode();
        foreach ($rows as $i => $row) {
            $content_type = $row['content_type'];

            if ($i === 0) {
                $first_type = $content_type;
                $first_id = $row['id'];
            }

            $just_media_row = db_map_restrict($row, ['id', 'the_description']);

            switch ($content_type) {
                case 'image':
                    // Display image
                    $entry_title = get_translated_text($row['title']);
                    $view_url = build_url(['page' => ($zone == '_SELF' && running_script('index')) ? get_page_name() : 'galleries', 'type' => 'image', 'id' => $row['id'], 'root' => $root, 'sort' => $sort], $zone);
                    $image_url = $row['url'];
                    $file_size = url_is_local($image_url) ? (file_exists(get_custom_file_base() . '/' . rawurldecode($image_url)) ? strval(filesize(get_custom_file_base() . '/' . rawurldecode($image_url))) : '') : '';
                    if (url_is_local($image_url)) {
                        $image_url = get_custom_base_url() . '/' . $image_url;
                    }

                    $entry_rating_details = ($row['allow_rating'] == 1) ? display_rating($view_url, get_translated_text($row['title']), 'images', strval($row['id']), 'RATING_INLINE_STATIC', $row['submitter']) : null;

                    $_edit_url = new Tempcode();
                    if (has_delete_permission('mid', get_member(), $row['submitter'], 'cms_galleries', ['galleries', $row['cat']])) {
                        $_edit_url = build_url(['page' => 'cms_galleries', 'type' => '__edit', 'id' => $row['id'], 'redirect' => protect_url_parameter(SELF_REDIRECT_RIP)], get_module_zone('cms_galleries'));
                        if ($row['submitter'] == get_member()) {
                            $GLOBALS['DO_NOT_CACHE_THIS'] = true; // If delete was due to groups, groups is a cache key anyways
                        }
                    }

                    $entry_map = [
                        '_GUID' => '043ac7d15ce02715ac02309f6e8340ff',
                        'RATING_DETAILS' => $entry_rating_details,
                        'TITLE' => $entry_title,
                        'DESCRIPTION' => get_translated_tempcode('images', $just_media_row, 'the_description'),
                        'ID' => strval($row['id']),
                        'MEDIA_TYPE' => 'image',
                        'FILE_SIZE' => $file_size,
                        'SUBMITTER' => strval($row['submitter']),
                        'IMAGE_URL' => $image_url,
                        'CAT' => $row['cat'],
                        'VIEW_URL' => $view_url,
                        'VIEWS' => strval($row['image_views']),
                        'ADD_DATE_RAW' => strval($row['add_date']),
                        'EDIT_DATE_RAW' => ($row['edit_date'] === null) ? '' : strval($row['edit_date']),
                        'ADD_DATE' => get_timezoned_date($row['add_date']),
                        'EDIT_DATE' => ($row['edit_date'] === null) ? '' : get_timezoned_date($row['edit_date']),
                        'START' => strval($start),
                        '_EDIT_URL' => $_edit_url,
                        'COMMENT_COUNT' => ((get_option('is_on_comments') == '1') && (!has_no_forum()) && ($row['allow_comments'] >= 1)),
                    ];
                    $entry = do_template('GALLERY_IMAGE', $entry_map);
                    $entries->attach(do_template('GALLERY_ENTRY_WRAP', ['_GUID' => '13134830e1ebea158ab44885eeec0953', 'ENTRY' => $entry] + $entry_map));

                    break;

                case 'video':
                    // Display video
                    $entry_title = get_translated_text($row['title']);
                    $view_url = build_url(['page' => ($zone == '_SELF' && running_script('index')) ? get_page_name() : 'galleries', 'type' => 'video', 'id' => $row['id'], 'root' => $root, 'sort' => $sort], $zone);
                    $thumb_url = $row['thumb_url'];
                    if ($thumb_url == '') {
                        $thumb_url = find_theme_image('na');
                    }
                    if (url_is_local($thumb_url)) {
                        $thumb_url = get_custom_base_url() . '/' . $thumb_url;
                    }
                    $full_url = $row['url'];
                    if (url_is_local($full_url)) {
                        $full_url = get_custom_base_url() . '/' . $full_url;
                    }

                    $entry_rating_details = ($row['allow_rating'] == 1) ? display_rating($view_url, get_translated_text($row['title']), 'videos', strval($row['id']), 'RATING_INLINE_STATIC', $row['submitter']) : null;

                    $_edit_url = new Tempcode();
                    if (has_delete_permission('mid', get_member(), $row['submitter'], 'cms_galleries', ['galleries', $row['cat']])) {
                        $_edit_url = build_url(['page' => 'cms_galleries', 'type' => '__edit_other', 'id' => $row['id'], 'redirect' => protect_url_parameter(SELF_REDIRECT_RIP)], get_module_zone('cms_galleries'));
                        if ($row['submitter'] == get_member()) {
                            $GLOBALS['DO_NOT_CACHE_THIS'] = true; // If delete was due to groups, groups is a cache key anyways
                        }
                    }

                    $entry_map = [
                        '_GUID' => '66b7fb4d3b61ef79d6803c170d102cbf',
                        'RATING_DETAILS' => $entry_rating_details,
                        'TITLE' => $entry_title,
                        'DESCRIPTION' => get_translated_tempcode('videos', $just_media_row, 'the_description'),
                        'ID' => strval($row['id']),
                        'MEDIA_TYPE' => 'video',
                        'CAT' => $row['cat'],
                        'VIEW_URL' => $view_url,
                        'SUBMITTER' => strval($row['submitter']),
                        'FULL_URL' => $full_url,
                        'THUMB_URL' => $thumb_url,
                        'VIDEO_DETAILS' => show_video_details($row),
                        'VIEWS' => strval($row['video_views']),
                        'ADD_DATE_RAW' => strval($row['add_date']),
                        'EDIT_DATE_RAW' => ($row['edit_date'] === null) ? '' : strval($row['edit_date']),
                        'ADD_DATE' => get_timezoned_date($row['add_date']),
                        'EDIT_DATE' => ($row['edit_date'] === null) ? '' : get_timezoned_date($row['edit_date']),
                        'START' => strval($start),
                        '_EDIT_URL' => $_edit_url,
                        'COMMENT_COUNT' => ((get_option('is_on_comments') == '1') && (!has_no_forum()) && ($row['allow_comments'] >= 1)),
                    ];
                    $entry = do_template('GALLERY_VIDEO', $entry_map);
                    $entries->attach(do_template('GALLERY_ENTRY_WRAP', ['_GUID' => 'a0ff010ae7fd1f7b3341993072ed23cf', 'ENTRY' => $entry] + $entry_map));

                    break;
            }
        }

        // Empty? Bomb out somehow
        if ($entries->is_empty_shell()) {
            if ((!isset($map['render_if_empty'])) || ($map['render_if_empty'] == '0')) {
                $submit_url = new Tempcode();
                $add_name = null;
                if ((has_actual_page_access(null, 'cms_galleries', null, null)) && (has_submit_permission('mid', get_member(), get_ip_address(), 'cms_galleries', ['galleries', $cat_raw])) && (can_submit_to_gallery($cat_raw))) {
                    if ($GLOBALS['SITE_DB']->query_select_value_if_there('galleries', 'accept_images', ['name' => $cat_raw]) !== null) {
                        $submit_url = build_url(['page' => 'cms_galleries', 'type' => 'add', 'cat' => $cat_raw, 'redirect' => protect_url_parameter(SELF_REDIRECT_RIP)], get_module_zone('cms_galleries'));
                        $add_name = do_lang_tempcode('ADD_IMAGE');
                    } elseif ($GLOBALS['SITE_DB']->query_select_value_if_there('galleries', 'accept_videos', ['name' => $cat_raw]) !== null) {
                        $submit_url = build_url(['page' => 'cms_galleries', 'type' => 'add_other', 'cat' => $cat_raw, 'redirect' => protect_url_parameter(SELF_REDIRECT_RIP)], get_module_zone('cms_galleries'));
                        $add_name = do_lang_tempcode('ADD_VIDEO');
                    }
                }
                return do_template('BLOCK_NO_ENTRIES', [
                    '_GUID' => 'bf84d65b8dd134ba6cd7b1b7bde99de2',
                    'BLOCK_ID' => $block_id,
                    'HIGH' => false,
                    'TITLE' => $title,
                    'MESSAGE' => do_lang_tempcode('NO_ENTRIES'),
                    'ADD_NAME' => $add_name,
                    'SUBMIT_URL' => $submit_url,
                ]);
            }
        }

        $slideshow_url = null;
        if (($first_type !== null) && ($first_id !== null)) {
            $slideshow_url = build_url(['page' => '_SELF', 'type' => $first_type, 'id' => $first_id, 'cat' => $cat_raw, 'wide_high' => 1, 'slideshow' => 1, 'days' => $days, 'sort' => ($sort == get_option('gallery_media_default_sort_order')) ? null : $sort, 'select' => ($image_select == '') ? null : $map['select'], 'video_select' => ($video_select == '') ? null : $map['video_select']] + propagate_filtercode(), '_SELF', [], true);
        }

        // Sorting
        $sorting = null;
        if ($show_sorting) {
            $_selectors = [];
            if (get_option('is_on_rating') == '1') {
                $_selectors['average_rating DESC'] = 'RATING';
                $_selectors['compound_rating DESC'] = 'POPULARITY';
            }
            $_selectors = array_merge($_selectors, [
                'url ASC' => 'FILENAME',
                'recent ASC' => 'OLDEST_FIRST',
                'recent DESC' => 'NEWEST_FIRST',
                'title ASC' => 'TITLE',
            ]);
            $selectors = new Tempcode();
            foreach ($_selectors as $selector_value => $selector_name) {
                $selected = ($sort == $selector_value);
                $selectors->attach(do_template('PAGINATION_SORTER', ['SELECTED' => $selected, 'NAME' => do_lang_tempcode($selector_name), 'VALUE' => $selector_value]));
            }
            $sort_url = get_self_url(false, false, ['sort' => null], false, true);
            $sorting = do_template('PAGINATION_SORT', ['SORT' => 'sort', 'URL' => $sort_url, 'SELECTORS' => $selectors]);
        }

        // Pagination
        $pagination = new Tempcode();
        if ($do_pagination) {
            require_code('templates_pagination');
            $_selectors = array_map('intval', explode(',', get_option('gallery_selectors')));
            $pagination = pagination(do_lang_tempcode('MEDIA'), $start, $block_id . '_start', $max, $block_id . '_max', $max_rows, false, null, $_selectors);
        }

        // Render
        return do_template('BLOCK_MAIN_GALLERY_EMBED', [
            '_GUID' => 'b7b969c8fe8c398dd6e3af7ee06717ea',
            'BLOCK_ID' => $block_id,
            'BLOCK_PARAMS' => comma_list_arr_to_str(['block_id' => $block_id] + $map),
            'SLIDESHOW_URL' => $slideshow_url,
            'SORTING' => $sorting,
            'PAGINATION' => $pagination,
            'TITLE' => $title,
            'CAT' => $cat_raw,
            'ENTRIES' => $entries,
            'START' => strval($start),
            'MAX' => strval($max),
            'START_PARAM' => $block_id . '_start',
            'MAX_PARAM' => $block_id . '_max',
            'EXTRA_GET_PARAMS' => (get_param_integer($block_id . '_max', null) === null) ? null : ('&' . $block_id . '_max=' . urlencode(strval($max))),
        ]);
    }
}
