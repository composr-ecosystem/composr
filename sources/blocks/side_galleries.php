<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2020

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    galleries
 */

/**
 * Block class.
 */
class Block_side_galleries
{
    /**
     * Find details of the block.
     *
     * @return ?array Map of block info (null: block is disabled)
     */
    public function info() : ?array
    {
        $info = [];
        $info['author'] = 'Chris Graham';
        $info['organisation'] = 'ocProducts';
        $info['hacked_by'] = null;
        $info['hack_version'] = null;
        $info['version'] = 2;
        $info['locked'] = false;
        $info['parameters'] = ['param', 'depth', 'zone', 'show_empty', 'check'];
        return $info;
    }

    /**
     * Find caching details for the block.
     *
     * @return ?array Map of cache details (cache_on and ttl) (null: block is disabled)
     */
    public function caching_environment() : ?array
    {
        $info = [];
        $info['cache_on'] = <<<'PHP'
        [
            array_key_exists('depth', $map) ? intval($map['depth']) : 0,
            array_key_exists('param', $map) ? $map['param'] : 'root',
            array_key_exists('zone', $map) ? $map['zone'] : '',
            array_key_exists('show_empty', $map) ? ($map['show_empty'] == '1') : false,
            array_key_exists('check', $map) ? ($map['check'] == '1') : true,
        ]
PHP;
        $info['special_cache_flags'] = CACHE_AGAINST_DEFAULT | CACHE_AGAINST_PERMISSIVE_GROUPS;
        $info['ttl'] = 60 * 2;
        return $info;
    }

    /**
     * Execute the block.
     *
     * @param  array $map A map of parameters
     * @return Tempcode The result of execution
     */
    public function run(array $map) : object
    {
        $error_msg = new Tempcode();
        if (!addon_installed__messaged('galleries', $error_msg)) {
            return $error_msg;
        }

        require_lang('galleries');
        require_code('galleries');
        require_css('galleries');

        $block_id = get_block_id($map);

        $check_perms = array_key_exists('check', $map) ? ($map['check'] == '1') : true;

        $parent_id = @cms_empty_safe($map['param']) ? 'root' : $map['param'];

        $zone = array_key_exists('zone', $map) ? $map['zone'] : get_module_zone('galleries');

        $show_empty = array_key_exists('show_empty', $map) ? ($map['show_empty'] == '1') : false;

        $depth = array_key_exists('depth', $map) ? intval($map['depth']) : 0; // If depth is 1 then we go down 1 level. Only 0 or 1 is supported.

        $extra_join_sql = '';
        $where_sup = '';
        if ((!$GLOBALS['FORUM_DRIVER']->is_super_admin(get_member())) && ($check_perms)) {
            $where_sup .= get_category_permission_where_clause('gallery', 'name', get_member(), get_permission_where_clause_groups(get_member()), 'r');
        }

        // For all galleries off the root gallery
        $query = 'SELECT name,fullname,add_date FROM ' . $GLOBALS['SITE_DB']->get_table_prefix() . 'galleries r' . $extra_join_sql;
        $query .= ' WHERE ' . db_string_equal_to('parent_id', $parent_id) . ' AND name NOT LIKE \'' . db_encode_like('download\_%') . '\'' . $where_sup;
        $query .= ' ORDER BY add_date';
        $galleries = $GLOBALS['SITE_DB']->query($query, 300 /*reasonable limit*/);
        if ($depth == 0) {
            $content = $this->inside($zone, $galleries, 'BLOCK_SIDE_GALLERIES_LINE', $show_empty);
        } else {
            $content = new Tempcode();

            foreach ($galleries as $gallery) {
                if (($show_empty) || (gallery_has_content($gallery['name']))) {
                    $subgalleries = $GLOBALS['SITE_DB']->query_select('galleries', ['name', 'fullname', 'add_date'], ['parent_id' => $gallery['name']], 'ORDER BY add_date', 300 /*reasonable limit*/);
                    $nest = $this->inside($zone, $subgalleries, 'BLOCK_SIDE_GALLERIES_LINE_DEPTH', $show_empty);
                    $caption = get_translated_text($gallery['fullname']);
                    $content->attach(do_template('BLOCK_SIDE_GALLERIES_LINE_CONTAINER', ['_GUID' => 'e50b84369b5e2146c4fab4fddc84bf0a', 'ID' => $gallery['name'], 'CAPTION' => $caption, 'CONTENTS' => $nest]));
                }
            }
        }

        $_title = $GLOBALS['SITE_DB']->query_select_value_if_there('galleries', 'fullname', ['name' => $parent_id]);
        if ($_title !== null) {
            $title = get_translated_text($_title);
        } else {
            $title = '';
        }

        return do_template('BLOCK_SIDE_GALLERIES', [
            '_GUID' => 'ed420ce9d1b1dde95eb3fd8473090228',
            'BLOCK_ID' => $block_id,
            'TITLE' => $title,
            'ID' => $parent_id,
            'DEPTH' => $depth != 0,
            'CONTENT' => $content,
        ]);
    }

    /**
     * Show a group of subgalleries for use in a compact tree structure.
     *
     * @param  ID_TEXT $zone The zone our gallery module is in
     * @param  array $galleries A list of gallery rows
     * @param  ID_TEXT $tpl The template to use to show each subgallery
     * @param  boolean $show_empty Whether to show empty galleries
     * @return Tempcode The shown galleries
     */
    protected function inside(string $zone, array $galleries, string $tpl, bool $show_empty) : object
    {
        $content = new Tempcode();

        foreach ($galleries as $gallery) {
            if (($show_empty) || (gallery_has_content($gallery['name']))) {
                $url = build_url(['page' => 'galleries', 'type' => 'browse', 'id' => $gallery['name']], $zone);
                $content->attach(do_template($tpl, ['TITLE' => get_translated_text($gallery['fullname']), 'URL' => $url]));
            }
        }

        return $content;
    }
}
