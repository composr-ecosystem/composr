<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2018

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    language_block
 */

/**
 * Block class.
 */
class Block_top_language
{
    /**
     * Find details of the block.
     *
     * @return ?array Map of block info (null: block is disabled)
     */
    public function info()
    {
        $info = array();
        $info['author'] = 'Chris Graham';
        $info['organisation'] = 'ocProducts';
        $info['hacked_by'] = null;
        $info['hack_version'] = null;
        $info['version'] = 1;
        $info['locked'] = false;
        $info['parameters'] = array();
        return $info;
    }

    /**
     * Find caching details for the block.
     *
     * @return ?array Map of cache details (cache_on and ttl) (null: block is disabled)
     */
    public function caching_environment()
    {
        $info = array();
        $info['cache_on'] = 'array(either_param_string(\'lang\',\'\'),isset($map[\'block_id\'])?$map[\'block_id\']:\'\',user_lang())';
        $info['ttl'] = (get_value('no_block_timeout') === '1') ? 60 * 60 * 24 * 365 * 5/*5 year timeout*/ : 60;
        return $info;
    }

    /**
     * Execute the block.
     *
     * @param  array $map A map of parameters
     * @return Tempcode The result of execution
     */
    public function run($map)
    {
        if (!multi_lang()) {
            return new Tempcode();
        }

        if (either_param_string('lang', '') != '') {
            return new Tempcode(); // Content UI has an active language, so don't provide a selector
        }

        require_code('lang2');

        $langs = find_all_langs();

        foreach (array_keys($langs) as $lang) {
            $langs[$lang] = array(
                'FULL_NAME' => lookup_language_full_name($lang),
                'COUNTRY_FLAG' => strtolower($this->get_lang_country($lang)),
            );
        }
        sort_maps_by($langs, 'FULL_NAME');

        $current_lang = user_lang();

        return do_template('BLOCK_TOP_LANGUAGE', array(
            '_GUID' => '6dd7dd434722d7fd958773bd08e838c7',
            'LANGS' => $langs,
            'CURRENT_LANG_FULL_NAME' => lookup_language_full_name($current_lang),
            'CURRENT_LANG_COUNTRY_FLAG' => strtolower($this->get_lang_country($current_lang)),
            'CURRENT_LANG' => $current_lang,
        ));
    }

    /**
     * Execute the block.
     *
     * @param  ID_TEXT $lang_iso ISO language code
     * @return ID_TEXT ISO country code
     */
    protected function get_lang_country($lang_iso)
    {
        // Mappings between language and primary country, for those where the ISO codes differ
        //  This list is intentionally incomplete.
        //  It is biased towards languages which have many native speakers, and are used by people likely to be accessing a multi-language Composr website.
        static $langs_to_countries = null;
        if ($langs_to_countries === null) {
            $langs_to_countries = array(
                'ZH' => 'CN',
                'EN' => (get_option('yeehaw') == '1') ? 'US' : 'GB',
                'AR' => 'SA',
                'JA' => 'JP',
                'JV' => 'ID',
                'MS' => 'MY',
                'VI' => 'VN',
                'KO' => 'KR',
                'FA' => 'IR',
                'UK' => 'UA',
                'PS' => 'AF',

                // Many major native languages of Pakistan
                'UR' => 'PK',
                'PA' => 'PK',
                'SD' => 'PK',

                // Many major native languages of India
                'ML' => 'IN',
                'KN' => 'IN',
                'GU' => 'IN',
                'OR' => 'IN',
                'TA' => 'IN',
                'HI' => 'IN',
                'BN' => 'IN',
                'TE' => 'IN',
                'MR' => 'IN',
            );
        }

        if (array_key_exists($lang_iso, $langs_to_countries)) {
            $country = $langs_to_countries[$lang_iso];
        } else {
            $country = $lang_iso;
        }
        if (find_theme_image('flags_large/' . strtolower($country), true) == '') {
            $country = '';
        }

        return $country;
    }
}
