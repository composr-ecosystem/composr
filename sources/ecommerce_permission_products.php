<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2020

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    ecommerce
 */

/**
 * Whether permission products management is allowed by the current user.
 *
 * @return boolean Whether it is
 */
function permission_products_management_allowed() : bool
{
    if (!has_actual_page_access(get_member(), 'admin_ecommerce')) {
        return false;
    }

    return true;
}

/**
 * Get form fields for managing a category's permission product.
 *
 * @param  ID_TEXT $resource_type Resource type
 * @param  ?ID_TEXT $category_id Category ID (null: new)
 * @return Tempcode Form fields
 */
function permission_product_form(string $resource_type, ?string $category_id = null) : object
{
    if (!permission_products_management_allowed()) {
        return new Tempcode();
    }

    require_code('ecommerce');

    $price = null;
    $tax_code = '0%';
    $price_points = null;
    $hours = null;
    $section_hidden = true;
    if ($category_id !== null) {
        $map = _get_permission_product_save_map($resource_type, $category_id);
        $existing_rows = $GLOBALS['SITE_DB']->query_select('ecom_prods_permissions', ['*'], $map, '', 1);
        if (array_key_exists(0, $existing_rows)) {
            $existing_row = $existing_rows[0];

            $price = $existing_row['p_price'];
            $tax_code = $existing_row['p_tax_code'];
            $price_points = $existing_row['p_price_points'];
            $hours = $existing_row['p_hours'];

            $section_hidden = false;
        }
    }

    $fields = new Tempcode();

    $fields->attach(do_template('FORM_SCREEN_FIELD_SPACER', ['_GUID' => '096274e977e4cd99ef20eb4b1c2174e3', 'TITLE' => do_lang_tempcode('SELL_CATEGORY_ACCESS'), 'HELP' => do_lang_tempcode('DESCRIPTION_SELL_CATEGORY_ACCESS'), 'SECTION_HIDDEN' => $section_hidden]));

    $fields->attach(form_input_float(do_lang_tempcode('PRICE'), do_lang_tempcode('DESCRIPTION_PRICE'), 'permission_product__price', $price, false));
    $fields->attach(form_input_tax_code(do_lang_tempcode(get_option('tax_system')), do_lang_tempcode('DESCRIPTION_TAX_CODE'), 'permission_product__tax_code', $tax_code, false));
    if (addon_installed('points')) {
        $fields->attach(form_input_integer(do_lang_tempcode('PRICE_POINTS'), do_lang_tempcode('DESCRIPTION_PRICE_POINTS'), 'permission_product__price_points', $price_points, false));
    }
    $fields->attach(form_input_integer(do_lang_tempcode('PERMISSION_HOURS'), do_lang_tempcode('DESCRIPTION_PERMISSION_HOURS'), 'permission_product__hours', $hours, false));

    return $fields;
}

/**
 * Get the identifying database row map for a particular permission product for category access.
 *
 * @param  ID_TEXT $resource_type Resource type
 * @param  ID_TEXT $category_id Category ID
 * @return array Map
 */
function _get_permission_product_save_map(string $resource_type, string $category_id) : array
{
    require_code('content');
    $module = convert_composr_type_codes('content_type', $resource_type, 'module');

    return [
        'p_enabled' => 1,
        'p_type' => 'member_category_access',
        'p_privilege' => '',
        'p_zone' => '',
        'p_page' => '',
        'p_module' => $module,
        'p_category' => $category_id,
    ];
}

/**
 * Save a category's permission product.
 *
 * @param  ID_TEXT $resource_type Resource type
 * @param  ID_TEXT $old_category_id Old category ID
 * @param  ?ID_TEXT $new_category_id New category ID (null: same as old category ID)
 */
function permission_product_save(string $resource_type, string $old_category_id, ?string $new_category_id = null)
{
    if (!permission_products_management_allowed()) {
        return;
    }

    require_code('ecommerce');

    if ($new_category_id === null) {
        $new_category_id = $old_category_id;
    }

    $_price = post_param_string('permission_product__price', '');
    $price = ($_price == '') ? null : float_unformat($_price);

    $tax_code = post_param_tax_code('permission_product__tax_code');

    $price_points = post_param_integer('permission_product__price_points', null);

    $hours = post_param_integer('permission_product__hours', null);

    $map_old = _get_permission_product_save_map($resource_type, $old_category_id);
    $map_new = _get_permission_product_save_map($resource_type, $new_category_id);

    $existing_rows = $GLOBALS['SITE_DB']->query_select('ecom_prods_permissions', ['*'], $map_old, '', 1);
    if (array_key_exists(0, $existing_rows)) {
        $existing_row = $existing_rows[0];
        $id = $existing_row['id'];
        if (post_param_integer('permission_product__delete', 0) == 1) {
            $operation = 'delete';
        } else {
            if (($price !== null) || ($price_points !== null)) {
                $operation = 'edit';
            } else {
                $operation = 'delete';
            }
        }
    } else {
        if (($price !== null) || ($price_points !== null)) {
            $operation = 'add';
        } else {
            return;
        }
    }

    switch ($operation) {
        case 'add':
        case 'edit':
            list($content_title, , $cma_info, $row, , $url_safe, $cma_ob) = content_get_details($resource_type, $new_category_id);
            $content_type_label = $cma_ob->get_content_type_label($row);

            require_lang('ecommerce');

            if ($hours === null) {
                $title = do_lang('PERMISSION_PRODUCT_PERMANENT_AUTOMATIC_TITLE', $content_title, $content_type_label);
                $description = do_lang('PERMISSION_PRODUCT_PERMANENT_AUTOMATIC_DESCRIPTION', $content_title, $content_type_label);

                $test = do_lang('PERMISSION_PRODUCT_PERMANENT_AUTOMATIC_TITLE_' . $resource_type, $content_title, $content_type_label, null, null, false);
                if ($test !== null) {
                    $title = $test;
                }
                $test = do_lang('PERMISSION_PRODUCT_PERMANENT_AUTOMATIC_DESCRIPTION_' . $resource_type, $content_title, $content_type_label, null, null, false);
                if ($test !== null) {
                    $description = $test;
                }
            } else {
                $time_period = display_time_period(60 * 60 * $hours);
                $title = do_lang('PERMISSION_PRODUCT_TEMPORARY_AUTOMATIC_TITLE', $content_title, $content_type_label, $time_period);
                $description = do_lang('PERMISSION_PRODUCT_TEMPORARY_AUTOMATIC_DESCRIPTION', $content_title, $content_type_label, $time_period);

                $test = do_lang('PERMISSION_PRODUCT_TEMPORARY_AUTOMATIC_TITLE_' . $resource_type, $content_title, $content_type_label, $time_period, null, false);
                if ($test !== null) {
                    $title = $test;
                }
                $test = do_lang('PERMISSION_PRODUCT_TEMPORARY_AUTOMATIC_DESCRIPTION_' . $resource_type, $content_title, $content_type_label, $time_period, null, false);
                if ($test !== null) {
                    $description = $test;
                }
            }

            $mail_subject = do_lang('AUTOMATIC_CATEGORY_ACCESS_SUBJECT', $content_title, $content_type_label, $url_safe);
            $mail_body = do_lang('AUTOMATIC_CATEGORY_ACCESS_BODY', $content_title, $content_type_label, $url_safe);

            if ($resource_type == 'downloads') {
                $mail_body = '{AUTOMATIC}';
            }

            break;
    }

    switch ($operation) {
        case 'add':
            $map = $map_new;
            $map += [
                'p_price' => $price,
                'p_tax_code' => $tax_code,
                'p_price_points' => $price_points,
                'p_hours' => $hours,
            ];
            $map += insert_lang('p_title', $title, 2);
            $map += insert_lang_comcode('p_description', $description, 2);
            $map += insert_lang('p_mail_subject', $mail_subject, 2);
            $map += insert_lang('p_mail_body', $mail_body, 2);
            $GLOBALS['SITE_DB']->query_insert('ecom_prods_permissions', $map);
            break;

        case 'edit':
            $map = $map_new;
            $map += [
                'p_price' => $price,
                'p_tax_code' => $tax_code,
                'p_price_points' => $price_points,
                'p_hours' => $hours,
            ];
            $map += lang_remap('p_title', $existing_row['p_title'], $title);
            $map += lang_remap_comcode('p_description', $existing_row['p_description'], $description);
            $GLOBALS['SITE_DB']->query_update('ecom_prods_permissions', $map, ['id' => $id], '', 1);
            break;

        case 'delete':
            delete_lang($existing_row['p_title']);
            delete_lang($existing_row['p_description']);
            delete_lang($existing_row['p_mail_subject']);
            delete_lang($existing_row['p_mail_body']);
            $GLOBALS['SITE_DB']->query_delete('ecom_prods_permissions', ['id' => $id], '', 1);
            break;
    }
}

/**
 * Delete a product permission attached to a particular module and category combination.
 *
 * @param  ID_TEXT $module The module
 * @param  ID_TEXT $category_id The category ID
 */
function delete_prod_permission(string $module, string $category_id)
{
    $rows = $GLOBALS['SITE_DB']->query_select('ecom_prods_permissions', ['*'], ['p_module' => $module, 'p_category' => $category_id]);

    foreach ($rows as $row) {
        $_title = $row['p_title'];
        $_description = $row['p_description'];
        $_mail_subject = $row['p_mail_subject'];
        $_mail_body = $row['p_mail_body'];

        delete_lang($_title);
        delete_lang($_description);
        delete_lang($_mail_subject);
        delete_lang($_mail_body);
    }

    $GLOBALS['SITE_DB']->query_delete('ecom_prods_permissions', ['p_module' => $module, 'p_category' => $category_id]);
}
