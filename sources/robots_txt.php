<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    robots_txt
 */

/**
 * Find the URL path for the base URL.
 *
 * @return string The URL path
 */
function get_base_url_path() : string
{
    $base_url = get_base_url();
    $base_url_path = cms_parse_url_safe($base_url, PHP_URL_PATH);
    return rtrim($base_url_path, '/');
}

/**
 * Find the path to where the robots.txt file should (probably) be on disk.
 *
 * @return ?PATH robots.txt path (null: unknown)
 */
function find_robots_txt_path() : ?string
{
    $base_url_path = get_base_url_path();

    $path = get_file_base();
    for ($i = 0; $i < substr_count($base_url_path, '/'); $i++) {
        if (($path == '') || ($path == DIRECTORY_SEPARATOR)) {
            return null;
        }
        $path = dirname($path);
    }
    $path .= '/robots.txt';
    return $path;
}

/**
 * Find the domain base URL.
 *
 * @return string Domain base URL
 */
function find_domain_base_url() : string
{
    $base_url = get_base_url();
    $base_url_path = get_base_url_path();

    return substr($base_url, 0, strlen($base_url) - strlen($base_url_path));
}

/**
 * Create appropriate robots.txt file based on the default.
 *
 * @param  ?string $robots_txt New contents (null: default)
 * @param  string $msg Message (returned by reference)
 * @param  boolean $overwrite Overwrite it if it currently exists
 * @return boolean Whether the file was written
 */
function create_robots_txt(?string $robots_txt = null, string &$msg = '', bool $overwrite = false) : bool
{
    require_lang('robots_txt');

    $path = find_robots_txt_path();
    $domain_base_url = find_domain_base_url();

    if ((!$overwrite) && (is_file($path))) {
        $msg = do_lang('ROBOTS_TXT_ALREADY_EXISTS');
        return false;
    }

    if ($robots_txt === null) {
        $robots_txt = get_robots_txt();
    }

    $ret = cms_file_put_contents_safe($path, $robots_txt, FILE_WRITE_FAILURE_SILENT | FILE_WRITE_SYNC_FILE | FILE_WRITE_FIX_PERMISSIONS);
    if ($ret) {
        $msg = do_lang('ROBOTS_TXT_CREATED');

        if ($path != get_file_base() . '/robots.txt') {
            if (http_get_contents($domain_base_url . '/robots.txt', ['trigger_error' => false]) !== $robots_txt) {
                $msg = do_lang('ROBOTS_TXT_NOT_MAPPED');
                @unlink($path);
            }
        }
    } else {
        $msg = do_lang('ROBOTS_TXT_COULD_NOT_WRITE');
    }
    return $ret;
}

/**
 * Get appropriate robots.txt file based on the default.
 *
 * @return string robots.txt file
 */
function get_robots_txt() : string
{
    $default = cms_file_get_contents_safe(get_file_base() . '/data/robots.txt.template', FILE_READ_LOCK);

    $base_url = get_base_url();
    $base_url_path = get_base_url_path();

    $default = str_replace('Disallow: /', 'Disallow: ' . $base_url_path . '/', $default);

    $default = str_replace('Sitemap: http://yourbaseurl/', 'Sitemap: ' . $base_url . '/', $default);

    return $default;
}
