<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    core
 */

/*EXTRA FUNCTIONS: zip_\w+*/

/**
 * Convert a ZIP file to a TAR file.
 *
 * @param  PATH $in_path The path of the ZIP file to convert
 * @param  ?PATH $out_path The path of the TAR file to save to (null: make up a temporary path)
 */
function convert_zip_to_tar(string $in_path, ?string &$out_path = null)
{
    $old_limit = cms_extend_time_limit(TIME_LIMIT_EXTEND__SLOW);

    require_code('tar');
    require_code('files');
    require_lang('dearchive');

    if (!class_exists('ZipArchive', false)) {
        warn_exit(do_lang_tempcode('ZIP_NOT_ENABLED'));
    }

    $zip_archive = new ZipArchive;

    $in_file = $zip_archive->open($in_path);
    if ($in_file !== true) {
        require_code('failure');
        warn_exit(zip_error($in_path, $in_file), false, true);
    }

    if ($out_path === null) {
        $out_path = cms_tempnam();
    }
    $out_file = tar_open($out_path, 'wb');

    for ($i = 0; $i < $zip_archive->numFiles; $i++) {
        $_file = $zip_archive->getNameIndex($i);

        $temp_path = cms_tempnam();
        $temp_file = @fopen($temp_path, 'wb') or intelligent_write_error($temp_path);
        $more = $zip_archive->getFromIndex($i);
        if ($more === false) { // Error reading
            warn_exit(zip_error($in_path, ZipArchive::ER_READ), false, true);
            break;
        }
        if ($more === '') { // No more to read
            continue;
        }
        if (fwrite($temp_file, $more) < strlen($more)) {
            warn_exit(do_lang_tempcode('COULD_NOT_SAVE_FILE', escape_html($out_path)), false, true);
            break;
        }
        fclose($temp_file);

        tar_add_file($out_file, $_file, $temp_path, 0644, null, true, false, true);

        @unlink($temp_path);
    }

    $zip_archive->close();
    tar_close($out_file);

    unset($zip_archive);

    cms_set_time_limit($old_limit);
}
