<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    health_check
 */

/**
 * Hook class.
 */
class Hook_checklist_health_check
{
    /**
     * Find items to include on the staff checklist.
     *
     * @return array An array of tuples: The task row to show, the number of seconds until it is due (or null if not on a timer), the number of things to sort out (or null if not on a queue), The name of the config option that controls the schedule (or null if no option)
     */
    public function run() : array
    {
        if (!addon_installed('health_check')) {
            return [];
        }

        require_lang('health_check');

        $limit_hours = intval(ceil(intval(get_option('hc_cron_regularity')) / 60));
        $sections = get_option('hc_cron_sections_to_run');
        $last_run = get_value('last_run__health_check', null, true);
        if (empty(trim($sections)) || ($limit_hours == 0) || ($last_run === null)) {
            $_status = do_template('BLOCK_MAIN_STAFF_CHECKLIST_ITEM_STATUS_0');
            $seconds_ago = 0;
        } else {
            $_status = do_template('BLOCK_MAIN_STAFF_CHECKLIST_ITEM_STATUS_1');
            $seconds_ago = time() - intval($last_run);
        }

        if (($limit_hours == 0) || empty(trim($sections))) { // Health check must be manually run
            $status = 0;
            if ($last_run !== null) { // Previously run before
                $seconds_ago = time() - intval($last_run);
                if ($seconds_ago < (intval(get_option('hc_cron_regularity')) * 60)) { // Not due right now
                    $_status = do_template('BLOCK_MAIN_STAFF_CHECKLIST_ITEM_STATUS_1');
                } else { // Due
                    $_status = do_template('BLOCK_MAIN_STAFF_CHECKLIST_ITEM_STATUS_0');
                }
            } else { // Due for the first time
                $seconds_ago = null;
                $_status = do_template('BLOCK_MAIN_STAFF_CHECKLIST_ITEM_STATUS_0');
            }
        } else { // Health check will run itself
            $status = 1;
            $limit_hours = null;
            if ($last_run !== null) { // Previously run before
                $seconds_ago = ((intval($last_run) + (intval(get_option('hc_cron_regularity')) * 60)) - time());
                if ($seconds_ago > 0) { // Not due right now
                    $_status = do_template('BLOCK_MAIN_STAFF_CHECKLIST_ITEM_STATUS_1');
                } else { // Due
                    $_status = do_template('BLOCK_MAIN_STAFF_CHECKLIST_ITEM_STATUS_0');
                }
            } else { // Due for the first time
                $seconds_ago = null;
                $_status = do_template('BLOCK_MAIN_STAFF_CHECKLIST_ITEM_STATUS_0');
            }
        }

        list($info, $seconds_due_in) = staff_checklist_time_ago_and_due($seconds_ago, $limit_hours);

        require_code('config2');
        $config_url = config_option_url('hc_cron_sections_to_run');

        $url = build_url(['page' => 'admin_health_check', 'type' => 'browse'], get_module_zone('admin_health_check'));
        $tpl = do_template('BLOCK_MAIN_STAFF_CHECKLIST_ITEM', [
            '_GUID' => '641f263acd905dd21ed25ed47a3285f6',
            'CONFIG_URL' => $config_url,
            'URL' => $url,
            'STATUS' => $_status,
            'TASK' => do_lang_tempcode('CHECKLIST_HEALTH_CHECK'),
            'INFO' => $info,
        ]);
        return [[$tpl, ($status == 1) ? null : $seconds_due_in, ($status == 1) ? 0 : null, 'hc_cron_regularity']];
    }
}
