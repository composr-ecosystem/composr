<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2022

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    calendar
 */

/**
 * Hook class.
 */
class Hook_stats_calendar
{
    /**
     * Show a stats section.
     *
     * @return Tempcode The result of execution
     */
    public function run() : object
    {
        if (!addon_installed('calendar')) {
            return new Tempcode();
        }

        require_lang('calendar');

        $bits = new Tempcode();
        if (get_option('calendar_show_stats_count_events') == '1') {
            $num_events = $GLOBALS['SITE_DB']->query_select_value('calendar_events', 'COUNT(*)');

            $bits->attach(do_template('BLOCK_SIDE_STATS_SUBLINE', [
                '_GUID' => 'bf4ae0b77a8ee8bef42adb8d7beb3884',
                'KEY' => do_lang_tempcode('EVENTS'),
                'RAW_VALUE' => strval($num_events),
                'VALUE' => integer_format($num_events, 0),
            ]));
        }
        if (get_option('calendar_show_stats_count_events_this_week') == '1') {
            require_code('calendar');
            $events = calendar_matches($GLOBALS['FORUM_DRIVER']->get_guest_id(), $GLOBALS['FORUM_DRIVER']->get_guest_id(), true, utctime_to_usertime(time()), utctime_to_usertime(time() + 60 * 60 * 24 * 7));
            $this_week = count($events);

            $bits->attach(do_template('BLOCK_SIDE_STATS_SUBLINE', [
                '_GUID' => '315d49be79dddfe1019c02939d308632',
                'KEY' => do_lang_tempcode('EVENTS_THIS_WEEK'),
                'RAW_VALUE' => strval($this_week),
                'VALUE' => integer_format($this_week, 0),
            ]));
        }
        if (get_option('calendar_show_stats_count_events_this_month') == '1') {
            require_code('calendar');
            $events = calendar_matches($GLOBALS['FORUM_DRIVER']->get_guest_id(), $GLOBALS['FORUM_DRIVER']->get_guest_id(), true, utctime_to_usertime(time()), utctime_to_usertime(time() + 60 * 60 * 24 * 31));
            $this_month = count($events);

            $bits->attach(do_template('BLOCK_SIDE_STATS_SUBLINE', ['
                _GUID' => 'c3a3ad0d6ae8e4f98ac3a5d0ceabc841',
                'KEY' => do_lang_tempcode('EVENTS_THIS_MONTH'),
                'RAW_VALUE' => strval($this_month),
                'VALUE' => integer_format($this_month, 0),
            ]));
        }
        if (get_option('calendar_show_stats_count_events_this_year') == '1') {
            require_code('calendar');
            $events = calendar_matches($GLOBALS['FORUM_DRIVER']->get_guest_id(), $GLOBALS['FORUM_DRIVER']->get_guest_id(), true, utctime_to_usertime(time()), utctime_to_usertime(time() + 60 * 60 * 24 * 365));
            $this_year = count($events);

            $bits->attach(do_template('BLOCK_SIDE_STATS_SUBLINE', [
                '_GUID' => 'f77394adef0febff55cbfc288f979408',
                'KEY' => do_lang_tempcode('EVENTS_THIS_YEAR'),
                'RAW_VALUE' => strval($this_year),
                'VALUE' => integer_format($this_year, 0),
            ]));
        }

        if ($bits->is_empty_shell()) {
            return new Tempcode();
        }

        $section = do_template('BLOCK_SIDE_STATS_SECTION', ['_GUID' => 'ff9667093f093bec44a7be5e97bf183c', 'SECTION' => do_lang_tempcode('CALENDAR'), 'CONTENT' => $bits]);

        return $section;
    }
}
