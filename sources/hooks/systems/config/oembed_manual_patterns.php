<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    core_rich_media
 */

/**
 * Hook class.
 */
class Hook_config_oembed_manual_patterns
{
    /**
     * Gets the details relating to the config option.
     *
     * @return ?array The details (null: disabled)
     */
    public function get_details() : ?array
    {
        return [
            'human_name' => 'OEMBED_MANUAL_PATTERNS',
            'type' => 'text',
            'category' => 'CONTENT_EDITING',
            'group' => 'MEDIA',
            'explanation' => 'CONFIG_OPTION_oembed_manual_patterns',
            'shared_hosting_restricted' => '0',
            'list_options' => '',
            'order_in_category_group' => 5,
            'required' => false,
            'public' => false,
            'addon' => 'core_rich_media',
        ];
    }

    /**
     * Gets the default value for the config option.
     *
     * @return ?string The default value (null: option is disabled)
     */
    public function get_default() : ?string
    {
        $default = '';

        // Update oembed automated test if updating this too

        $default .= "(https?://(www\.)?youtube\.com/watch\?v=.*|https?://youtu\.be/\..*) = https://www.youtube.com/oembed\n";
        $default .= "(https?://vimeo\.com/\d+) = https://vimeo.com/api/oembed.{format}\n";
        $default .= "(https?://(www\.)?dailymotion\.com/video/.*|https?://dai\.ly/.*) = https://www.dailymotion.com/services/oembed\n";
        $default .= "(https?://www\.slideshare\.net/.*/.*) = https://www.slideshare.net/api/oembed/2\n";
        $default .= "(https?://.*\.flickr\.com/photos/.*|https?://flic\.kr/p/.*) = https://www.flickr.com/services/oembed?format={format}\n";
        //$default .= "(https?://(www\.)?instagram\.com/p/.*) = https://api.instagram.com/oembed\n"; Requires API key now :(
        $default .= "(https?://soundcloud\.com/.*/.*) = https://soundcloud.com/oembed?format={format}\n";
        $default .= "(https?://twitter\.com/.*/status/\d+) = https://api.twitter.com/1/statuses/oembed.{format}\n";
        //$default .= "(https?://(www\.)?facebook\.com/.*) = https://www.facebook.com/plugins/page/oembed.{format}/\n"; // Facebook may give "Security Check Required" when trying to auto-detect, so hard-code - Requires API key now :(

        /*
        $default .= "(https?://.*\.tumblr\.com/post/.*) = https://api.embed.ly/1/oembed?key=123456\n";
        $default .= "(https?://edition\.cnn\.com/.*) = https://api.embed.ly/1/oembed?key=123456\n";
        $default .= "(https?://maps\.google\.(co\.uk|com)/.*) = https://api.embed.ly/1/oembed?key=123456\n";
        $default .= "(https?://www\.google\.(co\.uk|com)/maps/.*) = https://api.embed.ly/1/oembed?key=123456\n";
        $default .= "(https?://www\.imdb\.com/title/.*) = https://api.embed.ly/1/oembed?key=123456\n";
        $default .= "(https?://(www\.)?scribd\.com/(doc|document|documents)/.*) = https://api.embed.ly/1/oembed?key=123456\n";
        $default .= "(https?://\w+\.wiki(pedia|media)\.org/wiki/.*) = https://api.embed.ly/1/oembed?key=123456\n";
        $default .= "(https?://xkcd\.com/\d+/?) = https://api.embed.ly/1/oembed?key=123456\n";
        */

        return $default;

        // Don't trust noembed.com too much, things they say work often do not
        // embedly is paid now
        // NB: To put everything through...
        //  embed.ly, you would do ".* = https://api.embed.ly/1/oembed?key=123456"
        //  Noembed, you would do ".* = https://noembed.com/embed"
        // iframely is interesting. It is self-hosted.
        // Largely though, Composr contains equivalent features to these products.
    }
}
