<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    search
 */

/**
 * Hook class.
 */
class Hook_addon_registry_search
{
    /**
     * Get a list of file permissions to set.
     *
     * @param  boolean $runtime Whether to include wildcards represented runtime-created chmoddable files
     * @return array File permissions to set
     */
    public function get_chmod_array(bool $runtime = false) : array
    {
        return [];
    }

    /**
     * Get the version of the software this addon is for (used in generating the TAR filename).
     *
     * @return float Version number
     */
    public function get_version() : float
    {
        return cms_version_number();
    }

    /**
     * Get the minimum required version of the website software needed to use this addon.
     *
     * @return float Minimum required website software version
     */
    public function get_min_cms_version() : float
    {
        return 11.0;
    }

    /**
     * Get the maximum compatible version of the website software to use this addon.
     *
     * @return ?float Maximum compatible website software version (null: no maximum version currently)
     */
    public function get_max_cms_version() : ?float
    {
        return 11.9;
    }

    /**
     * Get the addon category.
     *
     * @return string The category
     */
    public function get_category() : string
    {
        return 'Information Display';
    }

    /**
     * Get the description of the addon.
     *
     * @return string Description of the addon
     */
    public function get_description() : string
    {
        return 'Multi-content search engine.';
    }

    /**
     * Get a list of tutorials that apply to this addon.
     *
     * @return array List of tutorials
     */
    public function get_applicable_tutorials() : array
    {
        return [
            'tut_search',
        ];
    }

    /**
     * Get a mapping of dependency types.
     *
     * @return array A structure specifying dependency information
     */
    public function get_dependencies() : array
    {
        return [
            'requires' => [],
            'recommends' => [],
            'conflicts_with' => [],
        ];
    }

    /**
     * Explicitly say which icon should be used.
     *
     * @return URLPATH Icon
     */
    public function get_default_icon() : string
    {
        return 'themes/default/images/icons/menu/adminzone/audit/statistics/search.svg';
    }

    /**
     * Get a list of files that belong to this addon.
     *
     * @return array List of files
     */
    public function get_file_list() : array
    {
        return [
            'data/opensearch.php',
            'lang/EN/search.ini',
            'site/pages/modules/search.php',
            'sources/blocks/main_search.php',
            'sources/blocks/side_tag_cloud.php',
            'sources/blocks/top_search.php',
            'sources/crc24.php',
            'sources/hooks/modules/admin_setupwizard/search.php',
            'sources/hooks/modules/admin_stats/searches.php',
            'sources/hooks/modules/search/.htaccess',
            'sources/hooks/modules/search/index.html',
            'sources/hooks/systems/addon_registry/search.php',
            'sources/hooks/systems/cleanup/fast_custom_index.php',
            'sources/hooks/systems/config/block_top_search.php',
            'sources/hooks/systems/config/fast_custom_index__allow_fuzzy_search.php',
            'sources/hooks/systems/config/fast_custom_index__count_estimate.php',
            'sources/hooks/systems/config/fast_custom_index__do_stemming.php',
            'sources/hooks/systems/config/fast_custom_index__enable.php',
            'sources/hooks/systems/config/fast_custom_index__enable_for_filtered.php',
            'sources/hooks/systems/config/fast_custom_index__enable_for_minimum_ngram_count.php',
            'sources/hooks/systems/config/fast_custom_index__enable_for_ngrams.php',
            'sources/hooks/systems/config/fast_custom_index__enable_for_no_fulltext.php',
            'sources/hooks/systems/config/fast_custom_index__enable_for_under_radar.php',
            'sources/hooks/systems/config/fast_custom_index__max_ngram_size.php',
            'sources/hooks/systems/config/fast_custom_index__max_post_length.php',
            'sources/hooks/systems/config/fast_custom_index__scale_by_commonality.php',
            'sources/hooks/systems/config/fast_custom_index__use_imprecise_ordering.php',
            'sources/hooks/systems/config/maximum_autocomplete_suggestions.php',
            'sources/hooks/systems/config/minimum_autocomplete_length.php',
            'sources/hooks/systems/config/minimum_autocomplete_past_search.php',
            'sources/hooks/systems/config/search_days_default.php',
            'sources/hooks/systems/config/search_did_you_mean.php',
            'sources/hooks/systems/config/search_do_days_fallback.php',
            'sources/hooks/systems/config/search_maximum_result_count_point.php',
            'sources/hooks/systems/config/search_results_per_page.php',
            'sources/hooks/systems/config/search_with_date_range.php',
            'sources/hooks/systems/config_categories/search.php',
            'sources/hooks/systems/cron/fast_custom_index.php',
            'sources/hooks/systems/page_groupings/search.php',
            'sources/hooks/systems/privacy/search.php',
            'sources/hooks/systems/realtime_rain/search.php',
            'sources/hooks/systems/sitemap/search.php',
            'sources/lang_tokeniser_EN.php',
            'sources/search.php',
            'sources_custom/hooks/modules/search/.htaccess',
            'sources_custom/hooks/modules/search/index.html',
            'themes/default/css/search.css',
            'themes/default/images/icons/menu/adminzone/audit/statistics/search.svg',
            'themes/default/images/icons_monochrome/menu/adminzone/audit/statistics/search.svg',
            'themes/default/javascript/search.js',
            'themes/default/templates/BLOCK_MAIN_SEARCH.tpl',
            'themes/default/templates/BLOCK_SIDE_TAG_CLOUD.tpl',
            'themes/default/templates/BLOCK_TOP_SEARCH.tpl',
            'themes/default/templates/SEARCH_ADVANCED.tpl',
            'themes/default/templates/SEARCH_DOMAINS.tpl',
            'themes/default/templates/SEARCH_FORM_SCREEN.tpl',
            'themes/default/templates/SEARCH_FOR_SEARCH_DOMAIN.tpl',
            'themes/default/templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION.tpl',
            'themes/default/templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_DATE.tpl',
            'themes/default/templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_FLOAT.tpl',
            'themes/default/templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_INTEGER.tpl',
            'themes/default/templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_JUST_DATE.tpl',
            'themes/default/templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_JUST_TIME.tpl',
            'themes/default/templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_LIST.tpl',
            'themes/default/templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_MULTI_LIST.tpl',
            'themes/default/templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_TEXT.tpl',
            'themes/default/templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_TICK.tpl',
            'themes/default/templates/SEARCH_RESULT.tpl',
            'themes/default/templates/SEARCH_RESULT_TABLE.tpl',
            'themes/default/templates/TAGS.tpl',
            'themes/default/xml/OPENSEARCH.xml',
        ];
    }

    /**
     * Get mapping between template names and the method of this class that can render a preview of them.
     *
     * @return array The mapping
     */
    public function tpl_previews() : array
    {
        return [
            'templates/BLOCK_MAIN_SEARCH.tpl' => 'block_main_search',
            'templates/BLOCK_TOP_SEARCH.tpl' => 'block_top_search',
            'templates/BLOCK_SIDE_TAG_CLOUD.tpl' => 'block_side_tag_cloud',
            'templates/TAGS.tpl' => 'tags',
            'xml/OPENSEARCH.xml' => 'opensearch',
            'templates/SEARCH_RESULT.tpl' => 'search_form_screen',
            'templates/SEARCH_RESULT_TABLE.tpl' => 'search_form_screen',
            'templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION.tpl' => 'search_form_screen',
            'templates/SEARCH_ADVANCED.tpl' => 'search_form_screen',
            'templates/SEARCH_FOR_SEARCH_DOMAIN.tpl' => 'search_form_screen',
            'templates/SEARCH_DOMAINS.tpl' => 'search_form_screen',
            'templates/SEARCH_FORM_SCREEN.tpl' => 'search_form_screen',
            'templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_LIST.tpl' => 'search_form_screen',
            'templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_MULTI_LIST.tpl' => 'search_form_screen',
            'templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_TEXT.tpl' => 'search_form_screen',
            'templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_TICK.tpl' => 'search_form_screen',
            'templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_FLOAT.tpl' => 'search_form_screen',
            'templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_INTEGER.tpl' => 'search_form_screen',
            'templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_DATE.tpl' => 'search_form_screen',
            'templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_JUST_DATE.tpl' => 'search_form_screen',
            'templates/SEARCH_FOR_SEARCH_DOMAIN_OPTION_JUST_TIME.tpl' => 'search_form_screen',
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__block_main_search() : object
    {
        return lorem_globalise(do_lorem_template('BLOCK_MAIN_SEARCH', [
            'BLOCK_ID' => lorem_word(),
            'TITLE' => lorem_phrase(),
            'INPUT_FIELDS' => ['a' => ['LABEL' => lorem_phrase(), 'INPUT' => '']],
            'EXTRA' => placeholder_array(),
            'SORT' => lorem_phrase(),
            'AUTHOR' => lorem_phrase(),
            'DAYS' => lorem_phrase(),
            'DIRECTION' => lorem_phrase(),
            'ONLY_TITLES' => '1',
            'ONLY_SEARCH_META' => '1',
            'LIMIT_TO' => placeholder_array(),
            'URL' => placeholder_url(),
            'FULL_SEARCH_URL' => placeholder_url(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__block_top_search() : object
    {
        return lorem_globalise(do_lorem_template('BLOCK_TOP_SEARCH', [
            'BLOCK_ID' => lorem_word(),
            'TITLE' => lorem_phrase(),
            'EXTRA' => placeholder_array(),
            'SORT' => lorem_phrase(),
            'AUTHOR' => lorem_phrase(),
            'DAYS' => lorem_phrase(),
            'DIRECTION' => lorem_phrase(),
            'ONLY_TITLES' => '1',
            'ONLY_SEARCH_META' => '1',
            'LIMIT_TO' => placeholder_array(),
            'URL' => placeholder_url(),
            'FULL_SEARCH_URL' => placeholder_url(),
        ]), null, '', false);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__block_side_tag_cloud() : object
    {
        $tpl_tags = [];
        $tags = [
            lorem_word() => 3,
            lorem_word_2() => 5,
        ];
        foreach ($tags as $tag => $count) {
            $em = 1.0;
            $tpl_tags[] = [
                'TAG' => $tag,
                'COUNT' => strval($count),
                'EM' => float_to_raw_string($em),
                'LINK' => placeholder_url(),
            ];
        }

        return lorem_globalise(do_lorem_template('BLOCK_SIDE_TAG_CLOUD', [
            'BLOCK_ID' => lorem_word(),
            'TITLE' => lorem_phrase(),
            'TAGS' => $tpl_tags,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__tags() : object
    {
        $tags = [
            [
                'LINK_LIMITEDSCOPE' => placeholder_url(),
                'LINK_FULLSCOPE' => placeholder_url(),
                'TAG' => lorem_word(),
            ],
            [
                'LINK_LIMITEDSCOPE' => placeholder_url(),
                'LINK_FULLSCOPE' => placeholder_url(),
                'TAG' => lorem_word(),
            ],
        ];

        return lorem_globalise(do_lorem_template('TAGS', [
            'TAGS' => $tags,
            'TYPE' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__opensearch() : object
    {
        return do_lorem_template('OPENSEARCH', [
            'DESCRIPTION' => lorem_paragraph(),
        ], null, false, null, '.xml', 'xml');
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__search_form_screen() : object
    {
        require_css('forms');

        require_code('database_search');

        $options = new Tempcode();
        foreach (placeholder_array() as $value) {
            $options->attach(do_lorem_template('SEARCH_FOR_SEARCH_DOMAIN_OPTION', [
                'NAME' => placeholder_random_id(),
                'DISPLAY' => lorem_phrase(),
                'CHECKED' => lorem_phrase(),
            ]));
        }

        $options->attach(do_lorem_template('SEARCH_FOR_SEARCH_DOMAIN_OPTION_LIST', [
            'NAME' => placeholder_random_id(),
            'DISPLAY' => lorem_word(),
            'SPECIAL' => placeholder_options(),
            'CHECKED' => false,
        ]));

        $options->attach(do_lorem_template('SEARCH_FOR_SEARCH_DOMAIN_OPTION_MULTI_LIST', [
            'NAME' => placeholder_random(),
            'DISPLAY' => lorem_word(),
            'SPECIAL' => placeholder_options(),
            'CHECKED' => false,
        ]));

        $options->attach(do_lorem_template('SEARCH_FOR_SEARCH_DOMAIN_OPTION_TEXT', [
            'NAME' => placeholder_random_id(),
            'DISPLAY' => lorem_word(),
            'SPECIAL' => lorem_word(),
            'CHECKED' => false,
        ]));

        $options->attach(do_lorem_template('SEARCH_FOR_SEARCH_DOMAIN_OPTION_TICK', [
            'NAME' => placeholder_random_id(),
            'DISPLAY' => lorem_word(),
            'SPECIAL' => lorem_word(),
            'CHECKED' => false,
        ]));

        $options->attach(do_lorem_template('SEARCH_FOR_SEARCH_DOMAIN_OPTION_FLOAT', [
            'NAME' => placeholder_random_id(),
            'DISPLAY' => lorem_word(),
            'SPECIAL' => lorem_word(),
            'CHECKED' => false,
        ]));

        $options->attach(do_lorem_template('SEARCH_FOR_SEARCH_DOMAIN_OPTION_INTEGER', [
            'NAME' => placeholder_random_id(),
            'DISPLAY' => lorem_word(),
            'SPECIAL' => lorem_word(),
            'CHECKED' => false,
        ]));

        $options->attach(do_lorem_template('SEARCH_FOR_SEARCH_DOMAIN_OPTION_DATE', [
            'NAME' => placeholder_random_id(),
            'DISPLAY' => lorem_word(),
            'SPECIAL' => lorem_word(),
            'CHECKED' => false,
        ]));

        $options->attach(do_lorem_template('SEARCH_FOR_SEARCH_DOMAIN_OPTION_JUST_DATE', [
            'NAME' => placeholder_random_id(),
            'DISPLAY' => lorem_word(),
            'SPECIAL' => lorem_word(),
            'CHECKED' => false,
        ]));

        $options->attach(do_lorem_template('SEARCH_FOR_SEARCH_DOMAIN_OPTION_JUST_TIME', [
            'NAME' => placeholder_random_id(),
            'DISPLAY' => lorem_word(),
            'SPECIAL' => lorem_word(),
            'CHECKED' => false,
        ]));

        $specialisation = do_lorem_template('SEARCH_ADVANCED', [
            'AJAX' => lorem_phrase(),
            'OPTIONS' => $options,
            'TREE' => '',
            'UNDERNEATH' => lorem_phrase(),
        ]);

        $search_domains = new Tempcode();
        foreach (placeholder_array() as $value) {
            $search_domains->attach(do_lorem_template('SEARCH_FOR_SEARCH_DOMAIN', [
                'ADVANCED_ONLY' => lorem_phrase(),
                'CHECKED' => lorem_phrase(),
                'OPTIONS_URL' => placeholder_url(),
                'LANG' => lorem_phrase(),
                'NAME' => placeholder_random_id(),
            ]));
        }

        $specialisation->attach(do_lorem_template('SEARCH_DOMAINS', [
            'SEARCH_DOMAINS' => $search_domains,
        ]));

        $result = new Tempcode();
        $result->attach(do_lorem_template('SEARCH_RESULT', [
            'CONTENT' => lorem_paragraph_html(),
            'TYPE' => placeholder_codename(),
            'ID' => placeholder_codename(),
        ]));

        $types_results = [];
        foreach (placeholder_array() as $i => $r) {
            $types_results[$i] = [
                'R' => placeholder_array(),
            ];
        }

        $result->attach(do_lorem_template('SEARCH_RESULT_TABLE', [
            'HEADERS' => placeholder_array(),
            'ROWS' => $types_results,
        ]));

        if (addon_installed('catalogues')) {
            require_lang('catalogues');
            $result->attach(do_lorem_template('SEARCH_RESULT_CATALOGUE_ENTRIES', [
                'BUILDUP' => lorem_phrase(),
                'NAME' => lorem_word(),
                'TITLE' => lorem_phrase(),
            ]));
        }

        return lorem_globalise(do_lorem_template('SEARCH_FORM_SCREEN', [
            'SEARCH_TERM' => lorem_word_2(),
            '_NUM_RESULTS' => placeholder_number(),
            'NUM_RESULTS' => placeholder_number(),
            'EXTRA_SORT_FIELDS' => placeholder_array(0),
            'USER_LABEL' => lorem_word(),
            'DAYS_LABEL' => lorem_word(),
            'ONLY_TITLES' => true,
            'DAYS' => placeholder_number(),
            'SORT' => 'relevance',
            'DIRECTION' => 'DESC',
            'CONTENT' => lorem_phrase(),
            'RESULTS' => null,
            'PAGINATION' => '',
            'HAS_FULLTEXT_SEARCH' => true,
            'TITLE' => lorem_screen_title(),
            'AUTHOR' => lorem_phrase(),
            'SPECIALISATION' => $specialisation,
            'URL' => placeholder_url(),
            'HAS_TEMPLATE_SEARCH' => true,
            'SEARCH_TYPE' => lorem_word(),
            'CUTOFF_FROM_DAY' => '',
            'CUTOFF_FROM_MONTH' => '',
            'CUTOFF_FROM_YEAR' => '',
            'CUTOFF_TO_DAY' => '',
            'CUTOFF_TO_MONTH' => '',
            'CUTOFF_TO_YEAR' => '',
        ]), null, '', true);
    }
}
