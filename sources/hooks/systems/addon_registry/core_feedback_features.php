<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2020

 See text/EN/licence.txt for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    core_feedback_features
 */

/**
 * Hook class.
 */
class Hook_addon_registry_core_feedback_features
{
    /**
     * Get a list of file permissions to set.
     *
     * @param  boolean $runtime Whether to include wildcards represented runtime-created chmoddable files
     * @return array File permissions to set
     */
    public function get_chmod_array($runtime = false)
    {
        return [];
    }

    /**
     * Get the version of Composr this addon is for.
     *
     * @return float Version number
     */
    public function get_version()
    {
        return cms_version_number();
    }

    /**
     * Get the description of the addon.
     *
     * @return string Description of the addon
     */
    public function get_description()
    {
        return 'Features for user interaction with content.';
    }

    /**
     * Get a list of tutorials that apply to this addon.
     *
     * @return array List of tutorials
     */
    public function get_applicable_tutorials()
    {
        return [
            'tut_feedback',
            'tut_adv_news',
        ];
    }

    /**
     * Get a mapping of dependency types.
     *
     * @return array File permissions to set
     */
    public function get_dependencies()
    {
        return [
            'requires' => [],
            'recommends' => [],
            'conflicts_with' => [],
        ];
    }

    /**
     * Explicitly say which icon should be used.
     *
     * @return URLPATH Icon
     */
    public function get_default_icon()
    {
        return 'themes/default/images/icons/feedback/comment.svg';
    }

    /**
     * Get a list of files that belong to this addon.
     *
     * @return array List of files
     */
    public function get_file_list()
    {
        return [
            'themes/default/images/icons/feedback/comment.svg',
            'themes/default/images/icons/feedback/comments_topic.svg',
            'themes/default/images/icons/feedback/rate.svg',
            'themes/default/images/icons/menu/adminzone/audit/trackbacks.svg',
            'themes/default/images/icons_monochrome/feedback/comment.svg',
            'themes/default/images/icons_monochrome/feedback/comments_topic.svg',
            'themes/default/images/icons_monochrome/feedback/rate.svg',
            'themes/default/images/icons_monochrome/menu/adminzone/audit/trackbacks.svg',
            'sources/topics.php',
            'sources/hooks/systems/notifications/like.php',
            'sources/hooks/systems/notifications/comment_posted.php',
            'themes/default/templates/TRACKBACK_DELETE_SCREEN.tpl',
            'sources/hooks/systems/page_groupings/trackbacks.php',
            'lang/EN/trackbacks.ini',
            'sources/hooks/systems/trackback/.htaccess',
            'sources_custom/hooks/systems/trackback/.htaccess',
            'sources/hooks/systems/trackback/index.html',
            'sources_custom/hooks/systems/trackback/index.html',
            'data/trackback.php',
            'sources/hooks/systems/symbols/FORM_TO_EMAIL_URL.php',
            'adminzone/pages/modules/admin_trackbacks.php',
            'sources/hooks/systems/addon_registry/core_feedback_features.php',
            'sources/hooks/systems/snippets/rating.php',
            'sources/hooks/systems/snippets/comments.php',
            'sources/hooks/systems/preview/comments.php',
            'themes/default/images/icons/feedback/like.svg',
            'themes/default/images/icons/feedback/dislike.svg',
            'themes/default/images/icons/feedback/like2.svg',
            'themes/default/images/icons/feedback/dislike2.svg',
            'themes/default/images/icons_monochrome/feedback/like.svg',
            'themes/default/images/icons_monochrome/feedback/dislike.svg',
            'themes/default/images/icons_monochrome/feedback/like2.svg',
            'themes/default/images/icons_monochrome/feedback/dislike2.svg',
            'sources/hooks/systems/rss/comments.php',
            'themes/default/templates/COMMENTS_POSTING_FORM.tpl',
            'themes/default/templates/COMMENTS_POSTING_FORM_CAPTCHA.tpl',
            'themes/default/templates/COMMENTS_WRAPPER.tpl',
            'themes/default/templates/COMMENTS_DEFAULT_TEXT.tpl',
            'themes/default/templates/RATING_BOX.tpl',
            'themes/default/templates/RATING_INLINE_STATIC.tpl',
            'themes/default/templates/RATING_INLINE_DYNAMIC.tpl',
            'themes/default/templates/RATING_DISPLAY_SHARED.tpl',
            'themes/default/templates/RATING_FORM.tpl',
            'themes/default/templates/TRACKBACK.tpl',
            'themes/default/templates/TRACKBACK_WRAPPER.tpl',
            'themes/default/xml/TRACKBACK_XML.xml',
            'themes/default/xml/TRACKBACK_XML_ERROR.xml',
            'themes/default/xml/TRACKBACK_XML_LISTING.xml',
            'themes/default/xml/TRACKBACK_XML_NO_ERROR.xml',
            'themes/default/xml/TRACKBACK_XML_WRAPPER.xml',
            'sources/feedback.php',
            'sources/feedback2.php',
            'pages/comcode/EN/feedback.txt',
            'sources/blocks/main_comments.php',
            'sources/blocks/main_trackback.php',
            'sources/blocks/main_rating.php',
            'themes/default/templates/COMMENT_AJAX_HANDLER.tpl',
            'data/post_comment.php',
            'sources/hooks/systems/config/max_thread_depth.php',
            'sources/hooks/systems/config/comment_topic_subject.php',
            'sources/hooks/systems/config/default_comment_sort_order.php',
            'sources/hooks/systems/config/comments_to_show_in_thread.php',
            'sources/hooks/systems/config/simplify_wysiwyg_by_permissions.php',
            'sources/hooks/systems/config/allow_own_rate.php',
            'sources/hooks/systems/config/enable_feedback.php',
            'sources/hooks/systems/config/is_on_comments.php',
            'sources/hooks/systems/config/is_on_rating.php',
            'sources/hooks/systems/config/is_on_trackbacks.php',
            'sources/hooks/systems/symbols/SHOW_RATINGS.php',
            'themes/default/templates/RATINGS_SHOW.tpl',
            'sources/blocks/main_contact_simple.php',
            'data/form_to_email.php',
            'themes/default/javascript/core_feedback_features.js',
            'themes/default/templates/BLOCK_MAIN_CONTACT_SIMPLE.tpl',
        ];
    }

    /**
     * Get mapping between template names and the method of this class that can render a preview of them.
     *
     * @return array The mapping
     */
    public function tpl_previews()
    {
        return [
            'templates/COMMENTS_DEFAULT_TEXT.tpl' => 'comments_default_text',
            'templates/TRACKBACK.tpl' => 'administrative__trackback_delete_screen',
            'templates/TRACKBACK_DELETE_SCREEN.tpl' => 'administrative__trackback_delete_screen',
            'xml/TRACKBACK_XML_NO_ERROR.xml' => 'trackback_xml_wrapper',
            'xml/TRACKBACK_XML_ERROR.xml' => 'trackback_xml_wrapper',
            'xml/TRACKBACK_XML_WRAPPER.xml' => 'trackback_xml_wrapper',
            'templates/COMMENTS_POSTING_FORM.tpl' => 'comments',
            'templates/COMMENTS_POSTING_FORM_CAPTCHA.tpl' => 'comments',
            'templates/RATING_BOX.tpl' => 'rating',
            'templates/RATING_DISPLAY_SHARED.tpl' => 'rating_display_shared',
            'templates/RATINGS_SHOW.tpl' => 'ratings_show',
            'templates/COMMENTS_WRAPPER.tpl' => 'comments_wrapper',
            'xml/TRACKBACK_XML.xml' => 'trackback_xml_wrapper',
            'templates/TRACKBACK_WRAPPER.tpl' => 'trackback_wrapper',
            'xml/TRACKBACK_XML_LISTING.xml' => 'trackback_xml_listing',
            'templates/RATING_FORM.tpl' => 'rating',
            'templates/RATING_INLINE_STATIC.tpl' => 'rating_inline_static',
            'templates/RATING_INLINE_DYNAMIC.tpl' => 'rating_inline_dynamic',
            'templates/EMOTICON_CLICK_CODE.tpl' => 'comments',
            'templates/COMMENT_AJAX_HANDLER.tpl' => 'comments',
            'templates/POST.tpl' => 'comments_wrapper',
            'templates/POST_CHILD_LOAD_LINK.tpl' => 'comments_wrapper',
            'templates/BLOCK_MAIN_CONTACT_SIMPLE.tpl' => 'block_main_contact_simple',
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return array Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
     */
    public function tpl_preview__comments_default_text()
    {
        return [
            lorem_globalise(do_lorem_template('COMMENTS_DEFAULT_TEXT', []), null, '', true)
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return array Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
     */
    public function tpl_preview__administrative__trackback_delete_screen()
    {
        $trackbacks = new Tempcode();
        foreach (placeholder_array() as $k => $value) {
            $trackbacks->attach(do_lorem_template('TRACKBACK', [
                'ID' => strval($k),
                '_DATE' => placeholder_date_raw(),
                'DATE' => placeholder_date(),
                'URL' => placeholder_url(),
                'TITLE' => lorem_phrase(),
                'EXCERPT' => lorem_phrase(),
                'NAME' => $value,
            ]));
        }

        return [
            lorem_globalise(do_lorem_template('TRACKBACK_DELETE_SCREEN', [
                'TITLE' => lorem_title(),
                'TRACKBACKS' => $trackbacks,
                'LOTS' => lorem_phrase(),
            ]), null, '', true)
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return array Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
     */
    public function tpl_preview__trackback_xml_wrapper()
    {
        $xml = do_lorem_template('TRACKBACK_XML', [
            'TITLE' => lorem_phrase(),
            'LINK' => placeholder_url(),
            'EXCERPT' => lorem_phrase(),
        ], null, false, null, '.xml', 'xml');
        $xml->attach(do_lorem_template('TRACKBACK_XML_NO_ERROR', [], null, false, null, '.xml', 'xml'));
        $xml->attach(do_lorem_template('TRACKBACK_XML_ERROR', ['TRACKBACK_ERROR' => lorem_phrase()], null, false, null, '.xml', 'xml'));
        return [
            do_lorem_template('TRACKBACK_XML_WRAPPER', [
                'XML' => $xml,
            ], null, false, null, '.xml', 'xml')
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return array Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
     */
    public function tpl_preview__comments()
    {
        require_lang('comcode');
        require_javascript('plupload');
        require_javascript('posting');

        require_css('forms');

        $ret = do_lorem_template('COMMENTS_POSTING_FORM', [
            'TITLE' => lorem_phrase(),
            'JOIN_BITS' => lorem_phrase_html(),
            'USE_CAPTCHA' => false,
            'GET_EMAIL' => true,
            'EMAIL_OPTIONAL' => true,
            'GET_TITLE' => true,
            'TITLE_OPTIONAL' => true,
            'DEFAULT_TITLE' => '',
            'POST_WARNING' => '',
            'RULES_TEXT' => '',
            'ATTACHMENTS' => null,
            'ATTACH_SIZE_FIELD' => null,
            'TRUE_ATTACHMENT_UI' => false,
            'EMOTICONS' => placeholder_emoticon_chooser(),
            'EXPAND_TYPE' => 'expand',
            'DISPLAY' => 'block',
            'FIRST_POST_URL' => '',
            'FIRST_POST' => '',
            'COMMENT_URL' => placeholder_url(),
            'REVIEWS' => true,
            'ANALYTIC_EVENT_CATEGORY' => null,
        ]);

        $ret->attach(do_lorem_template('COMMENT_AJAX_HANDLER', [
            'OPTIONS' => '',
            'IS_THREADED' => false,
            'HASH' => '',
            'CONTENT_TYPE' => '',
        ]));

        return [
            lorem_globalise($ret, null, '', true)
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return array Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
     */
    public function tpl_preview__comments_wrapper()
    {
        $review_titles = [];
        $review_titles[] = [
            'REVIEW_TITLE' => lorem_phrase(),
            '_NUM_REVIEW_RATINGS' => placeholder_number(),
            'NUM_REVIEW_RATINGS' => placeholder_number(),
            '_REVIEW_RATING' => float_to_raw_string(10.0),
            'REVIEW_RATING' => float_format(10.0),
        ];
        $comments = new Tempcode();
        foreach (placeholder_array() as $i => $comment) {
            $map = [
                'INDIVIDUAL_REVIEW_RATINGS' => [],
                'REVIEW_RATING' => strval(10),
                'HIGHLIGHT' => ($i == 1),
                'TITLE' => lorem_phrase(),
                'TIME_RAW' => placeholder_date_raw(),
                'TIME' => placeholder_date(),
                'POSTER_ID' => placeholder_id(),
                'POSTER_URL' => placeholder_url(),
                'POSTER_NAME' => lorem_word(),
                'POSTER' => null,
                'POSTER_DETAILS' => new Tempcode(),
                'ID' => placeholder_id() . strval($i),
                'POST' => lorem_phrase(),
                'IS_UNREAD' => false,
                'POST_COMCODE' => lorem_phrase(),
                'CHILDREN' => lorem_phrase(),
                'OTHER_IDS' => [
                    placeholder_id(),
                ],
                'RATING' => new Tempcode(),
                'EMPHASIS' => new Tempcode(),
                'BUTTONS' => new Tempcode(),
                'LAST_EDITED_RAW' => '',
                'LAST_EDITED' => new Tempcode(),
                'UNVALIDATED' => new Tempcode(),
                'TOPIC_ID' => placeholder_id(),
                'IS_SPACER_POST' => false,
                'IS_THREADED' => false,
                'NUM_TO_SHOW_LIMIT' => placeholder_number(),
            ];
            $comments->attach(do_lorem_template('POST', $map));
            do_lorem_template('POST_CHILD_LOAD_LINK', $map); // INCLUDE'd in above, but test set needs to see it run direct
        }

        if (addon_installed('captcha')) {
            require_code('captcha');
            $use_captcha = use_captcha();
        } else {
            $use_captcha = false;
        }
        $form = do_lorem_template('COMMENTS_POSTING_FORM', [
            'TITLE' => lorem_phrase(),
            'JOIN_BITS' => lorem_phrase_html(),
            'USE_CAPTCHA' => false,
            'GET_EMAIL' => true,
            'EMAIL_OPTIONAL' => true,
            'GET_TITLE' => true,
            'TITLE_OPTIONAL' => true,
            'DEFAULT_TITLE' => '',
            'POST_WARNING' => '',
            'RULES_TEXT' => '',
            'ATTACHMENTS' => null,
            'ATTACH_SIZE_FIELD' => null,
            'TRUE_ATTACHMENT_UI' => false,
            'EMOTICONS' => placeholder_emoticon_chooser(),
            'EXPAND_TYPE' => 'expand',
            'DISPLAY' => 'block',
            'FIRST_POST_URL' => '',
            'FIRST_POST' => '',
            'COMMENT_URL' => placeholder_url(),
            'REVIEWS' => false,
            'ANALYTIC_EVENT_CATEGORY' => null,
        ]);

        $out = do_lorem_template('COMMENTS_WRAPPER', [
            'TYPE' => lorem_phrase(),
            'ID' => placeholder_id(),
            'REVIEW_RATING_CRITERIA' => $review_titles,
            'AUTHORISED_FORUM_URL' => placeholder_url(),
            'FORM' => $form,
            'COMMENTS' => $comments,
            'SORT' => 'relevance',
            'TOTAL_POSTS' => placeholder_number(),
            'IS_THREADED' => false,
            'FORUM_LINK' => null,
            'HASH' => '',
            'SERIALIZED_OPTIONS' => '',
        ]);

        $out->attach(do_lorem_template('COMMENT_AJAX_HANDLER', [
            'OPTIONS' => '',
            'IS_THREADED' => false,
            'HASH' => '',
            'CONTENT_TYPE' => lorem_word(),
        ]));

        return [
            lorem_globalise($out, null, '', true)
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return array Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
     */
    public function tpl_preview__trackback_wrapper()
    {
        $trackbacks = placeholder_array();

        $content = new Tempcode();

        foreach ($trackbacks as $i => $value) {
            $content->attach(do_lorem_template('TRACKBACK', [
                'ID' => placeholder_id() . strval($i),
                '_DATE' => placeholder_date_raw(),
                'DATE' => placeholder_date(),
                'URL' => placeholder_url(),
                'TITLE' => lorem_phrase(),
                'EXCERPT' => '',
                'NAME' => placeholder_id(),
            ]));
        }

        return [
            lorem_globalise(do_lorem_template('TRACKBACK_WRAPPER', [
                'TRACKBACKS' => $content,
                'TRACKBACK_FEEDBACK_TYPE' => lorem_word(),
                'TRACKBACK_ID' => placeholder_id(),
                'TRACKBACK_TITLE' => lorem_phrase(),
            ]), null, '', true)
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return array Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
     */
    public function tpl_preview__trackback_xml_listing()
    {
        $content = do_lorem_template('TRACKBACK_XML_LISTING', [
            'ITEMS' => lorem_phrase(),
            'LINK_PAGE' => lorem_word(),
            'LINK_ID' => placeholder_id(),
        ], null, false, null, '.xml', 'xml');

        return [
            $content
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return array Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
     */
    public function tpl_preview__rating()
    {
        $all_rating_criteria = [];
        $all_rating_criteria[] = [
            'TITLE' => lorem_phrase(),
            'RATING' => make_string_tempcode('6'),
            '_NUM_RATINGS' => placeholder_number(),
            'NUM_RATINGS' => placeholder_number(),
            'TYPE' => lorem_word(),
        ];
        $rating_form = do_lorem_template('RATING_FORM', [
            'LIKES' => true,
            'CONTENT_TYPE' => 'downloads',
            'ID' => placeholder_id(),
            'URL' => placeholder_url(),
            'ALLOW_RATING' => true,
            'ALL_RATING_CRITERIA' => $all_rating_criteria,
            'HAS_RATINGS' => true,
            '_OVERALL_NUM_RATINGS' => placeholder_number(),
            'OVERALL_NUM_RATINGS' => placeholder_number(),
            'SIMPLISTIC' => true,
            'ERROR' => '',
            'CONTENT_URL' => placeholder_url(),
            'CONTENT_TITLE' => lorem_phrase(),
        ]);

        return [
            lorem_globalise(do_lorem_template('RATING_BOX', [
                '_OVERALL_NUM_RATINGS' => placeholder_number(),
                'OVERALL_NUM_RATINGS' => placeholder_number(),
                'LIKES' => true,
                'CONTENT_TYPE' => 'downloads',
                'ID' => placeholder_id(),
                'HAS_RATINGS' => true,
                'ALL_RATING_CRITERIA' => $all_rating_criteria,
                '_NUM_RATINGS' => '10',
                'NUM_RATINGS' => '10',
                'RATING_FORM' => $rating_form,
                'ERROR' => '',
            ]), null, '', true)
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return array Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
     */
    public function tpl_preview__rating_inline_static()
    {
        $all_rating_criteria = [];
        foreach (placeholder_array() as $i => $v) {
            $all_rating_criteria[] = [
                'TITLE' => lorem_phrase(),
                'RATING' => '3',
                '_OVERALL_NUM_RATINGS' => placeholder_number(),
                'OVERALL_NUM_RATINGS' => placeholder_number(),
                'TYPE' => lorem_word() . strval($i),
            ];
        }
        $rating_form = do_lorem_template('RATING_FORM', [
            'CONTENT_TYPE' => lorem_word(),
            'ID' => placeholder_id(),
            'URL' => placeholder_url(),
            'LIKES' => true,
            'ALLOW_RATING' => true,
            'ALL_RATING_CRITERIA' => $all_rating_criteria,
            'HAS_RATINGS' => true,
            'SIMPLISTIC' => false,
            'ERROR' => '',
            'CONTENT_URL' => placeholder_url(),
            'CONTENT_TITLE' => lorem_phrase(),
            '_OVERALL_NUM_RATINGS' => placeholder_number(),
            'OVERALL_NUM_RATINGS' => placeholder_number(),
        ]);
        return [
            lorem_globalise(do_lorem_template('RATING_INLINE_STATIC', [
                'CONTENT_TYPE' => lorem_word(),
                'ID' => placeholder_id(),
                'ALL_RATING_CRITERIA' => $all_rating_criteria,
                'HAS_RATINGS' => true,
                '_NUM_RATINGS' => placeholder_number(),
                'NUM_RATINGS' => placeholder_number(),
                '_OVERALL_NUM_RATINGS' => placeholder_number(),
                'OVERALL_NUM_RATINGS' => placeholder_number(),
                'RATING_FORM' => $rating_form,
                'ERROR' => '',
                'LIKES' => false,
            ]), null, '', true)
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return array Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
     */
    public function tpl_preview__rating_inline_dynamic()
    {
        $all_rating_criteria = [];
        foreach (placeholder_array() as $i => $v) {
            $all_rating_criteria[] = [
                'TITLE' => lorem_phrase(),
                'RATING' => '3',
                '_OVERALL_NUM_RATINGS' => placeholder_number(),
                'OVERALL_NUM_RATINGS' => placeholder_number(),
                'TYPE' => lorem_word() . strval($i),
            ];
        }
        $rating_form = do_lorem_template('RATING_FORM', [
            'CONTENT_TYPE' => lorem_word(),
            'ID' => placeholder_id(),
            'URL' => placeholder_url(),
            'ALLOW_RATING' => true,
            'ALL_RATING_CRITERIA' => $all_rating_criteria,
            'HAS_RATINGS' => true,
            'SIMPLISTIC' => false,
            'ERROR' => '',
            'LIKES' => true,
            'CONTENT_URL' => placeholder_url(),
            'CONTENT_TITLE' => lorem_phrase(),
            '_OVERALL_NUM_RATINGS' => placeholder_number(),
            'OVERALL_NUM_RATINGS' => placeholder_number(),
        ]);
        return [
            lorem_globalise(do_lorem_template('RATING_INLINE_DYNAMIC', [
                'CONTENT_TYPE' => lorem_word(),
                'ID' => placeholder_id(),
                'ALL_RATING_CRITERIA' => $all_rating_criteria,
                'HAS_RATINGS' => true,
                '_NUM_RATINGS' => placeholder_number(),
                'NUM_RATINGS' => placeholder_number(),
                '_OVERALL_NUM_RATINGS' => placeholder_number(),
                'OVERALL_NUM_RATINGS' => placeholder_number(),
                'RATING_FORM' => $rating_form,
                'ERROR' => '',
                'LIKES' => false,
            ]), null, '', true)
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return array Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
     */
    public function tpl_preview__rating_display_shared()
    {
        $all_rating_criteria = [];
        foreach (placeholder_array() as $i => $v) {
            $all_rating_criteria[] = [
                'TITLE' => lorem_phrase(),
                'RATING' => '3',
                '_OVERALL_NUM_RATINGS' => placeholder_number(),
                'OVERALL_NUM_RATINGS' => placeholder_number(),
                'TYPE' => lorem_word() . strval($i),
            ];
        }
        $rating_form = do_lorem_template('RATING_FORM', [
            'CONTENT_TYPE' => lorem_word(),
            'ID' => placeholder_id(),
            'URL' => placeholder_url(),
            'ALLOW_RATING' => true,
            'ALL_RATING_CRITERIA' => $all_rating_criteria,
            'HAS_RATINGS' => true,
            'SIMPLISTIC' => false,
            'ERROR' => '',
            'LIKES' => true,
            'CONTENT_URL' => placeholder_url(),
            'CONTENT_TITLE' => lorem_phrase(),
            'OVERALL_NUM_RATINGS' => placeholder_number(),
            '_OVERALL_NUM_RATINGS' => placeholder_number(),
        ]);
        return [
            lorem_globalise(do_lorem_template('RATING_DISPLAY_SHARED', [
                'CONTENT_TYPE' => lorem_word(),
                'RATING' => '3',
                'ID' => placeholder_id(),
                'ALL_RATING_CRITERIA' => $all_rating_criteria,
                'HAS_RATINGS' => true,
                '_NUM_RATINGS' => placeholder_number(),
                'NUM_RATINGS' => placeholder_number(),
                '_OVERALL_NUM_RATINGS' => placeholder_number(),
                'OVERALL_NUM_RATINGS' => placeholder_number(),
                'RATING_FORM' => $rating_form,
                'TITLE' => lorem_phrase(),
                'ERROR' => '',
                'LIKES' => false,
            ]), null, '', true)
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return array Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
     */
    public function tpl_preview__ratings_show()
    {
        $ratings = [];
        $ratings[] = [
            'RATING_MEMBER' => placeholder_id(),
            'RATING_USERNAME' => lorem_word(),
            'RATING_IP' => lorem_word(),
            'RATING_TIME' => placeholder_date_raw(),
            'RATING_TIME_FORMATTED' => placeholder_date(),
            'RATING' => '2',
        ];

        return [
            lorem_globalise(do_lorem_template('RATINGS_SHOW', [
                'RATINGS' => $ratings,
                'HAS_MORE' => true,
                'MAX' => '1',
                'CNT' => '1',
                'CNT_REMAINING' => '10',
            ]), null, '', true)
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return array Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
     */
    public function tpl_preview__block_main_contact_simple()
    {
        require_lang('cns');
        $comment_details = do_lorem_template('COMMENTS_POSTING_FORM', [
            'TITLE' => lorem_phrase(),
            'JOIN_BITS' => lorem_phrase_html(),
            'USE_CAPTCHA' => false,
            'GET_EMAIL' => true,
            'EMAIL_OPTIONAL' => true,
            'GET_TITLE' => true,
            'TITLE_OPTIONAL' => true,
            'DEFAULT_TITLE' => '',
            'POST_WARNING' => '',
            'RULES_TEXT' => '',
            'ATTACHMENTS' => null,
            'ATTACH_SIZE_FIELD' => null,
            'TRUE_ATTACHMENT_UI' => false,
            'EMOTICONS' => placeholder_emoticon_chooser(),
            'EXPAND_TYPE' => 'expand',
            'DISPLAY' => 'block',
            'FIRST_POST_URL' => '',
            'FIRST_POST' => '',
            'COMMENT_URL' => placeholder_url(),
            'REVIEWS' => false,
            'ANALYTIC_EVENT_CATEGORY' => null,
        ]);

        return [
            lorem_globalise(do_lorem_template('BLOCK_MAIN_CONTACT_SIMPLE', [
                'BLOCK_ID' => lorem_word(),
                'COMMENT_DETAILS' => $comment_details,
                'MESSAGE' => lorem_phrase(),
            ]), null, '', true)
        ];
    }
}
