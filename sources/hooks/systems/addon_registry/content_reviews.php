<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2020

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    content_reviews
 */

/**
 * Hook class.
 */
class Hook_addon_registry_content_reviews
{
    /**
     * Get a list of file permissions to set.
     *
     * @param  boolean $runtime Whether to include wildcards represented runtime-created chmoddable files
     * @return array File permissions to set
     */
    public function get_chmod_array(bool $runtime = false) : array
    {
        return [];
    }

    /**
     * Get the version of Composr this addon is for.
     *
     * @return float Version number
     */
    public function get_version() : float
    {
        return cms_version_number();
    }

    /**
     * Get the addon category.
     *
     * @return string The category
     */
    public function get_category() : string
    {
        return 'Admin Utilities';
    }

    /**
     * Get the description of the addon.
     *
     * @return string Description of the addon
     */
    public function get_description() : string
    {
        return 'Regularly review content for accuracy.';
    }

    /**
     * Get a list of tutorials that apply to this addon.
     *
     * @return array List of tutorials
     */
    public function get_applicable_tutorials() : array
    {
        return [
            'tut_adminzone',
        ];
    }

    /**
     * Get a mapping of dependency types.
     *
     * @return array File permissions to set
     */
    public function get_dependencies() : array
    {
        return [
            'requires' => [
                'unvalidated',
                'commandr',
            ],
            'recommends' => [],
            'conflicts_with' => [],
        ];
    }

    /**
     * Explicitly say which icon should be used.
     *
     * @return URLPATH Icon
     */
    public function get_default_icon() : string
    {
        return 'themes/default/images/icons/admin/tool.svg';
    }

    /**
     * Get a list of files that belong to this addon.
     *
     * @return array List of files
     */
    public function get_file_list() : array
    {
        return [
            'sources/hooks/systems/addon_registry/content_reviews.php',
            'sources/hooks/systems/cron/content_reviews.php',
            'sources/hooks/blocks/main_staff_checklist/content_reviews.php',
            'sources/hooks/systems/notifications/content_reviews.php',
            'adminzone/pages/modules/admin_content_reviews.php',
            'sources/content_reviews.php',
            'sources/content_reviews2.php',
            'lang/EN/content_reviews.ini',
            'themes/default/templates/REVIEW_STATUS.tpl',
            'themes/default/images/icons/menu/adminzone/audit/content_reviews.svg',
            'themes/default/images/icons_monochrome/menu/adminzone/audit/content_reviews.svg',
        ];
    }

    /**
     * Get mapping between template names and the method of this class that can render a preview of them.
     *
     * @return array The mapping
     */
    public function tpl_previews() : array
    {
        return [
            'templates/REVIEW_STATUS.tpl' => 'review_status',
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return array Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
     */
    public function tpl_preview__review_status() : array
    {
        return [
            lorem_globalise(do_lorem_template('REVIEW_STATUS', [
                'LAST_REVIEWED_DATE' => placeholder_date(),
                'NEXT_REVIEW_DATE' => placeholder_date(),
                '_LAST_REVIEWED_TIME' => placeholder_date_raw(),
                '_NEXT_REVIEW_TIME' => placeholder_date_raw(),
                'CONTENT_TYPE' => placeholder_id(),
                'CONTENT_ID' => placeholder_id(),
                'DISPLAY' => true,
            ]), null, '', true)
        ];
    }
}
