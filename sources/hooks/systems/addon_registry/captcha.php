<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    captcha
 */

/**
 * Hook class.
 */
class Hook_addon_registry_captcha
{
    /**
     * Get a list of file permissions to set.
     *
     * @param  boolean $runtime Whether to include wildcards represented runtime-created chmoddable files
     * @return array File permissions to set
     */
    public function get_chmod_array(bool $runtime = false) : array
    {
        $chmod = [];
        if ($runtime) {
            $chmod = array_merge(
                $chmod,
                [
                    'uploads/captcha/*',
                ]
            );
        }
        $chmod = array_merge(
            $chmod,
            [
                'uploads/captcha',
            ]
        );
        return $chmod;
    }

    /**
     * Get the current version of this addon (usually software major, software minor, addon build).
     * Put the comment "// addon_version_auto_update" to the right of the return if you want release tools to automatically update this according to software version and find_addon_effective_md5.
     *
     * @return SHORT_TEXT Version number
     */
    public function get_version() : string
    {
        return '11.0.2'; // addon_version_auto_update 8628f51e78f9c1328cd34525903b5356
    }

    /**
     * Get the minimum required version of the website software needed to use this addon.
     *
     * @return float Minimum required website software version
     */
    public function get_min_cms_version() : float
    {
        return 11.0;
    }

    /**
     * Get the maximum compatible version of the website software to use this addon.
     *
     * @return ?float Maximum compatible website software version (null: no maximum version currently)
     */
    public function get_max_cms_version() : ?float
    {
        return 11.9;
    }

    /**
     * Get the addon category.
     *
     * @return string The category
     */
    public function get_category() : string
    {
        return 'Architecture';
    }

    /**
     * Get the description of the addon.
     *
     * @return string Description of the addon
     */
    public function get_description() : string
    {
        return "Stop spam-bots from performing actions on the website. Supports image-based CAPTCHA challenges (with optional JavaScript and CSS complexity), question and answer CAPTCHAs, and reCAPTCHA integration.";
    }

    /**
     * Get a list of tutorials that apply to this addon.
     *
     * @return array List of tutorials
     */
    public function get_applicable_tutorials() : array
    {
        return [
            'tut_members',
        ];
    }

    /**
     * Get a mapping of dependency types.
     *
     * @return array A structure specifying dependency information
     */
    public function get_dependencies() : array
    {
        return [
            'requires' => [],
            'recommends' => [],
            'conflicts_with' => [],
            'previously_in_addon' => ['core_captcha'],
        ];
    }

    /**
     * Explicitly say which icon should be used.
     *
     * @return URLPATH Icon
     */
    public function get_default_icon() : string
    {
        return 'themes/default/images/icons/admin/component.svg';
    }

    /**
     * Get a list of files that belong to this addon.
     *
     * @return array List of files
     */
    public function get_file_list() : array
    {
        return [
            'data/captcha.php',
            'data/sounds/captcha/0.wav',
            'data/sounds/captcha/1.wav',
            'data/sounds/captcha/2.wav',
            'data/sounds/captcha/3.wav',
            'data/sounds/captcha/4.wav',
            'data/sounds/captcha/5.wav',
            'data/sounds/captcha/6.wav',
            'data/sounds/captcha/7.wav',
            'data/sounds/captcha/8.wav',
            'data/sounds/captcha/9.wav',
            'data/sounds/captcha/a.wav',
            'data/sounds/captcha/b.wav',
            'data/sounds/captcha/c.wav',
            'data/sounds/captcha/d.wav',
            'data/sounds/captcha/e.wav',
            'data/sounds/captcha/f.wav',
            'data/sounds/captcha/g.wav',
            'data/sounds/captcha/h.wav',
            'data/sounds/captcha/i.wav',
            'data/sounds/captcha/j.wav',
            'data/sounds/captcha/k.wav',
            'data/sounds/captcha/l.wav',
            'data/sounds/captcha/m.wav',
            'data/sounds/captcha/n.wav',
            'data/sounds/captcha/o.wav',
            'data/sounds/captcha/p.wav',
            'data/sounds/captcha/q.wav',
            'data/sounds/captcha/r.wav',
            'data/sounds/captcha/s.wav',
            'data/sounds/captcha/t.wav',
            'data/sounds/captcha/u.wav',
            'data/sounds/captcha/v.wav',
            'data/sounds/captcha/w.wav',
            'data/sounds/captcha/x.wav',
            'data/sounds/captcha/y.wav',
            'data/sounds/captcha/z.wav',
            'lang/EN/captcha.ini',
            'sources/captcha.php',
            'sources/hooks/systems/addon_registry/captcha.php',
            'sources/hooks/systems/config/audio_captcha.php',
            'sources/hooks/systems/config/captcha_member_days.php',
            'sources/hooks/systems/config/captcha_member_posts.php',
            'sources/hooks/systems/config/captcha_noise.php',
            'sources/hooks/systems/config/captcha_on_feedback.php',
            'sources/hooks/systems/config/captcha_question_pages.php',
            'sources/hooks/systems/config/captcha_question_total.php',
            'sources/hooks/systems/config/captcha_questions.php',
            'sources/hooks/systems/config/captcha_single_guess.php',
            'sources/hooks/systems/config/css_captcha.php',
            'sources/hooks/systems/config/js_captcha.php',
            'sources/hooks/systems/config/recaptcha_server_key.php',
            'sources/hooks/systems/config/recaptcha_site_key.php',
            'sources/hooks/systems/config/use_captchas.php',
            'sources/hooks/systems/privacy/captcha.php',
            'sources/hooks/systems/snippets/captcha_wrong.php',
            'themes/default/javascript/captcha.js',
            'themes/default/templates/CAPTCHA_LOOSE.tpl',
            'themes/default/templates/FORM_SCREEN_INPUT_CAPTCHA.tpl',
        ];
    }

    /**
     * Get mapping between template names and the method of this class that can render a preview of them.
     *
     * @return array The mapping
     */
    public function tpl_previews() : array
    {
        return [
            'templates/FORM_SCREEN_INPUT_CAPTCHA.tpl' => 'form_screen_input_captcha',
            'templates/CAPTCHA_LOOSE.tpl' => 'captcha_loose',
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__form_screen_input_captcha() : object
    {
        require_code('captcha');
        generate_captcha();

        require_css('forms');

        $input = do_lorem_template('FORM_SCREEN_INPUT_CAPTCHA', [
            'TABINDEX' => placeholder_number(),
        ]);
        $captcha = do_lorem_template('FORM_SCREEN_FIELD', [
            'REQUIRED' => true,
            'SKIP_LABEL' => true,
            'NAME' => 'captcha',
            'PRETTY_NAME' => lorem_phrase(),
            'DESCRIPTION' => lorem_sentence_html(),
            'DESCRIPTION_SIDE' => '',
            'INPUT' => $input,
            'COMCODE' => '',
        ]);

        return lorem_globalise(do_lorem_template('FORM_SCREEN', [
            'SKIP_WEBSTANDARDS' => null,
            'HIDDEN' => '',
            'TITLE' => lorem_screen_title(),
            'URL' => placeholder_url(),
            'FIELDS' => $captcha,
            'SUBMIT_ICON' => 'buttons/proceed',
            'SUBMIT_NAME' => lorem_word(),
            'TEXT' => lorem_sentence_html(),
            'SUPPORT_AUTOSAVE' => null,
            'JS_FUNCTION_CALLS' => null,
            'MODSECURITY_WORKAROUND' => false,
            'ANALYTIC_EVENT_CATEGORY' => null,
            'GET' => false,
            'PREVIEW' => null,
            'STAFF_HELP_URL' => null,
            'PING_URL' => null,
            'CANCEL_URL' => null,
            'EXTRA_BUTTONS' => null,
            'THEME' => null,
            'SEPARATE_PREVIEW' => null,
            'BACK_URL' => null,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__captcha_loose() : object
    {
        $name = placeholder_codename();
        $input = do_lorem_template('FORM_SCREEN_INPUT_TEXT', [
            'RAW' => true,
            'SCROLLS' => '',
            'TABINDEX' => placeholder_number(),
            'REQUIRED' => '',
            'NAME' => $name,
            'DEFAULT' => '',
        ]);
        $fields = new Tempcode();
        $fields->attach(do_lorem_template('FORM_SCREEN_FIELD', [
            'REQUIRED' => true,
            'SKIP_LABEL' => false,
            'NAME' => $name,
            'PRETTY_NAME' => lorem_word(),
            'DESCRIPTION' => lorem_sentence_html(),
            'DESCRIPTION_SIDE' => '',
            'INPUT' => $input,
            'COMCODE' => '',
        ]));

        $tpl = do_lorem_template('FORM', [
            'GET' => false,
            'SKIP_WEBSTANDARDS' => true,
            'HIDDEN' => '',
            'URL' => placeholder_url(),
            'FIELDS' => $fields,
            'SUBMIT_ICON' => 'buttons/proceed',
            'SUBMIT_NAME' => lorem_word(),
            'SUBMIT_BUTTON_CLASS' => null,
            'TEXT' => lorem_sentence_html(),
            'JS_FUNCTION_CALLS' => [],
            'SKIP_REQUIRED' => null,
            'SECONDARY_FORM' => false,
            'TABINDEX' => placeholder_number(),
            'SUPPORT_AUTOSAVE' => null,
            'ANALYTIC_EVENT_CATEGORY' => null,
            'MODSECURITY_WORKAROUND' => null,
            'NO_SIZING' => null,
            'PREVIEW' => null,
            'TITLE' => null,
        ]);

        return lorem_globalise(do_lorem_template('CAPTCHA_LOOSE', [
        ]), null, '', true);
    }
}
