<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    cns_post_templates
 */

/**
 * Hook class.
 */
class Hook_addon_registry_cns_post_templates
{
    /**
     * Get a list of file permissions to set.
     *
     * @param  boolean $runtime Whether to include wildcards represented runtime-created chmoddable files
     * @return array File permissions to set
     */
    public function get_chmod_array(bool $runtime = false) : array
    {
        return [];
    }

    /**
     * Get the version of the software this addon is for (used in generating the TAR filename).
     *
     * @return float Version number
     */
    public function get_version() : float
    {
        return cms_version_number();
    }

    /**
     * Get the minimum required version of the website software needed to use this addon.
     *
     * @return float Minimum required website software version
     */
    public function get_min_cms_version() : float
    {
        return 11.0;
    }

    /**
     * Get the maximum compatible version of the website software to use this addon.
     *
     * @return ?float Maximum compatible website software version (null: no maximum version currently)
     */
    public function get_max_cms_version() : ?float
    {
        return 11.9;
    }

    /**
     * Get the addon category.
     *
     * @return string The category
     */
    public function get_category() : string
    {
        return 'Information Display';
    }

    /**
     * Get the description of the addon.
     *
     * @return string Description of the addon
     */
    public function get_description() : string
    {
        return 'Post Templates for the Conversr forum.';
    }

    /**
     * Get a list of tutorials that apply to this addon.
     *
     * @return array List of tutorials
     */
    public function get_applicable_tutorials() : array
    {
        return [
            'tut_support_desk',
        ];
    }

    /**
     * Get a mapping of dependency types.
     *
     * @return array A structure specifying dependency information
     */
    public function get_dependencies() : array
    {
        return [
            'requires' => [
                'cns_forum',
            ],
            'recommends' => [],
            'conflicts_with' => [],
        ];
    }

    /**
     * Explicitly say which icon should be used.
     *
     * @return URLPATH Icon
     */
    public function get_default_icon() : string
    {
        return 'themes/default/images/icons/menu/adminzone/structure/forum/post_templates.svg';
    }

    /**
     * Get a list of files that belong to this addon.
     *
     * @return array List of files
     */
    public function get_file_list() : array
    {
        return [
            'adminzone/pages/modules/admin_cns_post_templates.php',
            'lang/EN/cns_post_templates.ini',
            'sources/hooks/systems/actionlog/cns_post_templates.php',
            'sources/hooks/systems/addon_registry/cns_post_templates.php',
            'sources/hooks/systems/commandr_fs/post_templates.php',
            'sources/hooks/systems/resource_meta_aware/post_template.php',
            'themes/default/images/icons/menu/adminzone/structure/forum/post_templates.svg',
            'themes/default/images/icons_monochrome/menu/adminzone/structure/forum/post_templates.svg',
            'themes/default/javascript/cns_post_templates.js',
            'themes/default/templates/CNS_POST_TEMPLATE_SELECT.tpl',
        ];
    }

    /**
     * Get mapping between template names and the method of this class that can render a preview of them.
     *
     * @return array The mapping
     */
    public function tpl_previews() : array
    {
        return [
            'templates/CNS_POST_TEMPLATE_SELECT.tpl' => 'cns_post_template_select',
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__cns_post_template_select() : object
    {
        require_lang('cns');
        require_css('cns');

        $list = new Tempcode();
        foreach (placeholder_array() as $key => $value) {
            $list->attach(do_lorem_template('FORM_SCREEN_INPUT_LIST_ENTRY', [
                'SELECTED' => false,
                'DISABLED' => false,
                'CLASS' => '',
                'NAME' => placeholder_random_id(),
                'TEXT' => lorem_phrase(),
            ]));
        }

        $input = do_lorem_template('CNS_POST_TEMPLATE_SELECT', [
            'TABINDEX' => placeholder_number(),
            'LIST' => $list,
            'SKIP_LABEL' => false,
            'RESETS' => false,
        ]);

        $fields = new Tempcode();
        $fields->attach(do_lorem_template('FORM_SCREEN_FIELD', [
            'REQUIRED' => true,
            'SKIP_LABEL' => false,
            'PRETTY_NAME' => lorem_word(),
            'NAME' => 'post_template',
            'DESCRIPTION' => lorem_sentence_html(),
            'DESCRIPTION_SIDE' => '',
            'INPUT' => $input,
            'COMCODE' => '',
        ]));

        return lorem_globalise(do_lorem_template('FORM_SCREEN', [
            'SKIP_WEBSTANDARDS' => null,
            'HIDDEN' => '',
            'TITLE' => lorem_screen_title(),
            'URL' => placeholder_url(),
            'FIELDS' => $fields,
            'SUBMIT_ICON' => 'buttons/proceed',
            'SUBMIT_NAME' => lorem_phrase(),
            'TEXT' => lorem_sentence_html(),
            'SUPPORT_AUTOSAVE' => null,
            'JS_FUNCTION_CALLS' => null,
            'MODSECURITY_WORKAROUND' => false,
            'ANALYTIC_EVENT_CATEGORY' => null,
            'GET' => false,
            'PREVIEW' => null,
            'STAFF_HELP_URL' => null,
            'PING_URL' => null,
            'CANCEL_URL' => null,
            'EXTRA_BUTTONS' => null,
            'THEME' => null,
            'SEPARATE_PREVIEW' => null,
            'BACK_URL' => null,
        ]), null, '', true);
    }

    /**
     * Uninstall default content.
     */
    public function uninstall_test_content()
    {
        if (get_forum_type() != 'cns') {
            return;
        }

        require_code('cns_general_action2');

        $to_delete = $GLOBALS['FORUM_DB']->query_select('f_post_templates', ['id'], ['t_title' => lorem_phrase()]);
        foreach ($to_delete as $record) {
            cns_delete_post_template($record['id']);
        }
    }

    /**
     * Install default content.
     */
    public function install_test_content()
    {
        if (get_forum_type() != 'cns') {
            return;
        }

        require_code('cns_general_action');

        cns_make_post_template(lorem_phrase(), lorem_chunk(), '*', 0);
    }
}
