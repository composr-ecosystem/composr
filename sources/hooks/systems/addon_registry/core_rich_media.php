<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2022

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    core_rich_media
 */

/**
 * Hook class.
 */
class Hook_addon_registry_core_rich_media
{
    /**
     * Get a list of file permissions to set.
     *
     * @param  boolean $runtime Whether to include wildcards represented runtime-created chmoddable files
     * @return array File permissions to set
     */
    public function get_chmod_array(bool $runtime = false) : array
    {
        return [];
    }

    /**
     * Get the version of Composr this addon is for.
     *
     * @return float Version number
     */
    public function get_version() : float
    {
        return cms_version_number();
    }

    /**
     * Get the addon category.
     *
     * @return string The category
     */
    public function get_category() : string
    {
        return 'Graphical';
    }

    /**
     * Get the description of the addon.
     *
     * @return string Description of the addon
     */
    public function get_description() : string
    {
        return 'Comcode and attachments.';
    }

    /**
     * Get a list of tutorials that apply to this addon.
     *
     * @return array List of tutorials
     */
    public function get_applicable_tutorials() : array
    {
        return [
            'tut_comcode',
            'tut_adv_comcode',
            'tut_wysiwyg',
        ];
    }

    /**
     * Get a mapping of dependency types.
     *
     * @return array A structure specifying dependency information
     */
    public function get_dependencies() : array
    {
        return [
            'requires' => [],
            'recommends' => [],
            'conflicts_with' => [],
        ];
    }

    /**
     * Explicitly say which icon should be used.
     *
     * @return URLPATH Icon
     */
    public function get_default_icon() : string
    {
        return 'themes/default/images/icons/admin/component.svg';
    }

    /**
     * Get a list of files that belong to this addon.
     *
     * @return array List of files
     */
    public function get_file_list() : array
    {
        return [
            'themes/default/images/icons/editor/insert_emoticons.svg',
            'themes/default/images/icons/editor/wysiwyg_off.svg',
            'themes/default/images/icons/editor/wysiwyg_on.svg',
            'themes/default/images/icons/editor/index.html',
            'themes/default/images/icons_monochrome/editor/insert_emoticons.svg',
            'themes/default/images/icons_monochrome/editor/wysiwyg_off.svg',
            'themes/default/images/icons_monochrome/editor/wysiwyg_on.svg',
            'themes/default/images/icons_monochrome/editor/index.html',
            'sources/hooks/systems/addon_registry/core_rich_media.php',
            'sources/hooks/systems/comcode_parsing/.htaccess',
            'sources/hooks/systems/comcode_parsing/index.html',
            'sources_custom/hooks/systems/comcode_parsing/.htaccess',
            'sources_custom/hooks/systems/comcode_parsing/index.html',
            'themes/default/javascript/core_rich_media.js',
            'themes/default/templates/EMOTICON_CLICK_CODE.tpl',
            'themes/default/templates/EMOTICON_IMG_CODE_DIR.tpl',
            'themes/default/templates/EMOTICON_IMG_CODE_THEMED.tpl',
            'themes/default/templates/ATTACHMENT.tpl',
            'themes/default/templates/ATTACHMENTS.tpl',
            'themes/default/templates/ATTACHMENTS_BROWSER.tpl',
            'themes/default/templates/COMCODE_ABBR.tpl',
            'themes/default/templates/COMCODE_ADDRESS.tpl',
            'themes/default/templates/COMCODE_ALIGN.tpl',
            'themes/default/templates/COMCODE_BOLD.tpl',
            'themes/default/templates/COMCODE_CITE.tpl',
            'themes/default/templates/COMCODE_CODE.tpl',
            'themes/default/templates/COMCODE_CODE_SCROLL.tpl',
            'themes/default/templates/COMCODE_CONCEPT.tpl',
            'themes/default/templates/COMCODE_CONCEPTS.tpl',
            'themes/default/templates/COMCODE_CONTENTS.tpl',
            'themes/default/templates/COMCODE_CONTENTS_LEVEL.tpl',
            'themes/default/templates/COMCODE_CRITICAL_PARSE_ERROR.tpl',
            'themes/default/templates/COMCODE_DEL.tpl',
            'themes/default/templates/COMCODE_DFN.tpl',
            'themes/default/templates/COMCODE_EDITOR_BUTTON.tpl',
            'themes/default/templates/COMCODE_EDITOR_MICRO_BUTTON.tpl',
            'themes/default/templates/COMCODE_PAGE_EDIT_SCREEN.tpl',
            'themes/default/templates/COMCODE_FONT.tpl',
            'themes/default/templates/COMCODE_TELETYPE.tpl',
            'themes/default/templates/COMCODE_SAMP.tpl',
            'themes/default/templates/COMCODE_Q.tpl',
            'themes/default/templates/COMCODE_VAR.tpl',
            'themes/default/templates/COMCODE_SHOCKER.tpl',
            'themes/default/templates/COMCODE_HIDE.tpl',
            'themes/default/templates/COMCODE_HIGHLIGHT.tpl',
            'themes/default/templates/COMCODE_IMG.tpl',
            'themes/default/templates/COMCODE_INDENT.tpl',
            'themes/default/templates/COMCODE_INS.tpl',
            'themes/default/templates/COMCODE_ITALICS.tpl',
            'themes/default/templates/COMCODE_JUMPING.tpl',
            'themes/default/templates/COMCODE_MESSAGE.tpl',
            'themes/default/templates/COMCODE_SUBTITLE.tpl',
            'themes/default/templates/COMCODE_MISTAKE_ERROR.tpl',
            'themes/default/templates/COMCODE_MISTAKE_LINE.tpl',
            'themes/default/templates/COMCODE_MISTAKE_SCREEN.tpl',
            'themes/default/templates/COMCODE_QUOTE.tpl',
            'themes/default/templates/COMCODE_QUOTE_BY.tpl',
            'themes/default/templates/COMCODE_RANDOM.tpl',
            'themes/default/templates/COMCODE_REFERENCE.tpl',
            'themes/default/templates/COMCODE_STRIKE.tpl',
            'themes/default/templates/COMCODE_SUB.tpl',
            'themes/default/templates/COMCODE_SUP.tpl',
            'themes/default/templates/COMCODE_THUMB.tpl',
            'themes/default/templates/COMCODE_TICKER.tpl',
            'themes/default/templates/COMCODE_UNDERLINE.tpl',
            'themes/default/templates/COMCODE_URL.tpl',
            'themes/default/templates/COMCODE_SURROUND.tpl',
            'themes/default/templates/COMCODE_TEXTCODE_LINE.tpl',
            'themes/default/templates/COMCODE_TEXTCODE_TAB.tpl',
            'themes/default/templates/COMCODE_WIKI_LINK.tpl',
            'themes/default/templates/COMCODE_CONCEPT_INLINE.tpl',
            'themes/default/templates/COMCODE_IF_IN_GROUP.tpl',
            'themes/default/templates/COMCODE_OVERLAY.tpl',
            'themes/default/templates/COMCODE_CAROUSEL.tpl',
            'themes/default/templates/COMCODE_SECTION.tpl',
            'themes/default/templates/COMCODE_SECTION_CONTROLLER.tpl',
            'themes/default/templates/COMCODE_TAB_CONTROLLER.tpl',
            'themes/default/templates/COMCODE_TAB_HEAD.tpl',
            'themes/default/templates/COMCODE_TAB_BODY.tpl',
            'themes/default/templates/COMCODE_SNAPBACK.tpl',
            'themes/default/templates/COMCODE_TOOLTIP.tpl',
            'themes/default/templates/COMCODE_PULSE.tpl',
            'themes/default/templates/COMCODE_TABULAR_FAKE_TABLE.tpl',
            'themes/default/templates/COMCODE_TABULAR_FLEX.tpl',
            'themes/default/templates/COMCODE_TABULAR_FLOATS.tpl',
            'themes/default/templates/COMCODE_TABULAR_INLINE_BLOCKS.tpl',
            'themes/default/templates/COMCODE_TABULAR_TABLE.tpl',
            'themes/default/javascript/pulse.js',
            'themes/default/templates/COMCODE_BIG_TABS_CONTROLLER.tpl',
            'themes/default/templates/COMCODE_BIG_TABS_TAB.tpl',
            'themes/default/templates/MEDIA_AUDIO_WEBSAFE.tpl',
            'themes/default/templates/MEDIA_IMAGE_WEBSAFE.tpl',
            'themes/default/templates/MEDIA_PDF.tpl',
            'themes/default/templates/MEDIA_SVG.tpl',
            'themes/default/templates/MEDIA_VIDEO_FACEBOOK.tpl',
            'themes/default/templates/MEDIA_VIDEO_GENERAL.tpl',
            'themes/default/templates/MEDIA_VIDEO_WEBSAFE.tpl',
            'themes/default/templates/MEDIA_VIMEO.tpl',
            'themes/default/templates/MEDIA_WEBPAGE_OEMBED_RICH.tpl',
            'themes/default/templates/MEDIA_WEBPAGE_OEMBED_VIDEO.tpl',
            'themes/default/templates/MEDIA_WEBPAGE_SEMANTIC.tpl',
            'themes/default/templates/MEDIA_YOUTUBE.tpl',
            'themes/default/templates/MEDIA_DOWNLOAD.tpl',
            'themes/default/templates/MEDIA__DOWNLOAD_LINK.tpl',
            'themes/default/css/big_tabs.css',
            'themes/default/css/comcode_mistakes.css',
            'themes/default/images/icons/wiki/link.svg',
            'themes/default/images/icons/wiki/link_hover.svg',
            'themes/default/images/icons/wiki/index.html',
            'themes/default/images/icons_monochrome/wiki/link.svg',
            'themes/default/images/icons_monochrome/wiki/link_hover.svg',
            'themes/default/images/icons_monochrome/wiki/index.html',
            'themes/default/images/icons/carousel/button_left_hover.svg',
            'themes/default/images/icons/carousel/button_left.svg',
            'themes/default/images/icons/carousel/button_right_hover.svg',
            'themes/default/images/icons/carousel/button_right.svg',
            'themes/default/images/icons/carousel/index.html',
            'themes/default/images/icons_monochrome/carousel/button_left_hover.svg',
            'themes/default/images/icons_monochrome/carousel/button_left.svg',
            'themes/default/images/icons_monochrome/carousel/button_right_hover.svg',
            'themes/default/images/icons_monochrome/carousel/button_right.svg',
            'themes/default/images/icons_monochrome/carousel/index.html',
            'themes/default/images/big_tabs/index.html',
            'themes/default/images/big_tabs/controller_button_active.svg',
            'themes/default/images/big_tabs/controller_button.svg',
            'sources/hooks/systems/notifications/member_mention.php',
            'sources/member_mentions.php',
            'data/attachment.php',
            'data/attachment_popup.php',
            'data/emoticons.php',
            'data/comcode_helper.php',
            'data/thumb.php',
            'data/comcode_convert.php',
            'lang/EN/comcode.ini',
            'sources/comcode.php',
            'sources/comcode_to_text.php',
            'sources/comcode_tools.php',
            'sources/comcode_cleanup.php',
            'sources/comcode_check.php',
            'sources/comcode_from_html.php',
            'sources/comcode_renderer.php',
            'sources/comcode_compiler.php',
            'sources/comcode_compiler_tabular.php',
            'sources/attachments.php',
            'sources/attachments2.php',
            'sources/attachments3.php',
            'sources/comcode_add.php',
            'sources/hooks/systems/attachments/.htaccess',
            'sources_custom/hooks/systems/attachments/.htaccess',
            'sources/hooks/systems/attachments/index.html',
            'sources_custom/hooks/systems/attachments/index.html',
            'sources/hooks/systems/attachments/null.php',
            'sources/blocks/main_emoticon_codes.php',
            'sources/hooks/systems/comcode_link_handlers/.htaccess',
            'sources_custom/hooks/systems/comcode_link_handlers/.htaccess',
            'sources/hooks/systems/comcode_link_handlers/index.html',
            'sources_custom/hooks/systems/comcode_link_handlers/index.html',
            'sources/hooks/systems/preview/comcode_tag.php',
            'sources/hooks/systems/config/attachment_cleanup.php',
            'sources/hooks/systems/config/attachment_default_height.php',
            'sources/hooks/systems/config/attachment_default_width.php',
            'sources/hooks/systems/config/simplified_attachments_ui.php',
            'sources/hooks/systems/config/oembed_html_safelist.php',
            'sources/hooks/systems/config/oembed_manual_patterns.php',
            'sources/hooks/systems/config/oembed_max_size.php',
            'sources/hooks/systems/media_rendering/audio_general.php',
            'sources/hooks/systems/media_rendering/audio_microsoft.php',
            'sources/hooks/systems/media_rendering/audio_websafe.php',
            'sources/hooks/systems/media_rendering/code.php',
            'sources/hooks/systems/media_rendering/hyperlink.php',
            'sources/hooks/systems/media_rendering/image_websafe.php',
            'sources/hooks/systems/media_rendering/index.html',
            'sources_custom/hooks/systems/media_rendering/.htaccess',
            'sources_custom/hooks/systems/media_rendering/index.html',
            'sources/hooks/systems/oembed/.htaccess',
            'sources/hooks/systems/oembed/index.html',
            'sources_custom/hooks/systems/oembed/.htaccess',
            'sources_custom/hooks/systems/oembed/index.html',
            'sources/hooks/systems/comcode_preparse/.htaccess',
            'sources_custom/hooks/systems/comcode_preparse/.htaccess',
            'sources/hooks/systems/comcode_preparse/index.html',
            'sources_custom/hooks/systems/comcode_preparse/index.html',
            'sources/hooks/systems/media_rendering/email.php',
            'sources/hooks/systems/media_rendering/oembed.php',
            'sources/hooks/systems/media_rendering/pdf.php',
            'sources/hooks/systems/media_rendering/svg.php',
            'sources/hooks/systems/media_rendering/video_facebook.php',
            'sources/hooks/systems/media_rendering/video_general.php',
            'sources/hooks/systems/media_rendering/video_microsoft.php',
            'sources/hooks/systems/media_rendering/video_websafe.php',
            'sources/hooks/systems/media_rendering/vimeo.php',
            'sources/hooks/systems/media_rendering/youtube.php',
            'sources/hooks/systems/media_rendering/.htaccess',
            'sources/hooks/systems/comcode_link_handlers/media_rendering.php',
            'sources/media_renderer.php',
            'uploads/attachments/index.html',
            'uploads/attachments_thumbs/index.html',
            'uploads/attachments/.htaccess',
            'uploads/attachments_thumbs/.htaccess',
            'themes/default/templates/COMCODE_MEMBER_LINK.tpl',
            'themes/default/templates/COMCODE_MEDIA_SET.tpl',
            'themes/default/javascript/jquery_autocomplete.js',
            'themes/default/css/autocomplete.css',
            'themes/default/images/icons/media_set/next.svg',
            'themes/default/images/icons/media_set/previous.svg',
            'themes/default/images/icons/media_set/index.html',
            'themes/default/images/icons_monochrome/media_set/next.svg',
            'themes/default/images/icons_monochrome/media_set/previous.svg',
            'themes/default/images/icons_monochrome/media_set/index.html',
            'sources/hooks/systems/comcode_page_hints/make_mobile.php',
            'sources/hooks/systems/comcode_page_hints/no_smart_conversion.php',
            'sources/hooks/systems/comcode_page_hints/no_wysiwyg.php',
            'sources/hooks/systems/comcode_page_hints/index.html',
            'sources/hooks/systems/comcode_page_hints/.htaccess',

            'themes/default/images/icons/comcode_editor/index.html',
            'themes/default/images/icons/comcode_editor/apply_changes.svg',
            'themes/default/images/icons/comcode_editor/b.svg',
            'themes/default/images/icons/comcode_editor/quote.svg',
            'themes/default/images/icons/comcode_editor/block.svg',
            'themes/default/images/icons/comcode_editor/box.svg',
            'themes/default/images/icons/comcode_editor/code.svg',
            'themes/default/images/icons/comcode_editor/comcode.svg',
            'themes/default/images/icons/comcode_editor/email.svg',
            'themes/default/images/icons/comcode_editor/hide.svg',
            'themes/default/images/icons/comcode_editor/html.svg',
            'themes/default/images/icons/comcode_editor/i.svg',
            'themes/default/images/icons/comcode_editor/img.svg',
            'themes/default/images/icons/comcode_editor/list.svg',
            'themes/default/images/icons/comcode_editor/page.svg',
            'themes/default/images/icons/comcode_editor/s.svg',
            'themes/default/images/icons/comcode_editor/thumb.svg',
            'themes/default/images/icons/comcode_editor/u.svg',
            'themes/default/images/icons/comcode_editor/url.svg',

            'themes/default/images/icons_monochrome/comcode_editor/index.html',
            'themes/default/images/icons_monochrome/comcode_editor/apply_changes.svg',
            'themes/default/images/icons_monochrome/comcode_editor/b.svg',
            'themes/default/images/icons_monochrome/comcode_editor/quote.svg',
            'themes/default/images/icons_monochrome/comcode_editor/block.svg',
            'themes/default/images/icons_monochrome/comcode_editor/box.svg',
            'themes/default/images/icons_monochrome/comcode_editor/code.svg',
            'themes/default/images/icons_monochrome/comcode_editor/comcode.svg',
            'themes/default/images/icons_monochrome/comcode_editor/email.svg',
            'themes/default/images/icons_monochrome/comcode_editor/hide.svg',
            'themes/default/images/icons_monochrome/comcode_editor/html.svg',
            'themes/default/images/icons_monochrome/comcode_editor/i.svg',
            'themes/default/images/icons_monochrome/comcode_editor/img.svg',
            'themes/default/images/icons_monochrome/comcode_editor/list.svg',
            'themes/default/images/icons_monochrome/comcode_editor/page.svg',
            'themes/default/images/icons_monochrome/comcode_editor/s.svg',
            'themes/default/images/icons_monochrome/comcode_editor/thumb.svg',
            'themes/default/images/icons_monochrome/comcode_editor/u.svg',
            'themes/default/images/icons_monochrome/comcode_editor/url.svg',
        ];
    }

    /**
     * Get mapping between template names and the method of this class that can render a preview of them.
     *
     * @return array The mapping
     */
    public function tpl_previews() : array
    {
        return [
            'templates/EMOTICON_CLICK_CODE.tpl' => 'emoticon_click_code',
            'templates/EMOTICON_IMG_CODE_DIR.tpl' => 'emoticon_click_code',
            'templates/EMOTICON_IMG_CODE_THEMED.tpl' => 'emoticon_click_code',
            'templates/ATTACHMENT.tpl' => 'attachments',
            'templates/ATTACHMENTS.tpl' => 'attachments',
            'templates/ATTACHMENTS_BROWSER.tpl' => 'attachments_browser',
            'templates/COMCODE_BIG_TABS_TAB.tpl' => 'comcode_big_tabs',
            'templates/COMCODE_BIG_TABS_CONTROLLER.tpl' => 'comcode_big_tabs',
            'templates/COMCODE_PAGE_EDIT_SCREEN.tpl' => 'comcode_page_edit_screen',
            'templates/COMCODE_TOOLTIP.tpl' => 'comcode_tooltip',
            'templates/COMCODE_CRITICAL_PARSE_ERROR.tpl' => 'comcode_critical_parse_error',
            'templates/COMCODE_MISTAKE_ERROR.tpl' => 'comcode_mistake_screen',
            'templates/COMCODE_MISTAKE_LINE.tpl' => 'comcode_mistake_screen',
            'templates/COMCODE_MISTAKE_SCREEN.tpl' => 'comcode_mistake_screen',
            'templates/COMCODE_OVERLAY.tpl' => 'comcode_overlay',
            'templates/COMCODE_SNAPBACK.tpl' => 'comcode_snapback',
            'templates/COMCODE_SECTION.tpl' => 'comcode_section_controller',
            'templates/COMCODE_SECTION_CONTROLLER.tpl' => 'comcode_section_controller',
            'templates/COMCODE_CAROUSEL.tpl' => 'comcode_carousel',
            'templates/COMCODE_IF_IN_GROUP.tpl' => 'comcode_if_in_group',
            'templates/COMCODE_ABBR.tpl' => 'comcode_abbr',
            'templates/COMCODE_ADDRESS.tpl' => 'comcode_address',
            'templates/COMCODE_DFN.tpl' => 'comcode_dfn',
            'templates/COMCODE_PULSE.tpl' => 'comcode_pulse',
            'templates/COMCODE_DEL.tpl' => 'comcode_del',
            'templates/COMCODE_INS.tpl' => 'comcode_ins',
            'templates/COMCODE_CITE.tpl' => 'comcode_cite',
            'templates/COMCODE_BOLD.tpl' => 'comcode_bold',
            'templates/COMCODE_ALIGN.tpl' => 'comcode_align',
            'templates/COMCODE_INDENT.tpl' => 'comcode_indent',
            'templates/COMCODE_SURROUND.tpl' => 'comcode_surround',
            'templates/COMCODE_ITALICS.tpl' => 'comcode_italics',
            'templates/COMCODE_UNDERLINE.tpl' => 'comcode_underline',
            'templates/COMCODE_STRIKE.tpl' => 'comcode_strike',
            'templates/COMCODE_SUP.tpl' => 'comcode_sup',
            'templates/COMCODE_SUB.tpl' => 'comcode_sub',
            'templates/COMCODE_RANDOM.tpl' => 'comcode_random',
            'templates/COMCODE_JUMPING.tpl' => 'comcode_jumping',
            'templates/COMCODE_TICKER.tpl' => 'comcode_ticker',
            'templates/COMCODE_HIGHLIGHT.tpl' => 'comcode_highlight',
            'templates/COMCODE_FONT.tpl' => 'comcode_font',
            'templates/COMCODE_CONCEPT.tpl' => 'comcode_concept',
            'templates/COMCODE_CONCEPT_INLINE.tpl' => 'comcode_concept_inline',
            'templates/COMCODE_CONCEPTS.tpl' => 'comcode_concepts',
            'templates/COMCODE_THUMB.tpl' => 'comcode_thumb',
            'templates/COMCODE_IMG.tpl' => 'comcode_img',
            'templates/COMCODE_URL.tpl' => 'comcode_url',
            'templates/COMCODE_REFERENCE.tpl' => 'comcode_reference',
            'templates/COMCODE_HIDE.tpl' => 'comcode_hide',
            'templates/COMCODE_SHOCKER.tpl' => 'comcode_shocker',
            'templates/COMCODE_QUOTE_BY.tpl' => 'comcode_quote_by',
            'templates/COMCODE_Q.tpl' => 'comcode_q',
            'templates/COMCODE_QUOTE.tpl' => 'comcode_quote',
            'templates/COMCODE_CONTENTS.tpl' => 'comcode_contents',
            'templates/COMCODE_CONTENTS_LEVEL.tpl' => 'comcode_contents',
            'templates/COMCODE_TEXTCODE_LINE.tpl' => 'comcode_textcode_line',
            'templates/COMCODE_TEXTCODE_TAB.tpl' => 'comcode_textcode_tab',
            'templates/COMCODE_WIKI_LINK.tpl' => 'comcode_wiki_link',
            'templates/COMCODE_TABULAR_FAKE_TABLE.tpl' => 'comcode_tabular_screen',
            'templates/COMCODE_TABULAR_FLEX.tpl' => 'comcode_tabular_screen',
            'templates/COMCODE_TABULAR_FLOATS.tpl' => 'comcode_tabular_screen',
            'templates/COMCODE_TABULAR_INLINE_BLOCKS.tpl' => 'comcode_tabular_screen',
            'templates/COMCODE_TABULAR_TABLE.tpl' => 'comcode_tabular_screen',
            'templates/COMCODE_SUBTITLE.tpl' => 'comcode_subtitle',
            'templates/COMCODE_TAB_BODY.tpl' => 'comcode_tab_body',
            'templates/COMCODE_SAMP.tpl' => 'comcode_samp',
            'templates/COMCODE_VAR.tpl' => 'comcode_var',
            'templates/COMCODE_TELETYPE.tpl' => 'comcode_teletype',
            'templates/COMCODE_TAB_CONTROLLER.tpl' => 'comcode_tab_body',
            'templates/COMCODE_TAB_HEAD.tpl' => 'comcode_tab_body',
            'templates/COMCODE_CODE.tpl' => 'comcode_code',
            'templates/COMCODE_CODE_SCROLL.tpl' => 'comcode_code_scroll',
            'templates/MEDIA_AUDIO_WEBSAFE.tpl' => 'media_audio_websafe',
            'templates/MEDIA_IMAGE_WEBSAFE.tpl' => 'media_image_websafe',
            'templates/MEDIA_PDF.tpl' => 'media_pdf',
            'templates/MEDIA_SVG.tpl' => 'media_svg',
            'templates/MEDIA_VIDEO_FACEBOOK.tpl' => 'media_video_facebook',
            'templates/MEDIA_VIDEO_GENERAL.tpl' => 'media_video_general',
            'templates/MEDIA_VIDEO_WEBSAFE.tpl' => 'media_video_websafe',
            'templates/MEDIA_VIMEO.tpl' => 'media_vimeo',
            'templates/MEDIA_WEBPAGE_OEMBED_RICH.tpl' => 'media_webpage_oembed_rich',
            'templates/MEDIA_WEBPAGE_OEMBED_VIDEO.tpl' => 'media_webpage_oembed_video',
            'templates/MEDIA_WEBPAGE_SEMANTIC.tpl' => 'media_webpage_semantic',
            'templates/MEDIA_YOUTUBE.tpl' => 'media_youtube',
            'templates/MEDIA_DOWNLOAD.tpl' => 'media_download',
            'templates/MEDIA__DOWNLOAD_LINK.tpl' => 'media__download_link',
            'templates/COMCODE_MEMBER_LINK.tpl' => 'comcode_member_link',
            'templates/COMCODE_MEDIA_SET.tpl' => 'comcode_media_set',
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_big_tabs() : object
    {
        $content = new Tempcode();

        $page = [];
        foreach (placeholder_array(4) as $v) {
            $page[] = $v;
        }
        $content->attach(do_lorem_template('COMCODE_BIG_TABS_CONTROLLER', [
            'PASS_ID' => placeholder_codename(),
            'SWITCH_TIME' => '6000',
            'TABS' => $page,
        ]));

        foreach ($page as $i => $v) {
            $content->attach(do_lorem_template('COMCODE_BIG_TABS_TAB', [
                'PASS_ID' => placeholder_codename() . strval($i),
                'CONTENT' => lorem_paragraph() . strval($i),
                'NAME' => $v,
                'DEFAULT' => ($i == 0),
            ]));
        }

        return lorem_globalise(do_lorem_template('COMCODE_SURROUND', [
            'CLASS' => 'clearfix',
            'CONTENT' => $content,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_page_edit_screen() : object
    {
        require_lang('zones');

        return lorem_globalise(do_lorem_template('COMCODE_PAGE_EDIT_SCREEN', [
            'NEW' => lorem_phrase(),
            'PING_URL' => placeholder_url(),
            'WARNING_DETAILS' => '',
            'TEXT' => lorem_sentence_html(),
            'TITLE' => lorem_title(),
            'DELETE_URL' => placeholder_url(),
            'IS_TRANSLATION' => false,
            'ZONE' => lorem_phrase(),
            'FILE' => lorem_phrase(),
            'POSTING_FORM' => placeholder_form(),
            'REVISIONS' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_tooltip() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_TOOLTIP', [
            'URL' => placeholder_url(),
            'TOOLTIP' => lorem_phrase(),
            'CONTENT' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__emoticon_click_code() : object
    {
        $emoticon = placeholder_emoticons();
        $emt = new Tempcode();
        foreach ($emoticon as $k => $v) {
            $_emt = do_lorem_template('EMOTICON_IMG_CODE_THEMED', [
                'EMOTICON' => $k,
                'SRC' => $v[1],
            ]);
            $emt->attach(do_lorem_template('EMOTICON_CLICK_CODE', [
                'FIELD_NAME' => lorem_word(),
                'CODE' => lorem_word(),
                'IMAGE' => $_emt,
            ]));
        }
        $_emt = do_lorem_template('EMOTICON_IMG_CODE_DIR', [
            'EMOTICON' => lorem_word(),
            'SRC' => get_base_url() . '/themes/default/images/cns_emoticons/constipated.png',
        ]);
        $emt->attach(do_lorem_template('EMOTICON_CLICK_CODE', [
            'FIELD_NAME' => lorem_word(),
            'CODE' => lorem_word(),
            'IMAGE' => $_emt,
        ]));

        return lorem_globalise($emt, null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__attachments() : object
    {
        require_javascript('checking');
        require_javascript('plupload');
        require_javascript('posting');
        require_javascript('editing');

        require_css('forms');

        $content = do_lorem_template('ATTACHMENT', [
            'I' => placeholder_number(),
            'POSTING_FIELD_NAME' => '',
            'TRUE_ATTACHMENT_UI' => true,
            'NO_QUOTA' => false,
            'FILTER' => null,
        ]);

        $attachments = do_lorem_template('ATTACHMENTS', [
            'POSTING_FIELD_NAME' => lorem_word(),
            'ATTACHMENT_TEMPLATE' => $content,
            'IMAGE_TYPES' => placeholder_types(),
            'ATTACHMENTS' => $content,
            'MAX_ATTACHMENTS' => placeholder_number(),
            'NUM_ATTACHMENTS' => placeholder_number(),
            'TRUE_ATTACHMENT_UI' => true,
            'FILTER' => null,
        ]);

        return lorem_globalise(do_lorem_template('POSTING_FORM', [
            'TABINDEX_PF' => placeholder_number(),
            'PREVIEW' => lorem_phrase(),
            'COMCODE_EDITOR' => lorem_phrase(),
            'COMCODE_EDITOR_SMALL' => lorem_phrase(),
            'CLASS' => lorem_phrase(),
            'COMCODE_URL' => placeholder_url(),
            'EXTRA' => lorem_phrase(),
            'POST_COMMENT' => lorem_phrase(),
            'EMOTICON_CHOOSER' => lorem_phrase(),
            'SUBMIT_ICON' => 'buttons/proceed',
            'SUBMIT_NAME' => lorem_word(),
            'HIDDEN_FIELDS' => '',
            'URL' => placeholder_url(),
            'POST' => lorem_phrase(),
            'DEFAULT_PARSED' => lorem_phrase(),
            'ATTACHMENTS' => $attachments,
            'SPECIALISATION' => placeholder_fields(),
            'SPECIALISATION2' => placeholder_fields(),
            'REQUIRED' => true,
            'SUPPORT_AUTOSAVE' => true,
            'CANCEL_URL' => placeholder_url(),
            'DESCRIPTION' => lorem_paragraph(),
            'JS_FUNCTION_CALLS' => [],
            'SPECIALISATION2_HIDDEN' => null,
            'MODSECURITY_WORKAROUND' => false,
            'COMCODE_PAGE_HINTS' => null,
            'STAFF_HELP_URL' => null,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_critical_parse_error() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_CRITICAL_PARSE_ERROR', [
            'LINE' => lorem_phrase(),
            'MESSAGE' => lorem_phrase(),
            'SOURCE' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_mistake_screen() : object
    {
        $line = new Tempcode();
        foreach (placeholder_array() as $key => $value) {
            $line_content = new Tempcode();
            $line_content->attach(lorem_phrase());
            if ($key == 0) {
                $line_content->attach(do_lorem_template('COMCODE_MISTAKE_ERROR', []));
            }

            $line->attach(do_lorem_template('COMCODE_MISTAKE_LINE', [
                'NUMBER' => placeholder_number(),
                'LINE' => $line_content,
            ]));
        }

        return lorem_globalise(do_lorem_template('COMCODE_MISTAKE_SCREEN', [
            'TITLE' => lorem_title(),
            'EDITABLE' => true,
            'FORM' => placeholder_form(),
            'LINE' => lorem_phrase(),
            'MESSAGE' => lorem_phrase(),
            'LINES' => $line,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_overlay() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_OVERLAY', [
            'EMBED' => lorem_phrase(),
            'ID' => placeholder_codename(),
            'X' => placeholder_number(),
            'Y' => placeholder_number(),
            'WIDTH' => placeholder_number(),
            'HEIGHT' => placeholder_number(),
            'TIMEIN' => '1000',
            'TIMEOUT' => '5000',
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_snapback() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_SNAPBACK', [
            'URL' => placeholder_url(),
            'TITLE' => lorem_phrase(),
            'POST_ID' => placeholder_codename(),
            '_DATE' => placeholder_date_raw(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_section_controller() : object
    {
        $section = new Tempcode();
        foreach (placeholder_array() as $k => $v) {
            $section->attach(do_lorem_template('COMCODE_SECTION', [
                'PASS_ID' => placeholder_random_id(),
                'DEFAULT' => false,
                'NAME' => strval($k + 1),
                'CONTENT' => lorem_paragraph(),
            ]));
        }
        $k++;
        $section->attach(do_lorem_template('COMCODE_SECTION', [
            'PASS_ID' => placeholder_codename(),
            'DEFAULT' => true,
            'NAME' => strval($k + 1),
            'CONTENT' => lorem_paragraph(),
        ]));
        $page = [];
        foreach (placeholder_array(4) as $k => $v) {
            $page[] = strval($k + 1);
        }
        $section->attach(do_lorem_template('COMCODE_SECTION_CONTROLLER', [
            'SECTIONS' => $page,
            'PASS_ID' => placeholder_codename(),
        ]));

        return lorem_globalise($section, null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_carousel() : object
    {
        $content = new Tempcode();
        foreach (placeholder_array(10) as $v) {
            $content->attach(placeholder_image());
        }
        return lorem_globalise(do_lorem_template('COMCODE_CAROUSEL', [
            'CONTENT' => $content,
            'SCROLL_AMOUNT' => placeholder_number(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_if_in_group() : object
    {
        $groups = '';
        $admin_groups = $GLOBALS['FORUM_DRIVER']->get_super_admin_groups();
        foreach ($admin_groups as $i => $group) {
            if ($i > 0) {
                $groups .= ',';
            }
            $groups .= strval($group);
        }

        $tpl = do_lorem_template('COMCODE_IF_IN_GROUP', [
            'TYPE' => 'primary',
            'CONTENT' => lorem_phrase(),
            'GROUPS' => $groups,
        ]);

        $tpl->attach(do_lorem_template('COMCODE_IF_IN_GROUP', [
            'TYPE' => 'secondary',
            'CONTENT' => lorem_phrase(),
            'GROUPS' => $groups,
        ]));

        return lorem_globalise($tpl, null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_abbr() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_ABBR', [
            'CONTENT' => lorem_phrase(),
            'TITLE' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_address() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_ADDRESS', [
            'CONTENT' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_dfn() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_DFN', [
            'CONTENT' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_q() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_Q', [
            'CONTENT' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_pulse() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_PULSE', [
            'CONTENT' => lorem_phrase(),
            'MIN_COLOR' => '#000000',
            'MAX_COLOR' => '#FFFFFF',
            'SPEED' => '1000',
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_del() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_DEL', [
            'CONTENT' => lorem_phrase(),
            'CITE' => lorem_word(),
            'DATETIME' => placeholder_date(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_ins() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_INS', [
            'CONTENT' => lorem_phrase(),
            'CITE' => lorem_word(),
            'DATETIME' => placeholder_date(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_cite() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_CITE', [
            'CONTENT' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_bold() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_BOLD', [
            'CONTENT' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_align() : object
    {
        $tpl = do_lorem_template('COMCODE_ALIGN', [
            'ALIGN' => 'left',
            'CONTENT' => lorem_phrase(),
        ]);

        $tpl->attach(do_lorem_template('COMCODE_ALIGN', [
            'ALIGN' => 'center',
            'CONTENT' => lorem_phrase(),
        ]));

        $tpl->attach(do_lorem_template('COMCODE_ALIGN', [
            'ALIGN' => 'right',
            'CONTENT' => lorem_phrase(),
        ]));

        return lorem_globalise($tpl, null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_indent() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_INDENT', [
            'INDENT' => placeholder_number(),
            'CONTENT' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_surround() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_SURROUND', [
            'CLASS' => lorem_phrase(),
            'CONTENT' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_italics() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_ITALICS', [
            'CONTENT' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_underline() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_UNDERLINE', [
            'CONTENT' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_strike() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_STRIKE', [
            'CONTENT' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_sup() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_SUP', [
            'CONTENT' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_sub() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_SUB', [
            'CONTENT' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_random() : object
    {
        $parts = [];
        foreach (placeholder_array(5) as $k => $v) {
            $parts[] = [
                'NUM' => strval($k),
                'VAL' => placeholder_number(),
            ];
        }
        return lorem_globalise(do_lorem_template('COMCODE_RANDOM', [
            'FULL' => placeholder_number(),
            'MAX' => '3',
            'PARTS' => $parts,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_jumping() : object
    {
        $parts = [];
        $parts[] = [
            'PART' => lorem_phrase(),
        ];

        return lorem_globalise(do_lorem_template('COMCODE_JUMPING', [
            'FULL' => lorem_phrase(),
            'TIME' => '1000',
            'PARTS' => $parts,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_ticker() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_TICKER', [
            'SPEED' => '10',
            'WIDTH' => '400',
            'TEXT' => lorem_sentence_html(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_highlight() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_HIGHLIGHT', [
            'CONTENT' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_font() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_FONT', [
            'CONTENT' => lorem_phrase(),
            'SIZE' => 'font-size:2em;',
            'COLOR' => 'color:red;',
            'FACE' => 'font-family:Arial;',
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_concept() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_CONCEPT', [
            'TEXT' => lorem_sentence(),
            'URL' => placeholder_url(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_concept_inline() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_CONCEPT_INLINE', [
            'TEXT' => lorem_sentence(),
            'FULL' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_concepts() : object
    {
        $concepts = [];
        foreach (placeholder_array() as $i => $v) {
            $concepts[] = [
                'A' => lorem_word() . strval($i),
                'KEY' => lorem_phrase(),
                'VALUE' => lorem_phrase(),
            ];
        }

        return lorem_globalise(do_lorem_template('COMCODE_CONCEPTS', [
            'TITLE' => lorem_phrase(),
            'CONCEPTS' => $concepts,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_thumb() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_THUMB', [
            'CAPTION' => lorem_phrase(),
            'ALIGN' => 'top',
            'URL_THUMB' => placeholder_image_url(),
                'URL_FULL' => placeholder_url(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_img() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_IMG', [
            'REFRESH_TIME' => '20000',
            'ROLLOVER' => lorem_phrase(),
            'ALIGN' => 'top',
            'URL' => placeholder_image_url(),
            'CAPTION' => lorem_phrase(),
            'TOOLTIP' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_url() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_URL', [
            'TITLE' => lorem_phrase(),
            'REL' => lorem_phrase(),
            'TARGET' => lorem_phrase(),
            'URL' => placeholder_url(),
            'CAPTION' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_reference() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_REFERENCE', [
            'SOURCE' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_shocker() : object
    {
        $attributes = [
            'left_1' => 'Ra Ra',
            'right_1' => 'ah-ah-ah',
            'left_2' => 'Roma',
            'right_2' => 'Roma-ma',
            'left_3' => 'GaGa',
            'right_3' => 'Oh la-la',
            'left_4' => 'Want your',
            'right_4' => 'bad romance',
        ];

        $_parts = [];
        foreach ($attributes as $key => $val) {
            if (substr($key, 0, 5) == 'left_') {
                $left = $val;
                $right = array_key_exists('right_' . substr($key, 5), $attributes) ? $attributes['right_' . substr($key, 5)] : '';

                $left = make_string_tempcode($left);
                $right = make_string_tempcode($right);
                $_parts[] = [
                    'LEFT' => $left,
                    'RIGHT' => $right,
                ];
            }
        }

        $min_color = '0000FF';
        $max_color = 'FF0044';

        return lorem_globalise(do_lorem_template('COMCODE_SHOCKER', [
            'MIN_COLOR' => $min_color,
            'MAX_COLOR' => $max_color,
            'FULL' => implode(', ', $attributes),
            'TIME' => strval(4000),
            'PARTS' => $_parts,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_hide() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_HIDE', [
            'TEXT' => lorem_sentence_html(),
            'CONTENT' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_quote_by() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_QUOTE_BY', [
            'CONTENT' => lorem_phrase(),
            'BY' => lorem_phrase(),
            'CITE' => lorem_word(),
            'SAIDLESS' => false,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_quote() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_QUOTE', [
            'CONTENT' => lorem_phrase(),
            'CITE' => lorem_word(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_contents() : object
    {
        $lines = [];
        foreach (placeholder_array() as $v) {
            $lines[] = [
                'URL' => placeholder_url(),
                'LINE' => lorem_phrase(),
                'ID' => placeholder_codename(),
                'UNDER' => '',
            ];
        }
        $level = do_lorem_template('COMCODE_CONTENTS_LEVEL', [
            'TYPE' => 'disc',
            'LINES' => $lines,
        ]);

        return lorem_globalise(do_lorem_template('COMCODE_CONTENTS', [
            'LEVELS' => $level,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_textcode_line() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_TEXTCODE_LINE', []), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_textcode_tab() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_TEXTCODE_TAB', []), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_wiki_link() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_WIKI_LINK', [
            'URL' => placeholder_url(),
            'TEXT' => lorem_sentence(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_code_scroll() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_CODE_SCROLL', [
            'TITLE' => lorem_phrase(),
            'CONTENT' => lorem_phrase(),
            'TYPE' => '',
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_tabular_screen() : object
    {
        $tpls = [
            'COMCODE_TABULAR_FAKE_TABLE',
            'COMCODE_TABULAR_FLEX',
            'COMCODE_TABULAR_FLOATS',
            'COMCODE_TABULAR_INLINE_BLOCKS',
            'COMCODE_TABULAR_TABLE',
        ];

        $tag_output = new Tempcode();
        foreach ($tpls as $tpl) {
            $tabular_summary = lorem_phrase();
            $tabular_class = null;
            $tabular_is_columned_table = false;
            $tabular_is_wide = true;
            $tabular_id = null;
            $tabular_column_sizes = [];

            $tabular_rows = [];

            $tabular_row_cells = [];
            $tabular_row_cell = [
                'IS_HEADER' => true,
                'FIRST_CELL_ON_ROW' => true,
                'LAST_CELL_ON_ROW' => false,
                'WIDTH' => '50%',
                'VALUE' => lorem_phrase(),
            ];
            $tabular_row_cells[] = $tabular_row_cell;
            $tabular_row_cell = [
                'IS_HEADER' => true,
                'FIRST_CELL_ON_ROW' => false,
                'LAST_CELL_ON_ROW' => true,
                'WIDTH' => '50%',
                'VALUE' => lorem_phrase(),
            ];
            $tabular_row_cells[] = $tabular_row_cell;
            $tabular_row = [
                'IS_HEADER_ROW' => true,
                'FIRST_NON_HEADER_ROW' => false,
                'LAST_NON_HEADER_ROW' => false,
                'CELLS' => $tabular_row_cells,
            ];
            $tabular_rows[] = $tabular_row;

            $tabular_row_cells = [];
            $tabular_row_cell = [
                'IS_HEADER' => false,
                'FIRST_CELL_ON_ROW' => true,
                'LAST_CELL_ON_ROW' => false,
                'WIDTH' => '50%',
                'VALUE' => lorem_phrase(),
            ];
            $tabular_row_cells[] = $tabular_row_cell;
            $tabular_row_cell = [
                'IS_HEADER' => false,
                'FIRST_CELL_ON_ROW' => false,
                'LAST_CELL_ON_ROW' => true,
                'WIDTH' => '50%',
                'VALUE' => lorem_phrase(),
            ];
            $tabular_row_cells[] = $tabular_row_cell;
            $tabular_row = [
                'IS_HEADER_ROW' => false,
                'FIRST_NON_HEADER_ROW' => true,
                'LAST_NON_HEADER_ROW' => true,
                'CELLS' => $tabular_row_cells,
            ];
            $tabular_rows[] = $tabular_row;

            $out = do_template($tpl, [
                'SUMMARY' => $tabular_summary,
                'CLASS' => $tabular_class,
                'IS_COLUMNED_TABLE' => $tabular_is_columned_table,
                'IS_WIDE' => $tabular_is_wide,
                'ID' => $tabular_id,
                'COLUMN_SIZES' => $tabular_column_sizes,
                'ROWS' => $tabular_rows,
            ]);

            $tag_output->attach($out);
        }

        return lorem_globalise($tag_output, null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_subtitle() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_SUBTITLE', [
            'ID' => placeholder_codename(),
            'TITLE' => lorem_phrase(),
            'SUB' => lorem_sentence(),
            'LEVEL' => '2',
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__attachments_browser() : object
    {
        $list_cont = new Tempcode();
        foreach (placeholder_array() as $k => $v) {
            $list_cont->attach(do_lorem_template('FORM_SCREEN_INPUT_LIST_ENTRY', [
            'SELECTED' => '',
            'DISABLED' => '',
            'CLASS' => '',
            'NAME' => $v,
            'TEXT' => $v,
            ]));
        }

        $attachments = [];
        $attachments[] = [
            'FIELD_NAME' => lorem_phrase(),
            'TPL' => lorem_phrase(),
            'DESCRIPTION' => lorem_sentence(),
            'ID' => placeholder_codename(),
            'MAY_DELETE' => true,
            'DELETE_URL' => placeholder_url(),
        ];

        return lorem_globalise(do_lorem_template('ATTACHMENTS_BROWSER', [
            'LIST' => $list_cont,
            'ATTACHMENTS' => $attachments,
            'URL' => placeholder_url(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_code() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_CODE', [
            'STYLE' => lorem_phrase(),
            'TYPE' => lorem_phrase(),
            'CONTENT' => lorem_phrase(),
            'TITLE' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_tab_body() : object
    {
        $content = new Tempcode();
        $head = new Tempcode();
        foreach (placeholder_array() as $k => $v) {
            if ($k == 0) {
                $first = true;
                $last = false;
            } elseif ($k == 2) {
                $first = false;
                $last = true;
            } else {
                $first = false;
                $last = false;
            }
            $head->attach(do_lorem_template('COMCODE_TAB_HEAD', [
                'TITLE' => lorem_word() . $v,
                'FIRST' => $first,
                'LAST' => $last,
            ]));
            $content->attach(do_lorem_template('COMCODE_TAB_BODY', [
                'DEFAULT' => ($k == 0),
                'TITLE' => lorem_word() . $v,
                'CONTENT' => lorem_paragraph_html(),
            ]));
        }
        return lorem_globalise(do_lorem_template('COMCODE_TAB_CONTROLLER', [
            'HEADS' => $head,
            'CONTENT' => $content,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_samp() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_SAMP', [
            'CONTENT' => lorem_sentence(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_var() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_VAR', [
            'CONTENT' => lorem_sentence(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_teletype() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_TELETYPE', [
            'CONTENT' => lorem_sentence(),
        ]), null, '', true);
    }

    /**
     * Render a media preview through a specific template.
     *
     * @param  ID_TEXT $template Template name
     * @return Tempcode Preview
     */
    public function do_media_preview(string $template) : object
    {
        require_code('files');

        return lorem_globalise(do_lorem_template($template, [
            'URL' => placeholder_url(),
            'REMOTE_ID' => placeholder_codename(),
            'THUMB_URL' => placeholder_image_url(),
            'FILENAME' => lorem_word(),
            'MIME_TYPE' => lorem_word(),
            'CLICK_URL' => placeholder_url(),

            'WIDTH' => placeholder_number(),
            'HEIGHT' => placeholder_number(),

            'LENGTH' => placeholder_number(),

            'FILESIZE' => placeholder_number(),
            'CLEAN_FILESIZE' => clean_file_size(intval(placeholder_number())),

            'THUMB' => true,
            'FRAMED' => true,
            'WYSIWYG_EDITABLE' => true,
            'NUM_DOWNLOADS' => placeholder_number(),
            'DESCRIPTION' => '',
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__media_audio_websafe() : object
    {
        return $this->do_media_preview('MEDIA_AUDIO_WEBSAFE');
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__media_image_websafe() : object
    {
        return $this->do_media_preview('MEDIA_IMAGE_WEBSAFE');
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__media_pdf() : object
    {
        return $this->do_media_preview('MEDIA_PDF');
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__media_svg() : object
    {
        return $this->do_media_preview('MEDIA_SVG');
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__media_video_facebook() : object
    {
        return $this->do_media_preview('MEDIA_VIDEO_FACEBOOK');
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__media_video_general() : object
    {
        return $this->do_media_preview('MEDIA_VIDEO_GENERAL');
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__media_video_websafe() : object
    {
        return $this->do_media_preview('MEDIA_VIDEO_WEBSAFE');
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__media_vimeo() : object
    {
        return $this->do_media_preview('MEDIA_VIMEO');
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__media_youtube() : object
    {
        return $this->do_media_preview('MEDIA_YOUTUBE');
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__media_download() : object
    {
        return $this->do_media_preview('MEDIA_DOWNLOAD');
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__media__download_link() : object
    {
        return $this->do_media_preview('MEDIA__DOWNLOAD_LINK');
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__media_webpage_oembed_rich() : object
    {
        require_code('files');

        return lorem_globalise(do_lorem_template('MEDIA_WEBPAGE_OEMBED_RICH', [
            'TITLE' => lorem_title(),
            'HTML' => lorem_paragraph_html(),
            'WIDTH' => placeholder_number(),
            'HEIGHT' => placeholder_number(),
            'URL' => placeholder_url(),
            'REL' => null,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__media_webpage_oembed_video() : object
    {
        require_code('files');

        return lorem_globalise(do_lorem_template('MEDIA_WEBPAGE_OEMBED_VIDEO', [
            'TITLE' => lorem_title(),
            'HTML' => lorem_paragraph_html(),
            'WIDTH' => placeholder_number(),
            'HEIGHT' => placeholder_number(),
            'URL' => placeholder_url(),
            'REL' => null,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__media_webpage_semantic() : object
    {
        require_code('files');

        return lorem_globalise(do_lorem_template('MEDIA_WEBPAGE_SEMANTIC', [
            'TITLE' => lorem_title(),
            'META_TITLE' => lorem_title(),
            'DESCRIPTION' => lorem_paragraph_html(),
            'IMAGE_URL' => placeholder_image_url(),
            'URL' => placeholder_url(),
            'WIDTH' => placeholder_number(),
            'HEIGHT' => placeholder_number(),
            'REL' => null,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_member_link() : object
    {
        return lorem_globalise(do_lorem_template('COMCODE_MEMBER_LINK', [
            //'DETAILS' => lorem_sentence(),
            'MEMBER_ID' => placeholder_first_admin_id(),
            'USERNAME' => lorem_phrase(),
            'MEMBER_URL' => placeholder_url(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__comcode_media_set() : object
    {
        $media = new Tempcode();

        for ($i = 0; $i < 3; $i++) {
            $media->attach(do_lorem_template('MEDIA_IMAGE_WEBSAFE', [
                'URL' => placeholder_url(),
                'URL_SAFE' => placeholder_url(),
                'URL_DIRECT_FILESYSTEM' => placeholder_url(),
                'HOOK' => lorem_word(),
                'REMOTE_ID' => placeholder_codename(),
                'THUMB_URL' => placeholder_image_url(),
                'FILENAME' => lorem_word(),
                'MIME_TYPE' => lorem_word(),
                'CLICK_URL' => placeholder_url(),

                'WIDTH' => placeholder_number(),
                'HEIGHT' => placeholder_number(),

                'LENGTH' => placeholder_number(),

                'FILESIZE' => placeholder_number(),
                'CLEAN_FILESIZE' => clean_file_size(intval(placeholder_number())),

                'THUMB' => true,
                'FRAMED' => true,
                'WYSIWYG_EDITABLE' => true,
                'NUM_DOWNLOADS' => placeholder_number(),
                'DESCRIPTION' => '',
            ]));
        }

        return lorem_globalise(do_lorem_template('COMCODE_MEDIA_SET', [
            'MEDIA' => $media,
            'WIDTH' => placeholder_number(),
            'HEIGHT' => placeholder_number(),
        ]), null, '', true);
    }
}
