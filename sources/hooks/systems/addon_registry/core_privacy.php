<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2019

 See text/EN/licence.txt for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    core_privacy
 */

/**
 * Hook class.
 */
class Hook_addon_registry_core_privacy
{
    /**
     * Get a list of file permissions to set.
     *
     * @param  boolean $runtime Whether to include wildcards represented runtime-created chmoddable files
     * @return array File permissions to set
     */
    public function get_chmod_array($runtime = false)
    {
        return array();
    }

    /**
     * Get the version of Composr this addon is for.
     *
     * @return float Version number
     */
    public function get_version()
    {
        return cms_version_number();
    }

    /**
     * Get the description of the addon.
     *
     * @return string Description of the addon
     */
    public function get_description()
    {
        return 'Features relating to maintaining a privacy policy and complying with privacy regulations.';
    }

    /**
     * Get a list of tutorials that apply to this addon.
     *
     * @return array List of tutorials
     */
    public function get_applicable_tutorials()
    {
        return array(
            'tut_legal',
        );
    }

    /**
     * Get a mapping of dependency types.
     *
     * @return array File permissions to set
     */
    public function get_dependencies()
    {
        return array(
            'requires' => array(),
            'recommends' => array('content_privacy', 'cns_cpfs'),
            'conflicts_with' => array(),
        );
    }

    /**
     * Explicitly say which icon should be used.
     *
     * @return URLPATH Icon
     */
    public function get_default_icon()
    {
        return 'themes/default/images/icons/admin/component.svg';
    }

    /**
     * Get a list of files that belong to this addon.
     *
     * @return array List of files
     */
    public function get_file_list()
    {
        return array(
            'sources/hooks/systems/addon_registry/core_privacy.php',
            'sources/hooks/systems/cron/privacy_purging.php',
            'adminzone/pages/modules/admin_privacy.php',
            'lang/EN/privacy.ini',
            'sources/blocks/main_privacy_policy_auto.php',
            'themes/default/templates/BLOCK_MAIN_PRIVACY_POLICY_AUTO.tpl',
            'sources/hooks/systems/logs/index.html',
            'sources/hooks/systems/logs/core.php',
            'sources/hooks/systems/privacy/index.html',
            'sources_custom/hooks/systems/privacy/index.html',
            'sources/hooks/systems/config/website_activity_store_time.php',
            'sources/hooks/systems/privacy/core.php',
            'sources/privacy.php',
            'sources/hooks/systems/cron/log_purging.php',
            'sources/hooks/systems/config/days_to_keep__cron_log.php',
            'sources/hooks/systems/config/days_to_keep__debug_fs_log.php',
            'sources/hooks/systems/config/days_to_keep__error_log.php',
            'sources/hooks/systems/config/days_to_keep__mail_integration_log.php',
            'sources/hooks/systems/config/days_to_keep__permission_checks_log.php',
            'sources/hooks/systems/config/days_to_keep__queries_log.php',
            'sources/hooks/systems/config/days_to_keep__tasks_log.php',
            'themes/default/images/icons/menu/pages/privacy_policy.svg',
            'themes/default/images/icons_monochrome/menu/pages/privacy_policy.svg',
            'pages/comcode/EN/privacy.txt',
            'sources/hooks/systems/config_categories/privacy.php',
            'sources/hooks/systems/config/bottom_show_privacy_link.php',
            'sources/hooks/systems/config/call_home.php',
            'sources/hooks/systems/config/cookie_notice.php',
            'sources/hooks/systems/config/send_error_emails_ocproducts.php',
            'sources/hooks/systems/tasks/privacy_download.php',
            'sources/hooks/systems/tasks/privacy_purge.php',
        );
    }

    /**
     * Get mapping between template names and the method of this class that can render a preview of them.
     *
     * @return array The mapping
     */
    public function tpl_previews()
    {
        return array(
            'templates/BLOCK_MAIN_PRIVACY_POLICY_AUTO.tpl' => 'block_main_privacy_policy_auto_screen',
        );
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return array Array of previews, each is Tempcode. Normally we have just one preview, but occasionally it is good to test templates are flexible (e.g. if they use IF_EMPTY, we can test with and without blank data).
     */
    public function tpl_preview__block_main_privacy_policy_auto_screen()
    {
        $cookies = array();
        $cookies[] = array(
            'NAME' => lorem_word(),
            'REASON' => lorem_phrase(),
        );

        $sections = array();

        $positive = array();
        $positive[] = array(
            'EXPLANATION' => lorem_phrase(),
        );

        $general = array();
        $general[] = array(
            'ACTION' => lorem_phrase(),
            'REASON' => lorem_phrase(),
        );

        $sections[] = array(
            'HEADING' => do_lang('COOKIES'),
            'POSITIVE' => $positive,
            'GENERAL' => $general,
        );

        return array(
            lorem_globalise(do_lorem_template('BLOCK_MAIN_PRIVACY_POLICY_AUTO', array(
                'SECTIONS' => $sections,
                'COOKIES' => $cookies,
            )), null, '', true)
        );
    }
}
