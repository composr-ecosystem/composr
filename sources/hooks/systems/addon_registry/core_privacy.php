<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    core_privacy
 */

/**
 * Hook class.
 */
class Hook_addon_registry_core_privacy
{
    /**
     * Get a list of file permissions to set.
     *
     * @param  boolean $runtime Whether to include wildcards represented runtime-created chmoddable files
     * @return array File permissions to set
     */
    public function get_chmod_array(bool $runtime = false) : array
    {
        return [];
    }

    /**
     * Get the current version of this addon (usually software major, software minor, addon build).
     * Put the comment "// addon_version_auto_update" to the right of the return if you want release tools to automatically update this according to software version and find_addon_effective_md5.
     *
     * @return SHORT_TEXT Version number
     */
    public function get_version() : string
    {
        return '11.0.1'; // addon_version_auto_update e8616cc88b6e492486b1c759a5859bd9
    }

    /**
     * Get the minimum required version of the website software needed to use this addon.
     *
     * @return float Minimum required website software version
     */
    public function get_min_cms_version() : float
    {
        return 11.0;
    }

    /**
     * Get the maximum compatible version of the website software to use this addon.
     *
     * @return ?float Maximum compatible website software version (null: no maximum version currently)
     */
    public function get_max_cms_version() : ?float
    {
        return 11.9;
    }

    /**
     * Get the addon category.
     *
     * @return string The category
     */
    public function get_category() : string
    {
        return 'Architecture';
    }

    /**
     * Get the description of the addon.
     *
     * @return string Description of the addon
     */
    public function get_description() : string
    {
        return "Privacy tools to ensure GDPR compliance: member and administrator level data purging and downloading, Privacy Policy generator, automatic log purging, telemetry with the homesite (relaying errors and statistics to the core developers, requesting the site to be featured).";
    }

    /**
     * Get a list of tutorials that apply to this addon.
     *
     * @return array List of tutorials
     */
    public function get_applicable_tutorials() : array
    {
        return [
            'tut_legal',
            'tut_parental_controls',
            'tut_telemetry',
        ];
    }

    /**
     * Get a mapping of dependency types.
     *
     * @return array A structure specifying dependency information
     */
    public function get_dependencies() : array
    {
        return [
            'requires' => [],
            'recommends' => ['content_privacy', 'cns_cpfs', 'securitylogging', 'stats', 'actionlog'],
            'conflicts_with' => [],
        ];
    }

    /**
     * Explicitly say which icon should be used.
     *
     * @return URLPATH Icon
     */
    public function get_default_icon() : string
    {
        return 'themes/default/images/icons/admin/component.svg';
    }

    /**
     * Get a list of files that belong to this addon.
     *
     * @return array List of files
     */
    public function get_file_list() : array
    {
        return [
            'adminzone/pages/modules/admin_privacy.php',
            'data/keys/telemetry.json',
            'lang/EN/privacy.ini',
            'pages/comcode/EN/privacy.txt',
            'sources/blocks/main_privacy_policy_auto.php',
            'sources/hooks/systems/addon_registry/core_privacy.php',
            'sources/hooks/systems/config/bottom_show_privacy_link.php',
            'sources/hooks/systems/config/cookie_notice.php',
            'sources/hooks/systems/config/days_to_keep__banned_access_log.php',
            'sources/hooks/systems/config/days_to_keep__cron_log.php',
            'sources/hooks/systems/config/days_to_keep__debug_fs_log.php',
            'sources/hooks/systems/config/days_to_keep__endpoints_log.php',
            'sources/hooks/systems/config/days_to_keep__error_log.php',
            'sources/hooks/systems/config/days_to_keep__http_log.php',
            'sources/hooks/systems/config/days_to_keep__mail_integration_log.php',
            'sources/hooks/systems/config/days_to_keep__permission_checks_log.php',
            'sources/hooks/systems/config/days_to_keep__queries_log.php',
            'sources/hooks/systems/config/days_to_keep__require_code_log.php',
            'sources/hooks/systems/config/days_to_keep__tasks_log.php',
            'sources/hooks/systems/config/privacy_download_days.php',
            'sources/hooks/systems/config/privacy_purge_days.php',
            'sources/hooks/systems/config/privacy_upon_member_delete.php',
            'sources/hooks/systems/config/telemetry.php',
            'sources/hooks/systems/config/telemetry_may_feature.php',
            'sources/hooks/systems/config/website_activity_store_time.php',
            'sources/hooks/systems/config_categories/privacy.php',
            'sources/hooks/systems/cron/log_purging.php',
            'sources/hooks/systems/cron/privacy_purging.php',
            'sources/hooks/systems/logs/.htaccess',
            'sources/hooks/systems/logs/core.php',
            'sources/hooks/systems/logs/index.html',
            'sources/hooks/systems/privacy/.htaccess',
            'sources/hooks/systems/privacy/core.php',
            'sources/hooks/systems/privacy/index.html',
            'sources/hooks/systems/profiles_tabs_edit/data.php',
            'sources/hooks/systems/symbols/PRIVACY_POLICY_DATE.php',
            'sources/hooks/systems/tasks/privacy_download.php',
            'sources/hooks/systems/tasks/privacy_purge.php',
            'sources/privacy.php',
            'sources/telemetry.php',
            'sources_custom/hooks/systems/logs/.htaccess',
            'sources_custom/hooks/systems/logs/index.html',
            'sources_custom/hooks/systems/privacy/.htaccess',
            'sources_custom/hooks/systems/privacy/index.html',
            'themes/default/images/icons/menu/pages/privacy_policy.svg',
            'themes/default/images/icons_monochrome/menu/pages/privacy_policy.svg',
            'themes/default/templates/BLOCK_MAIN_PRIVACY_POLICY_AUTO.tpl',
        ];
    }

    /**
     * Get mapping between template names and the method of this class that can render a preview of them.
     *
     * @return array The mapping
     */
    public function tpl_previews() : array
    {
        return [
            'templates/BLOCK_MAIN_PRIVACY_POLICY_AUTO.tpl' => 'block_main_privacy_policy_auto_screen',
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__block_main_privacy_policy_auto_screen() : object
    {
        $cookies = [];
        $cookies[] = [
            'NAME' => lorem_word(),
            'REASON' => lorem_phrase(),
        ];

        $sections = [];

        $positive = [];
        $positive[] = [
            'EXPLANATION' => lorem_phrase(),
        ];

        $general = [];
        $general[] = [
            'ACTION' => lorem_phrase(),
            'REASON' => lorem_phrase(),
        ];

        $sections[] = [
            'HEADING' => do_lang('COOKIES'),
            'POSITIVE' => $positive,
            'GENERAL' => $general,
        ];

        return lorem_globalise(do_lorem_template('BLOCK_MAIN_PRIVACY_POLICY_AUTO', [
            'SECTIONS' => $sections,
            'COOKIES' => $cookies,
        ]), null, '', true);
    }
}
