<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2022

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    actionlog
 */

/**
 * Hook class.
 */
class Hook_addon_registry_actionlog
{
    /**
     * Get a list of file permissions to set.
     *
     * @param  boolean $runtime Whether to include wildcards represented runtime-created chmoddable files
     * @return array File permissions to set
     */
    public function get_chmod_array(bool $runtime = false) : array
    {
        return [];
    }

    /**
     * Get the version of Composr this addon is for.
     *
     * @return float Version number
     */
    public function get_version() : float
    {
        return cms_version_number();
    }

    /**
     * Get the addon category.
     *
     * @return string The category
     */
    public function get_category() : string
    {
        return 'Admin Utilities';
    }

    /**
     * Get the description of the addon.
     *
     * @return string Description of the addon
     */
    public function get_description() : string
    {
        return 'Audit-trail functionality.';
    }

    /**
     * Get a list of tutorials that apply to this addon.
     *
     * @return array List of tutorials
     */
    public function get_applicable_tutorials() : array
    {
        return [
            'tut_censor',
        ];
    }

    /**
     * Get a mapping of dependency types.
     *
     * @return array A structure specifying dependency information
     */
    public function get_dependencies() : array
    {
        return [
            'requires' => [],
            'recommends' => [],
            'conflicts_with' => [],
            'previously_in_addon' => ['actionlog'],
        ];
    }

    /**
     * Explicitly say which icon should be used.
     *
     * @return URLPATH Icon
     */
    public function get_default_icon() : string
    {
        return 'themes/default/images/icons/menu/adminzone/audit/actionlog.svg';
    }

    /**
     * Get a list of files that belong to this addon.
     *
     * @return array List of files
     */
    public function get_file_list() : array
    {
        return [
            'themes/default/images/icons/menu/adminzone/audit/actionlog.svg',
            'themes/default/images/icons_monochrome/menu/adminzone/audit/actionlog.svg',
            'sources/hooks/systems/notifications/actionlog.php',
            'sources/hooks/systems/realtime_rain/actionlog.php',
            'sources/hooks/systems/addon_registry/actionlog.php',
            'adminzone/pages/modules/admin_actionlog.php',
            'sources/hooks/systems/rss/admin_recent_actions.php',
            'lang/EN/actionlog.ini',
            'themes/default/javascript/actionlog.js',
            'sources/hooks/systems/actionlog/actionlog.php',
            'themes/default/templates/ACTIONLOG_FOLLOWUP_URLS.tpl',
            'sources/hooks/systems/privacy/actionlog.php',

            // Revisions
            'sources/hooks/systems/config/store_revisions.php',
            'sources/revisions_engine_files.php',
            'sources/revisions_engine_database.php',
            'adminzone/pages/modules/admin_revisions.php',
            'themes/default/images/icons/admin/revisions.svg',
            'themes/default/images/icons_monochrome/admin/revisions.svg',
            'themes/default/templates/REVISIONS_SCREEN.tpl',
            'themes/default/templates/REVISIONS_WRAP.tpl',
            'themes/default/templates/REVISIONS_DIFF_ICON.tpl',
            'themes/default/templates/REVISION_UNDO.tpl',
            'themes/default/templates/DIFF_SCREEN.tpl',

            'sources/hooks/modules/admin_stats/actionlogs.php',
        ];
    }

    /**
     * Get mapping between template names and the method of this class that can render a preview of them.
     *
     * @return array The mapping
     */
    public function tpl_previews() : array
    {
        return [
            // Revisions
            'templates/REVISIONS_WRAP.tpl' => 'administrative__show_revisions_wrap',
            'templates/REVISIONS_DIFF_ICON.tpl' => 'administrative__show_revision_diff_icon',
            'templates/REVISIONS_SCREEN.tpl' => 'revisions_screen',
            'templates/REVISION_UNDO.tpl' => 'revision_undo',
            'templates/ACTIONLOG_FOLLOWUP_URLS.tpl' => 'administrative__actionlog_followup_urls',
            'templates/DIFF_SCREEN.tpl' => 'administrative__diff_screen',
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__administrative__show_revisions_wrap() : object
    {
        return lorem_globalise(do_lorem_template('REVISIONS_WRAP', [
            'RESULTS' => placeholder_table(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__administrative__show_revision_diff_icon() : object
    {
        return lorem_globalise(do_lorem_template('REVISIONS_DIFF_ICON', [
            'MORE_RECENT_REVISION' => '',
            'REVISION' => '',
            'RENDERED_DIFF_IMMEDIATELY_AFTER' => lorem_phrase(),
            'RENDERED_DIFF_EVERYTHING_AFTER' => lorem_phrase(),
            'DIFF_IMMEDIATELY_AFTER_URL' => placeholder_url(),
            'DIFF_EVERYTHING_AFTER_URL' => placeholder_url(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__revisions_screen() : object
    {
        return lorem_globalise(do_lorem_template('REVISIONS_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'RESULTS' => lorem_phrase(),
            'INCLUDE_FILTER_FORM' => true,
            'RESOURCE_TYPES' => [lorem_phrase()],
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__administrative__diff_screen() : object
    {
        return lorem_globalise(do_lorem_template('DIFF_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'DIFF' => lorem_chunk_html(),
            'WITHOUT_WHITESPACE' => false,
            'WITHOUT_HTML_TAGS' => false,
            'UNIFIED_DIFF' => false,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__revision_undo() : object
    {
        return lorem_globalise(do_lorem_template('REVISION_UNDO', [
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__administrative__actionlog_followup_urls() : object
    {
        $urls = [];
        $urls[lorem_phrase()] = placeholder_url();
        $urls[lorem_phrase() . ' 2'] = placeholder_url();

        return lorem_globalise(do_lorem_template('ACTIONLOG_FOLLOWUP_URLS', [
            'WRITTEN_CONTEXT' => lorem_phrase(),
            'FOLLOWUP_URLS' => $urls,
        ]), null, '', true);
    }
}
