<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    core_abstract_interfaces
 */

/**
 * Hook class.
 */
class Hook_addon_registry_core_abstract_interfaces
{
    /**
     * Get a list of file permissions to set.
     *
     * @param  boolean $runtime Whether to include wildcards represented runtime-created chmoddable files
     * @return array File permissions to set
     */
    public function get_chmod_array(bool $runtime = false) : array
    {
        return [];
    }

    /**
     * Get the current version of this addon (usually software major, software minor, addon build).
     * Put the comment "// addon_version_auto_update" to the right of the return if you want release tools to automatically update this according to software version and find_addon_effective_mtime.
     *
     * @return SHORT_TEXT Version number
     */
    public function get_version() : string
    {
        return '11'; // addon_version_auto_update 1734831282
    }

    /**
     * Get the minimum required version of the website software needed to use this addon.
     *
     * @return float Minimum required website software version
     */
    public function get_min_cms_version() : float
    {
        return 11.0;
    }

    /**
     * Get the maximum compatible version of the website software to use this addon.
     *
     * @return ?float Maximum compatible website software version (null: no maximum version currently)
     */
    public function get_max_cms_version() : ?float
    {
        return 11.9;
    }

    /**
     * Get the addon category.
     *
     * @return string The category
     */
    public function get_category() : string
    {
        return 'Architecture';
    }

    /**
     * Get the description of the addon.
     *
     * @return string Description of the addon
     */
    public function get_description() : string
    {
        return 'Core rendering functionality.';
    }

    /**
     * Get a list of tutorials that apply to this addon.
     *
     * @return array List of tutorials
     */
    public function get_applicable_tutorials() : array
    {
        return [
            'tut_themes',
        ];
    }

    /**
     * Get a mapping of dependency types.
     *
     * @return array A structure specifying dependency information
     */
    public function get_dependencies() : array
    {
        return [
            'requires' => [],
            'recommends' => [],
            'conflicts_with' => [],
        ];
    }

    /**
     * Explicitly say which icon should be used.
     *
     * @return URLPATH Icon
     */
    public function get_default_icon() : string
    {
        return 'themes/default/images/icons/admin/component.svg';
    }

    /**
     * Get a list of files that belong to this addon.
     *
     * @return array List of files
     */
    public function get_file_list() : array
    {
        return [
            'adminzone/frame_test.php',
            'sources/hooks/systems/addon_registry/core_abstract_interfaces.php',
            'sources/templates_columned_table.php',
            'sources/templates_confirm_screen.php',
            'sources/templates_donext.php',
            'sources/templates_internalise_screen.php',
            'sources/templates_map_table.php',
            'sources/templates_pagination.php',
            'sources/templates_redirect_screen.php',
            'sources/templates_result_launcher.php',
            'sources/templates_results_table.php',
            'sources/templates_tooltip.php',
            'themes/default/css/do_next.css',
            'themes/default/images/icons/results/index.html',
            'themes/default/images/icons/results/sortablefield_asc.svg',
            'themes/default/images/icons/results/sortablefield_desc.svg',
            'themes/default/images/icons/status/inform.svg',
            'themes/default/images/icons/status/notice.svg',
            'themes/default/images/icons/status/warn.svg',
            'themes/default/images/icons_monochrome/results/index.html',
            'themes/default/images/icons_monochrome/results/sortablefield_asc.svg',
            'themes/default/images/icons_monochrome/results/sortablefield_desc.svg',
            'themes/default/images/icons_monochrome/status/inform.svg',
            'themes/default/images/icons_monochrome/status/notice.svg',
            'themes/default/images/icons_monochrome/status/warn.svg',
            'themes/default/images/progress_indicator/index.html',
            'themes/default/images/progress_indicator/stage_future.svg',
            'themes/default/images/progress_indicator/stage_past.svg',
            'themes/default/images/progress_indicator/stage_present.svg',
            'themes/default/templates/AJAX_PAGINATION.tpl',
            'themes/default/templates/COLUMNED_TABLE.tpl',
            'themes/default/templates/COLUMNED_TABLE_ACTION.tpl',
            'themes/default/templates/COLUMNED_TABLE_HEADER_ROW.tpl',
            'themes/default/templates/COLUMNED_TABLE_HEADER_ROW_CELL.tpl',
            'themes/default/templates/COLUMNED_TABLE_ROW.tpl',
            'themes/default/templates/COLUMNED_TABLE_ROW_CELL.tpl',
            'themes/default/templates/COLUMNED_TABLE_ROW_CELL_LINE.tpl',
            'themes/default/templates/COLUMNED_TABLE_ROW_CELL_SELECT.tpl',
            'themes/default/templates/COLUMNED_TABLE_ROW_CELL_TICK.tpl',
            'themes/default/templates/COLUMNED_TABLE_SCREEN.tpl',
            'themes/default/templates/CONFIRM_SCREEN.tpl',
            'themes/default/templates/DO_NEXT_ITEM.tpl',
            'themes/default/templates/DO_NEXT_SCREEN.tpl',
            'themes/default/templates/DO_NEXT_SECTION.tpl',
            'themes/default/templates/FATAL_SCREEN.tpl',
            'themes/default/templates/FILTER_BOX.tpl',
            'themes/default/templates/FULL_MESSAGE_SCREEN.tpl',
            'themes/default/templates/INDEX_SCREEN.tpl',
            'themes/default/templates/INDEX_SCREEN_ENTRY.tpl',
            'themes/default/templates/INDEX_SCREEN_FANCIER_ENTRY.tpl',
            'themes/default/templates/INDEX_SCREEN_FANCIER_SCREEN.tpl',
            'themes/default/templates/INFORM_SCREEN.tpl',
            'themes/default/templates/INLINE_WIP_MESSAGE.tpl',
            'themes/default/templates/INTERNALISED_AJAX_SCREEN.tpl',
            'themes/default/templates/MAP_TABLE.tpl',
            'themes/default/templates/MAP_TABLE_FIELD.tpl',
            'themes/default/templates/MAP_TABLE_SCREEN.tpl',
            'themes/default/templates/MEMBER_TOOLTIP.tpl',
            'themes/default/templates/MISSING_SCREEN.tpl',
            'themes/default/templates/PAGINATION_CONTINUE.tpl',
            'themes/default/templates/PAGINATION_CONTINUE_FIRST.tpl',
            'themes/default/templates/PAGINATION_CONTINUE_LAST.tpl',
            'themes/default/templates/PAGINATION_LIST_PAGES.tpl',
            'themes/default/templates/PAGINATION_NEXT.tpl',
            'themes/default/templates/PAGINATION_NEXT_LINK.tpl',
            'themes/default/templates/PAGINATION_PAGE_NUMBER.tpl',
            'themes/default/templates/PAGINATION_PAGE_NUMBER_LINK.tpl',
            'themes/default/templates/PAGINATION_PER_PAGE.tpl',
            'themes/default/templates/PAGINATION_PER_PAGE_OPTION.tpl',
            'themes/default/templates/PAGINATION_PREVIOUS.tpl',
            'themes/default/templates/PAGINATION_PREVIOUS_LINK.tpl',
            'themes/default/templates/PAGINATION_SCREEN.tpl',
            'themes/default/templates/PAGINATION_SORT.tpl',
            'themes/default/templates/PAGINATION_SORTER.tpl',
            'themes/default/templates/PAGINATION_WRAP.tpl',
            'themes/default/templates/QUESTION_UI_BUTTONS.tpl',
            'themes/default/templates/REDIRECT_SCREEN.tpl',
            'themes/default/templates/RESULTS_LAUNCHER_CONTINUE.tpl',
            'themes/default/templates/RESULTS_LAUNCHER_PAGE_NUMBER_LINK.tpl',
            'themes/default/templates/RESULTS_LAUNCHER_WRAP.tpl',
            'themes/default/templates/RESULTS_TABLE.tpl',
            'themes/default/templates/RESULTS_TABLE_ENTRY.tpl',
            'themes/default/templates/RESULTS_TABLE_FIELD.tpl',
            'themes/default/templates/RESULTS_TABLE_FIELD_FOOTER.tpl',
            'themes/default/templates/RESULTS_TABLE_FIELD_TITLE.tpl',
            'themes/default/templates/RESULTS_TABLE_FIELD_TITLE_SORTABLE.tpl',
            'themes/default/templates/RESULTS_TABLE_MEMBER_CELL.tpl',
            'themes/default/templates/RESULTS_TABLE_SCREEN.tpl',
            'themes/default/templates/RESULTS_TABLE_TICK.tpl',
            'themes/default/templates/SIMPLE_PREVIEW_BOX.tpl',
            'themes/default/templates/STACK_TRACE.tpl',
            'themes/default/templates/WARNING_BOX.tpl',
            'themes/default/templates/WARN_SCREEN.tpl',
        ];
    }

    /**
     * Get mapping between template names and the method of this class that can render a preview of them.
     *
     * @return array The mapping
     */
    public function tpl_previews() : array
    {
        return [
            'templates/RESULTS_TABLE_TICK.tpl' => 'result_table_screen',
            'templates/REDIRECT_SCREEN.tpl' => 'redirect_screen',
            'templates/CONFIRM_SCREEN.tpl' => 'confirm_screen',
            'templates/RESULTS_TABLE_SCREEN.tpl' => 'result_table_screen',
            'templates/FILTER_BOX.tpl' => 'result_table_screen',
            'templates/COLUMNED_TABLE_ACTION.tpl' => 'full_table_screen',
            'templates/COLUMNED_TABLE.tpl' => 'full_table_screen',
            'templates/INDEX_SCREEN_ENTRY.tpl' => 'index_screen',
            'templates/INDEX_SCREEN.tpl' => 'index_screen',
            'templates/INDEX_SCREEN_FANCIER_ENTRY.tpl' => 'index_screen_fancier_screen',
            'templates/INDEX_SCREEN_FANCIER_SCREEN.tpl' => 'index_screen_fancier_screen',
            'templates/MAP_TABLE.tpl' => 'map_table',
            'templates/MAP_TABLE_SCREEN.tpl' => 'map_table_screen',
            'templates/WARNING_BOX.tpl' => 'warning_box',
            'templates/PAGINATION_SORTER.tpl' => 'result_table_screen',
            'templates/PAGINATION_SORT.tpl' => 'result_table_screen',
            'templates/RESULTS_TABLE_FIELD.tpl' => 'result_table_screen',
            'templates/RESULTS_TABLE_ENTRY.tpl' => 'result_table_screen',
            'templates/RESULTS_TABLE_FIELD_TITLE_SORTABLE.tpl' => 'result_table_screen',
            'templates/RESULTS_TABLE_FIELD_TITLE.tpl' => 'result_table_screen',
            'templates/RESULTS_TABLE_FIELD_FOOTER.tpl' => 'result_table_screen',
            'templates/COLUMNED_TABLE_HEADER_ROW_CELL.tpl' => 'full_table_screen',
            'templates/COLUMNED_TABLE_HEADER_ROW.tpl' => 'full_table_screen',
            'templates/COLUMNED_TABLE_ROW_CELL.tpl' => 'full_table_screen',
            'templates/COLUMNED_TABLE_ROW.tpl' => 'full_table_screen',
            'templates/RESULTS_LAUNCHER_PAGE_NUMBER_LINK.tpl' => 'result_launcher_screen',
            'templates/RESULTS_LAUNCHER_CONTINUE.tpl' => 'result_launcher_screen',
            'templates/RESULTS_LAUNCHER_WRAP.tpl' => 'result_launcher_screen',
            'templates/SIMPLE_PREVIEW_BOX.tpl' => 'simple_preview_box',
            'templates/FATAL_SCREEN.tpl' => 'administrative__fatal_screen',
            'templates/STACK_TRACE.tpl' => 'administrative__stack_trace',
            'templates/INLINE_WIP_MESSAGE.tpl' => 'inline_wip_message',
            'templates/MISSING_SCREEN.tpl' => 'missing_screen',
            'templates/INFORM_SCREEN.tpl' => 'inform_screen',
            'templates/PAGINATION_PER_PAGE_OPTION.tpl' => 'result_table_screen',
            'templates/PAGINATION_PER_PAGE.tpl' => 'result_table_screen',
            'templates/PAGINATION_CONTINUE_FIRST.tpl' => 'result_table_screen',
            'templates/PAGINATION_PREVIOUS_LINK.tpl' => 'result_table_screen',
            'templates/PAGINATION_PREVIOUS.tpl' => 'result_table_screen_2',
            'templates/PAGINATION_CONTINUE.tpl' => 'result_table_screen_2',
            'templates/PAGINATION_PAGE_NUMBER.tpl' => 'result_table_screen',
            'templates/PAGINATION_PAGE_NUMBER_LINK.tpl' => 'result_table_screen',
            'templates/PAGINATION_NEXT_LINK.tpl' => 'result_table_screen',
            'templates/PAGINATION_NEXT.tpl' => 'result_table_screen_2',
            'templates/PAGINATION_CONTINUE_LAST.tpl' => 'result_table_screen',
            'templates/PAGINATION_LIST_PAGES.tpl' => 'result_table_screen',
            'templates/PAGINATION_WRAP.tpl' => 'result_table_screen',
            'templates/MAP_TABLE_FIELD.tpl' => 'map_table',
            'templates/INTERNALISED_AJAX_SCREEN.tpl' => 'internalised_ajax_screen',
            'templates/WARN_SCREEN.tpl' => 'warn_screen',
            'templates/DO_NEXT_SCREEN.tpl' => 'administrative__do_next_screen',
            'templates/DO_NEXT_ITEM.tpl' => 'administrative__do_next_screen',
            'templates/DO_NEXT_SECTION.tpl' => 'administrative__do_next_screen',
            'templates/QUESTION_UI_BUTTONS.tpl' => 'question_ui_buttons',
            'templates/PAGINATION_SCREEN.tpl' => 'pagination_screen',
            'templates/FULL_MESSAGE_SCREEN.tpl' => 'full_message_screen',
            'templates/RESULTS_TABLE.tpl' => 'result_table_screen',
            'templates/MEMBER_TOOLTIP.tpl' => 'member_tooltip',
            'templates/COLUMNED_TABLE_ROW_CELL_SELECT.tpl' => 'full_table_screen',
            'templates/COLUMNED_TABLE_ROW_CELL_TICK.tpl' => 'full_table_screen',
            'templates/COLUMNED_TABLE_ROW_CELL_LINE.tpl' => 'full_table_screen',
            'templates/COLUMNED_TABLE_SCREEN.tpl' => 'administrative__columned_table_screen',
        ];
    }

    /**
     * Get previews that do not map to any specific template, or otherwise would not be returnable from tpl_previews.
     *
     * @return array The previews
     */
    public function tpl_previews_extra() : array
    {
        return ['iframe', 'overlay'];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__redirect_screen() : object
    {
        return lorem_globalise(do_lorem_template('REDIRECT_SCREEN', [
            'URL' => placeholder_url(),
            'TITLE' => lorem_screen_title(),
            'TEXT' => lorem_sentence(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__confirm_screen() : object
    {
        return lorem_globalise(do_lorem_template('CONFIRM_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'URL' => placeholder_url(),
            'BACK_URL' => placeholder_url(),
            'PREVIEW' => lorem_phrase(),
            'FIELDS' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__index_screen() : object
    {
        $entry = new Tempcode();

        foreach (placeholder_array() as $value) {
            $entry->attach(do_lorem_template('INDEX_SCREEN_ENTRY', [
                'NAME' => lorem_word(),
                'URL' => placeholder_url(),
                'DISPLAY_STRING' => lorem_phrase(),
            ]));
        }

        return lorem_globalise(do_lorem_template('INDEX_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'PRE' => lorem_phrase(),
            'POST' => lorem_phrase(),
            'CONTENT' => $entry,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__index_screen_fancier_screen() : object
    {
        $entries = new Tempcode();
        foreach (placeholder_array() as $value) {
            $entries->attach(do_lorem_template('INDEX_SCREEN_FANCIER_ENTRY', [
                'TITLE' => lorem_phrase(),
                'URL' => placeholder_url(),
                'NAME' => $value,
                'DESCRIPTION' => lorem_paragraph_html(),
                'COUNT' => placeholder_number(),
            ]));
        }

        return lorem_globalise(do_lorem_template('INDEX_SCREEN_FANCIER_SCREEN', [
            'CONTENT' => $entries,
            'TITLE' => lorem_screen_title(),
            'POST' => lorem_phrase(),
            'PRE' => lorem_phrase(),
            'ADD_URL' => placeholder_url(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__map_table() : object
    {
        $fields = new Tempcode();
        $fields->attach(do_lorem_template('MAP_TABLE_FIELD', [
            'NAME' => lorem_word(),
            'VALUE' => lorem_phrase(),
            'ABBR' => null,
        ]));

        return lorem_globalise(do_lorem_template('MAP_TABLE', [
            'FIELDS' => $fields,
            'RESPONSIVE' => true,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__map_table_screen() : object
    {
        $fields = do_lorem_template('MAP_TABLE_FIELD', [
            'ABBR' => lorem_phrase(),
            'NAME' => lorem_word(),
            'VALUE' => lorem_phrase(),
        ]);

        return lorem_globalise(do_lorem_template('MAP_TABLE_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'FIELDS' => $fields,
            'RESPONSIVE' => true,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__warning_box() : object
    {
        return lorem_globalise(do_lorem_template('WARNING_BOX', [
            'WARNING' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__simple_preview_box() : object
    {
        return lorem_globalise(do_lorem_template('SIMPLE_PREVIEW_BOX', [
            'SUMMARY' => lorem_paragraph_html(),
            'URL' => placeholder_url(),
            'RESOURCE_TYPE' => '',
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__administrative__fatal_screen() : object
    {
        return lorem_globalise(do_lorem_template('FATAL_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'TEXT' => lorem_phrase(),
            'TRACE' => lorem_phrase(),
            'MAY_SEE_TRACE' => true,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__administrative__stack_trace() : object
    {
        $trace = [];
        foreach (placeholder_array() as $value) {
            $traces = [];
            foreach (placeholder_array() as $key => $value1) {
                $traces[] = [
                    'LINE' => $value1,
                    'FILE' => lorem_phrase(),
                    'KEY' => cms_ucfirst_ascii($value1),
                    'VALUE' => lorem_sentence(),
                ];
            }
            $trace[] = [
                'TRACES' => $traces,
            ];
        }

        return lorem_globalise(do_lorem_template('STACK_TRACE', [
            'TRACE' => $trace,
            'POST' => placeholder_array(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__inline_wip_message() : object
    {
        return lorem_globalise(do_lorem_template('INLINE_WIP_MESSAGE', [
            'MESSAGE' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__missing_screen() : object
    {
        return lorem_globalise(do_lorem_template('MISSING_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'ADD_URL' => placeholder_url(),
            'PAGE' => lorem_phrase(),
            'DID_MEAN_ZONE' => lorem_word(),
            'DID_MEAN_PAGE' => lorem_word(),
            'DID_MEAN_ZONE_TITLE' => lorem_phrase(),
            'ADD_REDIRECT_URL' => placeholder_url(),
            'SKIP_SITEMAP' => true,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__inform_screen() : object
    {
        return lorem_globalise(do_lorem_template('INFORM_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'TEXT' => lorem_sentence(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__internalised_ajax_screen() : object
    {
        return lorem_globalise(do_lorem_template('INTERNALISED_AJAX_SCREEN', [
            'SCREEN_CONTENT' => lorem_paragraph_html(),
            'REFRESH_IF_CHANGED' => lorem_phrase(),
            'CHANGE_DETECTION_URL' => placeholder_url(),
            'REFRESH_TIME' => placeholder_date_raw(),
            'URL' => placeholder_url(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__warn_screen() : object
    {
        return lorem_globalise(do_lorem_template('WARN_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'WEBSERVICE_RESULT' => lorem_phrase(),
            'TEXT' => lorem_sentence(),
            'PROVIDE_BACK' => placeholder_codename(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__administrative__do_next_screen() : object
    {
        require_lang('do_next');
        $list = [
            [
                'menu/welcome',
                [
                    null,
                    [],
                    '',
                ],
            ],
            [
                'menu/cms/cms',
                [
                    null,
                    [],
                    '',
                ],
            ],
            [
                'menu/adminzone/adminzone',
                [
                    null,
                    [],
                    '',
                ],
            ]
        ];

        $sections = new Tempcode();
        $next_items = new Tempcode();
        $i = 0;
        foreach ($list as $_option) {
            $option = $_option[0];
            $next_items->attach(do_lorem_template('DO_NEXT_ITEM', [
                'I' => strval($i),
                'TARGET' => null,
                'PICTURE' => $option,
                'DESCRIPTION' => lorem_phrase(),
                'URL' => placeholder_url(),
                'NUM_SIBLINGS' => strval(count($list)),
                'DOC' => '',
                'WARNING' => '',
                'AUTO_ADD' => null,
            ]));
            $i++;
        }
        $do_next_section = do_lorem_template('DO_NEXT_SECTION', [
            'I' => placeholder_number(),
            'TITLE' => lorem_phrase(),
            'CONTENT' => $next_items,
        ]);
        $sections->attach($do_next_section);

        return lorem_globalise(do_lorem_template('DO_NEXT_SCREEN', [
            'INTRO' => lorem_phrase_html(),
            'QUESTION' => lorem_phrase(),
            'TITLE' => lorem_screen_title(),
            'SECTIONS' => $sections,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__question_ui_buttons() : object
    {
        return lorem_globalise(do_lorem_template('QUESTION_UI_BUTTONS', [
            'BUTTONS' => [lorem_word()],
            'IMAGES' => ['admin/add'],
            'TITLE' => lorem_phrase(),
            'MESSAGE' => lorem_phrase(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__pagination_screen() : object
    {
        return lorem_globalise(do_lorem_template('PAGINATION_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'CONTENT' => lorem_phrase(),
            'PAGINATION' => placeholder_pagination(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__full_message_screen() : object
    {
        return lorem_globalise(do_lorem_template('FULL_MESSAGE_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'TEXT' => lorem_sentence(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__full_table_screen() : object
    {
        // Header...

        $values = [
            lorem_word(),
            lorem_word_2(),
            lorem_word(),
            lorem_word_2(),
            lorem_word(),
            lorem_word(),
            lorem_word(),
            lorem_word()
        ];
        $cells = new Tempcode();
        foreach ($values as $value) {
            $cells->attach(do_lorem_template('COLUMNED_TABLE_HEADER_ROW_CELL', [
                'VALUE' => $value,
            ]));
        }

        $header_row = do_lorem_template('COLUMNED_TABLE_HEADER_ROW', [
            'CELLS' => $cells,
        ]);


        // Rows...

        $table_rows = new Tempcode();
        foreach (placeholder_array() as $row) {
            $actions = do_lorem_template('COLUMNED_TABLE_ACTION', [
                'GET' => true,
                'HIDDEN' => '',
                'ACTION_TITLE' => lorem_phrase(),
                'ICON' => 'admin/delete',
                'NAME' => lorem_phrase(),
                'URL' => placeholder_url(),
                'CONFIRM' => false,
                'NEW_WINDOW' => true,
            ]);

            $line = do_lorem_template('COLUMNED_TABLE_ROW_CELL_LINE', [
                'LABEL' => lorem_phrase(),
                'NAME' => placeholder_random_id(),
                'VALUE' => lorem_phrase(),
            ]);

            $select = do_lorem_template('COLUMNED_TABLE_ROW_CELL_SELECT', [
                'LABEL' => lorem_phrase(),
                'NAME' => placeholder_random_id(),
                'LIST' => placeholder_options(),
            ]);

            $tick = do_lorem_template('COLUMNED_TABLE_ROW_CELL_TICK', [
                'LABEL' => lorem_phrase(),
                'NAME' => placeholder_random_id(),
                'VALUE' => lorem_phrase(),
                'TICKED' => true,
            ]);

            $values = [
                protect_from_escaping(escape_html(lorem_sentence())),
                protect_from_escaping(do_lorem_template('HYPERLINK', [
                    'REL' => null,
                    'POST_DATA' => null,
                    'ACCESSKEY' => null,
                    'NEW_WINDOW' => false,
                    'TITLE' => lorem_phrase(),
                    'URL' => placeholder_url(),
                    'CAPTION' => escape_html(lorem_phrase()),
                ])),
                protect_from_escaping(do_lorem_template('HYPERLINK', [
                    'REL' => null,
                    'POST_DATA' => null,
                    'ACCESSKEY' => null,
                    'NEW_WINDOW' => false,
                    'TITLE' => lorem_phrase(),
                    'URL' => placeholder_url(),
                    'CAPTION' => escape_html(lorem_sentence()),
                ])),
                protect_from_escaping(escape_html(placeholder_date())),
                $line,
                $select,
                $tick,
                $actions,
            ];
            $cells = new Tempcode();
            foreach ($values as $value) {
                $cells->attach(do_lorem_template('COLUMNED_TABLE_ROW_CELL', [
                    'VALUE' => $value,
                ]));
            }

            $tpl = do_lorem_template('COLUMNED_TABLE_ROW', [
                'CELLS' => $cells,
            ]);
            $table_rows->attach($tpl);
        }

        // ---

        $field_rows = do_lorem_template('COLUMNED_TABLE', [
            'HEADER_ROW' => $header_row,
            'ROWS' => $table_rows,
            'NONRESPONSIVE' => false,
        ]);

        return lorem_globalise(do_lorem_template('FORM_GROUPED', [
            'TEXT' => '',
            'URL' => '#',
            'FIELD_GROUPS' => $field_rows,
            'SUBMIT_ICON' => 'buttons/proceed',
            'SUBMIT_NAME' => lorem_word_2(),
            'SUBMIT_BUTTON_CLASS' => null,
            'SUPPORT_AUTOSAVE' => null,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__result_table_screen() : object
    {
        $array = placeholder_array();
        $cells = new Tempcode();
        foreach ($array as $k => $v) {
            if ($k == 1) {
                $cells->attach(do_lorem_template('RESULTS_TABLE_FIELD_TITLE', [
                    'VALUE' => $v,
                ]));
            } else {
                $cells->attach(do_lorem_template('RESULTS_TABLE_FIELD_TITLE_SORTABLE', [
                    'VALUE' => $v,
                    'SORT_URL_DESC' => placeholder_url(),
                    'SORT_DESC_SELECTED' => true,
                    'SORT_URL_ASC' => placeholder_url(),
                    'SORT_ASC_SELECTED' => false,
                    'HASH' => null,
                ]));
            }
        }
        $header_row = $cells;

        $result_entries = new Tempcode();
        foreach ($array as $k1 => $v) {
            $cells = new Tempcode();
            foreach ($array as $k2 => $v2) {
                $tick = do_lorem_template('RESULTS_TABLE_TICK', [
                    'ID' => placeholder_codename() . '_' . strval($k1) . '_' . strval($k2),
                ]);
                $cells->attach(do_lorem_template('RESULTS_TABLE_FIELD', [
                    'VALUE' => $tick,
                ]));
            }
            $result_entries->attach(do_lorem_template('RESULTS_TABLE_ENTRY', [
                'VALUES' => $cells,
            ]));
        }
        $footer_row = do_lorem_template('RESULTS_TABLE_FIELD_FOOTER', [
            'VALUE' => lorem_phrase(),
            'COLSPAN' => strval(2),
        ]);

        $selectors = new Tempcode();
        $sortable = null;
        foreach ($array as $k => $v) {
            $selectors->attach(do_lorem_template('PAGINATION_SORTER', [
                'SELECTED' => '',
                'NAME' => $v,
                'VALUE' => $v,
            ]));
        }
        $sort = do_lorem_template('PAGINATION_SORT', [
            'HIDDEN' => '',
            'SORT' => lorem_word(),
            'URL' => placeholder_url(),
            'SELECTORS' => $selectors,
        ]);

        $results_table = do_lorem_template('RESULTS_TABLE', [
            'WIDTHS' => [],
            'TEXT_ID' => placeholder_codename(),
            'HEADER_ROW' => $header_row,
            'RESULT_ENTRIES' => $result_entries,
            'FOOTER_ROW' => $footer_row,
            'MESSAGE' => '',
            'SORT' => $sort,
            'PAGINATION' => placeholder_pagination(),
            'NONRESPONSIVE' => false
        ]);

        require_code('form_templates');

        push_field_encapsulation(FIELD_ENCAPSULATION_RAW);

        $filters_row_a = [
            [
                'PARAM' => 'placeholder_a',
                'LABEL' => lorem_word(),
                'FIELD' => do_lorem_template('FORM_SCREEN_INPUT_LINE', [
                    '_GUID' => '02789c9af25cbc971e86bfcc0ad322d5',
                    'PLACEHOLDER' => null,
                    'MAXLENGTH' => strval(16),
                    'TABINDEX' => placeholder_number(),
                    'REQUIRED' => false,
                    'NAME' => 'placeholder_a',
                    'DEFAULT' => '',
                    'TYPE' => 'text',
                    'PATTERN' => null,
                    'SIZE' => strval(16),
                    'AUTOCOMPLETE' => null,
                ]),
            ],
        ];
        $filters_row_b = [
            [
                'PARAM' => 'placeholder_b',
                'LABEL' => lorem_word(),
                'FIELD' => do_lorem_template('FORM_SCREEN_INPUT_DATE', [
                    '_GUID' => '5ace58dd0f540f70fb3bd440fb02a430',
                    'REQUIRED' => false,
                    'TABINDEX' => placeholder_number(),
                    'NAME' => 'placeholder_b',
                    'TYPE' => 'datetime',

                    'YEAR' => '',
                    'MONTH' => '',
                    'DAY' => '',
                    'HOUR' => '',
                    'MINUTE' => '',

                    'MIN_DATE_DAY' => '',
                    'MIN_DATE_MONTH' => '',
                    'MIN_DATE_YEAR' => '',
                    'MAX_DATE_DAY' => '',
                    'MAX_DATE_MONTH' => '',
                    'MAX_DATE_YEAR' => '',

                    'AUTOCOMPLETE' => null,
                    'READ_ONLY' => strval(0)
                ]),
            ],
        ];

        pop_field_encapsulation();

        return lorem_globalise(do_lorem_template('RESULTS_TABLE_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'RESULTS_TABLE' => $results_table,
            'FORM' => placeholder_button(),
            'FILTERS_ROW_A' => $filters_row_a,
            'FILTERS_ROW_B' => $filters_row_b,
            'FILTERS_HIDDEN' => new Tempcode(),
            'URL' => placeholder_url(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__result_table_screen_2() : object
    {
        $array = placeholder_array();
        $cells = new Tempcode();
        foreach ($array as $k => $v) {
            if ($k == 1) {
                $cells->attach(do_lorem_template('RESULTS_TABLE_FIELD_TITLE', [
                    'VALUE' => $v,
                ]));
            } else {
                $cells->attach(do_lorem_template('RESULTS_TABLE_FIELD_TITLE_SORTABLE', [
                    'VALUE' => $v,
                    'SORT_URL_DESC' => placeholder_url(),
                    'SORT_DESC_SELECTED' => true,
                    'SORT_URL_ASC' => placeholder_url(),
                    'SORT_ASC_SELECTED' => false,
                    'HASH' => null,
                ]));
            }
        }
        $header_row = $cells;

        $result_entries = new Tempcode();
        foreach ($array as $k1 => $v) {
            $cells = new Tempcode();
            foreach ($array as $k2 => $v2) {
                $tick = do_lorem_template('RESULTS_TABLE_TICK', [
                    'ID' => placeholder_codename() . '_' . strval($k1) . '_' . strval($k2),
                ]);
                $cells->attach(do_lorem_template('RESULTS_TABLE_FIELD', [
                    'VALUE' => $tick,
                ]));
            }
            $result_entries->attach(do_lorem_template('RESULTS_TABLE_ENTRY', [
                'VALUES' => $cells,
            ]));
        }

        $selectors = new Tempcode();
        $sortable = null;
        foreach ($array as $k => $v) {
            $selectors->attach(do_lorem_template('PAGINATION_SORTER', [
                'SELECTED' => '',
                'NAME' => $v,
                'VALUE' => $v,
            ]));
        }
        $sort = do_lorem_template('PAGINATION_SORT', [
            'HIDDEN' => '',
            'SORT' => lorem_word(),
            'URL' => placeholder_url(),
            'SELECTORS' => $selectors,
        ]);

        $results_table = do_lorem_template('RESULTS_TABLE', [
            'WIDTHS' => [],
            'TEXT_ID' => placeholder_codename(),
            'HEADER_ROW' => $header_row,
            'RESULT_ENTRIES' => $result_entries,
            'FOOTER_ROW' => null,
            'MESSAGE' => '',
            'SORT' => $sort,
            'PAGINATION' => placeholder_pagination(),
            'NONRESPONSIVE' => false,
        ]);

        require_code('form_templates');

        push_field_encapsulation(FIELD_ENCAPSULATION_RAW);

        $filters_row_a = [
            [
                'PARAM' => 'placeholder_a',
                'LABEL' => lorem_word(),
                'FIELD' => do_lorem_template('FORM_SCREEN_INPUT_LINE', [
                    '_GUID' => '02789c9af25cbc971e86bfcc0ad322d5',
                    'PLACEHOLDER' => null,
                    'MAXLENGTH' => strval(16),
                    'TABINDEX' => placeholder_number(),
                    'REQUIRED' => false,
                    'NAME' => 'placeholder_a',
                    'DEFAULT' => '',
                    'TYPE' => 'text',
                    'PATTERN' => null,
                    'SIZE' => strval(16),
                    'AUTOCOMPLETE' => null,
                ]),
            ],
        ];
        $filters_row_b = [
            [
                'PARAM' => 'placeholder_b',
                'LABEL' => lorem_word(),
                'FIELD' => do_lorem_template('FORM_SCREEN_INPUT_DATE', [
                    '_GUID' => '5ace58dd0f540f70fb3bd440fb02a430',
                    'REQUIRED' => false,
                    'TABINDEX' => placeholder_number(),
                    'NAME' => 'placeholder_b',
                    'TYPE' => 'datetime',

                    'YEAR' => '',
                    'MONTH' => '',
                    'DAY' => '',
                    'HOUR' => '',
                    'MINUTE' => '',

                    'MIN_DATE_DAY' => '',
                    'MIN_DATE_MONTH' => '',
                    'MIN_DATE_YEAR' => '',
                    'MAX_DATE_DAY' => '',
                    'MAX_DATE_MONTH' => '',
                    'MAX_DATE_YEAR' => '',

                    'AUTOCOMPLETE' => null,
                    'READ_ONLY' => strval(0)
                ]),
            ],
        ];

        pop_field_encapsulation();

        return lorem_globalise(do_lorem_template('RESULTS_TABLE_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'RESULTS_TABLE' => $results_table,
            'FORM' => placeholder_button(),
            'FILTERS_ROW_A' => $filters_row_a,
            'FILTERS_ROW_B' => $filters_row_b,
            'FILTERS_HIDDEN' => new Tempcode(),
            'URL' => placeholder_url(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__result_launcher_screen() : object
    {
        require_lang('cns');
        $part = new Tempcode();
        foreach (placeholder_array() as $k => $v) {
            $part->attach(do_lorem_template('RESULTS_LAUNCHER_PAGE_NUMBER_LINK', [
                'TITLE' => lorem_phrase(),
                'URL' => placeholder_url(),
                'P' => placeholder_number(),
            ]));
            $part->attach(do_lorem_template('RESULTS_LAUNCHER_CONTINUE', [
                'TITLE' => lorem_phrase(),
                'MAX' => placeholder_number(),
                '_NUM_PAGES' => placeholder_number(),
                'NUM_PAGES' => placeholder_number(),
                'URL_STUB' => placeholder_url(),
            ]));
        }

        return lorem_globalise(do_lorem_template('RESULTS_LAUNCHER_WRAP', [
            'PART' => $part,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__administrative__columned_table_screen() : object
    {
        return lorem_globalise(do_lorem_template('COLUMNED_TABLE_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'TABLE' => placeholder_table(),
            'SUBMIT_ICON' => 'buttons/proceed',
            'SUBMIT_NAME' => lorem_word(),
            'POST_URL' => placeholder_url(),
            'JS_FUNCTION_CALLS' => [],
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__member_tooltip() : object
    {
        return lorem_globalise(do_lorem_template('MEMBER_TOOLTIP', [
            'SUBMITTER' => placeholder_numeric_id(),
        ]), null, '', true);
    }

    // Special ones that loop back to a frame...

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__iframe() : object
    {
        global $THEME_BEING_TESTED;
        $theme = isset($THEME_BEING_TESTED) ? $THEME_BEING_TESTED : $GLOBALS['FORUM_DRIVER']->get_theme();

        $keep = symbol_tempcode('KEEP');

        $url = find_script('frame_test') . '?keep_theme=' . urlencode($theme) . $keep->evaluate();

        require_code('tempcode_compiler');
        $tpl = template_to_tempcode('<iframe width="305px" height="305px" title="{!PREVIEW}" src="' . escape_html($url) . '">{!PREVIEW}</iframe>');

        return lorem_globalise($tpl, null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__overlay() : object
    {
        global $THEME_BEING_TESTED;
        $theme = isset($THEME_BEING_TESTED) ? $THEME_BEING_TESTED : $GLOBALS['FORUM_DRIVER']->get_theme();

        $keep = symbol_tempcode('KEEP');

        $url = find_script('frame_test') . '?keep_theme=' . urlencode($theme) . $keep->evaluate();

        require_code('tempcode_compiler');
        $tpl = template_to_tempcode('
            <button id="button" class="btn btn-primary btn-scri buttons-proceed" type="submit" title="Click me">{+START,INCLUDE,ICON}NAME=buttons/proceed{+END} Click me</button>

            <script {$CSP_NONCE_HTML}>
                document.getElementById("button").addEventListener("click", function () {
                    var url = "' . str_replace('</', '<\/', addslashes($url)) . '";
                    $cms.ui.open(url, "overlay", "width=400,height=400,status=no,resizable=yes,scrollbars=no");
                });
            </script>
        ');

        return lorem_globalise($tpl, null, '', true);
    }
}
