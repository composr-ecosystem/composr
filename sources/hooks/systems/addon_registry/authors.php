<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    authors
 */

/**
 * Hook class.
 */
class Hook_addon_registry_authors
{
    /**
     * Get a list of file permissions to set.
     *
     * @param  boolean $runtime Whether to include wildcards represented runtime-created chmoddable files
     * @return array File permissions to set
     */
    public function get_chmod_array(bool $runtime = false) : array
    {
        return [];
    }

    /**
     * Get the current version of this addon (usually software major, software minor, addon build).
     * Put the comment "// addon_version_auto_update" to the right of the return if you want release tools to automatically update this according to software version and find_addon_effective_md5.
     *
     * @return SHORT_TEXT Version number
     */
    public function get_version() : string
    {
        return '11.0.3'; // addon_version_auto_update 9f8594d67c566cd7679a6cb980cba27b
    }

    /**
     * Get the minimum required version of the website software needed to use this addon.
     *
     * @return float Minimum required website software version
     */
    public function get_min_cms_version() : float
    {
        return 11.0;
    }

    /**
     * Get the maximum compatible version of the website software to use this addon.
     *
     * @return ?float Maximum compatible website software version (null: no maximum version currently)
     */
    public function get_max_cms_version() : ?float
    {
        return 11.9;
    }

    /**
     * Get the addon category.
     *
     * @return string The category
     */
    public function get_category() : string
    {
        return 'Information Display';
    }

    /**
     * Get the description of the addon.
     *
     * @return string Description of the addon
     */
    public function get_description() : string
    {
        return 'Certain kinds of content can have authors instead of submitters (e.g. \'Core Development Team\'). The authors may be independently described and searched under.';
    }

    /**
     * Get a list of tutorials that apply to this addon.
     *
     * @return array List of tutorials
     */
    public function get_applicable_tutorials() : array
    {
        return [
            'tut_authors',
            'tut_users',
        ];
    }

    /**
     * Get a mapping of dependency types.
     *
     * @return array A structure specifying dependency information
     */
    public function get_dependencies() : array
    {
        return [
            'requires' => [],
            'recommends' => [],
            'conflicts_with' => [],
        ];
    }

    /**
     * Explicitly say which icon should be used.
     *
     * @return URLPATH Icon
     */
    public function get_default_icon() : string
    {
        return 'themes/default/images/icons/menu/rich_content/authors.svg';
    }

    /**
     * Get a list of files that belong to this addon.
     *
     * @return array List of files
     */
    public function get_file_list() : array
    {
        return [
            'cms/pages/modules/cms_authors.php',
            'data/authors.php',
            'lang/EN/authors.ini',
            'site/pages/modules/authors.php',
            'sources/authors.php',
            'sources/hooks/systems/actionlog/authors.php',
            'sources/hooks/systems/addon_registry/authors.php',
            'sources/hooks/systems/attachments/author.php',
            'sources/hooks/systems/commandr_fs/authors.php',
            'sources/hooks/systems/content_meta_aware/author.php',
            'sources/hooks/systems/page_groupings/authors.php',
            'sources/hooks/systems/privacy/authors.php',
            'sources/hooks/systems/rss/authors.php',
            'sources/hooks/systems/sitemap/author.php',
            'themes/default/css/authors.css',
            'themes/default/images/icons/menu/cms/author_set_own_profile.svg',
            'themes/default/images/icons/menu/rich_content/authors.svg',
            'themes/default/images/icons_monochrome/menu/cms/author_set_own_profile.svg',
            'themes/default/images/icons_monochrome/menu/rich_content/authors.svg',
            'themes/default/javascript/authors.js',
            'themes/default/templates/AUTHOR_MANAGE_SCREEN.tpl',
            'themes/default/templates/AUTHOR_POPUP.tpl',
            'themes/default/templates/AUTHOR_SCREEN.tpl',
            'themes/default/templates/AUTHOR_SCREEN_POTENTIAL_ACTION_ENTRY.tpl',
        ];
    }

    /**
     * Get mapping between template names and the method of this class that can render a preview of them.
     *
     * @return array The mapping
     */
    public function tpl_previews() : array
    {
        return [
            'templates/AUTHOR_MANAGE_SCREEN.tpl' => 'administrative__author_manage_screen',
            'templates/AUTHOR_SCREEN.tpl' => 'author_screen',
            'templates/AUTHOR_POPUP.tpl' => 'author_popup_window',
            'templates/AUTHOR_SCREEN_POTENTIAL_ACTION_ENTRY.tpl' => 'author_screen',
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__administrative__author_manage_screen() : object
    {
        return lorem_globalise(do_lorem_template('AUTHOR_MANAGE_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'DEFINE_FORM' => placeholder_form(),
            'MERGE_FORM' => placeholder_form(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__author_screen() : object
    {
        $news_released = new Tempcode();
        foreach (placeholder_array() as $k => $v) {
            $tpl = do_lorem_template('NEWS_BRIEF', [
                'DATE' => placeholder_date(),
                'FULL_URL' => placeholder_url(),
                'NEWS_TITLE_PLAIN' => lorem_phrase(),
                'ID' => placeholder_numeric_id(),
                'NEWS_TITLE' => lorem_phrase(),
                'BLOG' => false,
                'SUBMITTER' => placeholder_first_admin_id(),
                'DATE_RAW' => placeholder_date_raw(),
            ]);
            $news_released->attach($tpl);
        }

        $downloads_released = new Tempcode();
        foreach (placeholder_array() as $v) {
            $downloads_released->attach(lorem_sentence_html());
        }

        $staff_details = do_lorem_template('AUTHOR_SCREEN_POTENTIAL_ACTION_ENTRY', [
            'ACTION' => hyperlink(placeholder_url(), do_lang_tempcode('DEFINE_AUTHOR'), false, true),
        ]);

        $point_details = do_lorem_template('AUTHOR_SCREEN_POTENTIAL_ACTION_ENTRY', [
            'ACTION' => hyperlink(placeholder_url(), do_lang_tempcode('AUTHOR_POINTS'), false, true),
        ]);

        $url_details = do_lorem_template('AUTHOR_SCREEN_POTENTIAL_ACTION_ENTRY', [
            'ACTION' => hyperlink(placeholder_url(), do_lang_tempcode('AUTHOR_HOMEPAGE'), false, true),
        ]);

        $search_details = do_lorem_template('AUTHOR_SCREEN_POTENTIAL_ACTION_ENTRY', [
            'ACTION' => hyperlink(placeholder_url(), do_lang_tempcode('SEARCH'), false, true),
        ]);

        $forum_details = do_lorem_template('AUTHOR_SCREEN_POTENTIAL_ACTION_ENTRY', [
            'ACTION' => hyperlink(placeholder_url(), do_lang_tempcode('AUTHOR_PROFILE'), false, true),
        ]);

        $skills = new Tempcode();
        $description = new Tempcode();

        return lorem_globalise(do_lorem_template('AUTHOR_SCREEN', [
            'TAGS' => placeholder_tags(),
            'TITLE' => lorem_screen_title(),
            'EDIT_URL' => placeholder_url(),
            'AUTHOR' => lorem_phrase(),
            'NEWS_RELEASED' => $news_released,
            'DOWNLOADS_RELEASED' => $downloads_released,
            'POINT_DETAILS' => $point_details,
            'URL_DETAILS' => $url_details,
            'SEARCH_DETAILS' => $search_details,
            'FORUM_DETAILS' => $forum_details,
            'SKILLS' => $skills,
            'DESCRIPTION' => $description,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__author_popup_window() : object
    {
        $authors = [];
        $authors[] = [
            'AUTHOR' => lorem_phrase(),
            'FIELD_NAME' => lorem_word(),
            'DEFINED' => true,
        ];
        $authors[] = [
            'AUTHOR' => lorem_phrase(),
            'FIELD_NAME' => lorem_word(),
            'DEFINED' => false,
        ];

        return lorem_globalise(do_lorem_template('AUTHOR_POPUP', [
            'AUTHORS' => $authors,
            'NEXT_URL' => placeholder_url(),
        ]), null, '', true);
    }
}
