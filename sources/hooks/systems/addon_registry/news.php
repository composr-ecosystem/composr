<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    news
 */

/**
 * Hook class.
 */
class Hook_addon_registry_news
{
    /**
     * Get a list of file permissions to set.
     *
     * @param  boolean $runtime Whether to include wildcards represented runtime-created chmoddable files
     * @return array File permissions to set
     */
    public function get_chmod_array(bool $runtime = false) : array
    {
        return [];
    }

    /**
     * Get the current version of this addon (usually software major, software minor, addon build).
     * Put the comment "// addon_version_auto_update" to the right of the return if you want release tools to automatically update this according to software version and find_addon_effective_md5.
     *
     * @return SHORT_TEXT Version number
     */
    public function get_version() : string
    {
        return '11.0.1'; // addon_version_auto_update 82e8b7055645c1dab0a2d0e4b416a145
    }

    /**
     * Get the minimum required version of the website software needed to use this addon.
     *
     * @return float Minimum required website software version
     */
    public function get_min_cms_version() : float
    {
        return 11.0;
    }

    /**
     * Get the maximum compatible version of the website software to use this addon.
     *
     * @return ?float Maximum compatible website software version (null: no maximum version currently)
     */
    public function get_max_cms_version() : ?float
    {
        return 11.9;
    }

    /**
     * Get the addon category.
     *
     * @return string The category
     */
    public function get_category() : string
    {
        return 'Information Display';
    }

    /**
     * Get the description of the addon.
     *
     * @return string Description of the addon
     */
    public function get_description() : string
    {
        return "Implements news and blogging functionality. Create news articles under your choice of categories. Optionally allow members to make their own blog posts (reduced functionality news articles) displayed on their profile. Various blocks are provided for rendering news articles in different ways.";
    }

    /**
     * Get a list of tutorials that apply to this addon.
     *
     * @return array List of tutorials
     */
    public function get_applicable_tutorials() : array
    {
        return [
            'tut_news',
            'tut_adv_news',
            'tut_information',
            'tut_site_messaging',
        ];
    }

    /**
     * Get a mapping of dependency types.
     *
     * @return array A structure specifying dependency information
     */
    public function get_dependencies() : array
    {
        return [
            'requires' => [
                'news_shared',
            ],
            'recommends' => ['newsletter'],
            'conflicts_with' => [],
        ];
    }

    /**
     * Explicitly say which icon should be used.
     *
     * @return URLPATH Icon
     */
    public function get_default_icon() : string
    {
        return 'themes/default/images/icons/menu/rich_content/news.svg';
    }

    /**
     * Get a list of files that belong to this addon.
     *
     * @return array List of files
     */
    public function get_file_list() : array
    {
        return [
            'cms/pages/modules/cms_blogs.php',
            'cms/pages/modules/cms_news.php',
            'site/pages/modules/news.php',
            'sources/blocks/bottom_news.php',
            'sources/blocks/main_image_fader_news.php',
            'sources/blocks/main_news.php',
            'sources/blocks/side_news.php',
            'sources/blocks/side_news_archive.php',
            'sources/blocks/side_news_categories.php',
            'sources/hooks/blocks/main_staff_checklist/blog.php',
            'sources/hooks/blocks/main_staff_checklist/news.php',
            'sources/hooks/blocks/side_stats/news.php',
            'sources/hooks/modules/admin_import/rss.php',
            'sources/hooks/modules/admin_import_types/news.php',
            'sources/hooks/modules/admin_newsletter/news.php',
            'sources/hooks/modules/admin_setupwizard/news.php',
            'sources/hooks/modules/admin_setupwizard_installprofiles/blog.php',
            'sources/hooks/modules/members/news.php',
            'sources/hooks/modules/search/news.php',
            'sources/hooks/systems/actionlog/news.php',
            'sources/hooks/systems/addon_registry/news.php',
            'sources/hooks/systems/attachments/news.php',
            'sources/hooks/systems/block_ui_renderers/news.php',
            'sources/hooks/systems/commandr_fs/news.php',
            'sources/hooks/systems/commandr_scheduled/publish_news.php',
            'sources/hooks/systems/config/blog_update_time.php',
            'sources/hooks/systems/config/enable_secondary_news.php',
            'sources/hooks/systems/config/news_categories_per_page.php',
            'sources/hooks/systems/config/news_entries_per_page.php',
            'sources/hooks/systems/config/news_show_stats_count_blogs.php',
            'sources/hooks/systems/config/news_show_stats_count_total_posts.php',
            'sources/hooks/systems/config/news_summary_required.php',
            'sources/hooks/systems/config/news_update_time.php',
            'sources/hooks/systems/config/ping_url.php',
            'sources/hooks/systems/config/points_ADD_NEWS.php',
            'sources/hooks/systems/config/search_news.php',
            'sources/hooks/systems/config/separate_blogs.php',
            'sources/hooks/systems/content_meta_aware/news.php',
            'sources/hooks/systems/content_meta_aware/news_category.php',
            'sources/hooks/systems/notifications/news_entry.php',
            'sources/hooks/systems/page_groupings/news.php',
            'sources/hooks/systems/points/news__add.php',
            'sources/hooks/systems/preview/news.php',
            'sources/hooks/systems/privacy/news.php',
            'sources/hooks/systems/profiles_tabs/blog.php',
            'sources/hooks/systems/realtime_rain/news.php',
            'sources/hooks/systems/reorganise_uploads/news.php',
            'sources/hooks/systems/rss/news.php',
            'sources/hooks/systems/sitemap/news.php',
            'sources/hooks/systems/sitemap/news_category.php',
            'sources/hooks/systems/tasks/import_rss.php',
            'sources/hooks/systems/tasks/import_wordpress.php',
            'sources/hooks/systems/tasks/rss_cloud_update.php',
            'sources/hooks/systems/trackback/news.php',
            'sources/news.php',
            'sources/news2.php',
            'sources/news_sitemap.php',
            'themes/default/images/icons/menu/cms/blog.svg',
            'themes/default/images/icons/menu/rich_content/news.svg',
            'themes/default/images/icons/news/art.svg',
            'themes/default/images/icons/news/business.svg',
            'themes/default/images/icons/news/community.svg',
            'themes/default/images/icons/news/difficulties.svg',
            'themes/default/images/icons/news/entertainment.svg',
            'themes/default/images/icons/news/general.svg',
            'themes/default/images/icons/news/index.html',
            'themes/default/images/icons/news/technology.svg',
            'themes/default/images/icons_monochrome/menu/cms/blog.svg',
            'themes/default/images/icons_monochrome/menu/rich_content/news.svg',
            'themes/default/images/icons_monochrome/news/art.svg',
            'themes/default/images/icons_monochrome/news/business.svg',
            'themes/default/images/icons_monochrome/news/community.svg',
            'themes/default/images/icons_monochrome/news/difficulties.svg',
            'themes/default/images/icons_monochrome/news/entertainment.svg',
            'themes/default/images/icons_monochrome/news/general.svg',
            'themes/default/images/icons_monochrome/news/index.html',
            'themes/default/images/icons_monochrome/news/technology.svg',
            'themes/default/javascript/news.js',
            'themes/default/templates/BLOCK_BOTTOM_NEWS.tpl',
            'themes/default/templates/BLOCK_MAIN_IMAGE_FADER_NEWS.tpl',
            'themes/default/templates/BLOCK_MAIN_NEWS.tpl',
            'themes/default/templates/BLOCK_MAIN_NEWS_GRID.tpl',
            'themes/default/templates/BLOCK_MAIN_NEWS_GRID_ITEM.tpl',
            'themes/default/templates/BLOCK_MAIN_NEWS_SLIDER.tpl',
            'themes/default/templates/BLOCK_MAIN_NEWS_SLIDER_SLIDE.tpl',
            'themes/default/templates/BLOCK_SIDE_NEWS.tpl',
            'themes/default/templates/BLOCK_SIDE_NEWS_ARCHIVE.tpl',
            'themes/default/templates/BLOCK_SIDE_NEWS_CATEGORIES.tpl',
            'themes/default/templates/BLOCK_SIDE_NEWS_SUMMARY.tpl',
            'themes/default/templates/CNS_MEMBER_PROFILE_BLOG.tpl',
            'themes/default/templates/NEWS_ARCHIVE_SCREEN.tpl',
            'themes/default/templates/NEWS_ENTRY_SCREEN.tpl',
            'themes/default/templates/NEWS_WORDPRESS_IMPORT_SCREEN.tpl',
        ];
    }

    /**
     * Get mapping between template names and the method of this class that can render a preview of them.
     *
     * @return array The mapping
     */
    public function tpl_previews() : array
    {
        return [
            'templates/BLOCK_SIDE_NEWS_ARCHIVE.tpl' => 'block_side_news_archive',
            'templates/BLOCK_MAIN_NEWS.tpl' => 'block_main_news',
            'templates/BLOCK_SIDE_NEWS.tpl' => 'block_side_news',
            'templates/BLOCK_SIDE_NEWS_CATEGORIES.tpl' => 'block_side_news_categories',
            'templates/BLOCK_SIDE_NEWS_SUMMARY.tpl' => 'block_side_news',
            'templates/BLOCK_BOTTOM_NEWS.tpl' => 'block_bottom_news',
            'templates/NEWS_ENTRY_SCREEN.tpl' => 'news_full_screen',
            'templates/NEWS_ARCHIVE_SCREEN.tpl' => 'news_archive_screen',
            'templates/NEWS_WORDPRESS_IMPORT_SCREEN.tpl' => 'administrative__news_wordpress_import_screen',
            'templates/NEWS_BRIEF.tpl' => 'block_main_news',
            'templates/NEWS_BOX.tpl' => 'block_main_news',
            'templates/AJAX_PAGINATION.tpl' => 'block_main_news',
            'templates/CNS_MEMBER_PROFILE_BLOG.tpl' => 'cns_member_profile_blog',
            'templates/BLOCK_MAIN_IMAGE_FADER_NEWS.tpl' => 'block_main_image_fader_news',
            'templates/BLOCK_MAIN_NEWS_GRID.tpl' => 'block_main_news_grid',
            'templates/BLOCK_MAIN_NEWS_GRID_ITEM.tpl' => 'block_main_news_grid',
            'templates/BLOCK_MAIN_NEWS_SLIDER.tpl' => 'block_main_news_grid',
            'templates/BLOCK_MAIN_NEWS_SLIDER_SLIDE.tpl' => 'block_main_news_grid',
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__block_main_image_fader_news() : object
    {
        require_lang('news');

        $news = [];
        $news[] = [
            'TITLE' => lorem_phrase(),
            'IMAGE_URL' => placeholder_image_url(),
            'URL' => placeholder_url(),
            'BODY' => lorem_paragraph_html(),
            'DATE' => placeholder_date(),
            'DATE_RAW' => placeholder_date_raw(),
            'SUBMITTER' => placeholder_numeric_id(),
            'AUTHOR' => lorem_phrase(),
            'AUTHOR_URL' => placeholder_url(),
        ];

        return lorem_globalise(do_lorem_template('BLOCK_MAIN_IMAGE_FADER_NEWS', [
            'BLOCK_ID' => lorem_word(),
            'TITLE' => lorem_phrase(),
            'ARCHIVE_URL' => placeholder_url(),
            'NEWS' => $news,
            'MILL' => '8000',
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__cns_member_profile_blog() : object
    {
        require_lang('news');

        $recent_blog_posts = do_block('main_news', ['select' => placeholder_numeric_id() . '*', 'blogs' => '1', 'member_based' => '1', 'zone' => '_SEARCH', 'days' => '0', 'fallback_full' => '10', 'fallback_archive' => '5', 'no_links' => '1', 'pagination' => '1']);

        return lorem_globalise(do_lorem_template('CNS_MEMBER_PROFILE_BLOG', [
            'MEMBER_ID' => placeholder_first_admin_id(),
            'RECENT_BLOG_POSTS' => $recent_blog_posts,
            'RSS_URL' => placeholder_url(),
            'ADD_BLOG_POST_URL' => placeholder_url(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__block_side_news_archive() : object
    {
        require_lang('news');
        require_lang('dates');

        $years = [
            [
                'YEAR' => '2010',
                'TIMES' => [
                    [
                        'MONTH' => '2',
                        'MONTH_STRING' => do_lang('FEBRUARY'),
                        'URL' => placeholder_url(),
                    ],
                    [
                        'MONTH' => '1',
                        'MONTH_STRING' => do_lang('JANUARY'),
                        'URL' => placeholder_url(),
                    ],
                ],
            ],
            [
                'YEAR' => '2009',
                'TIMES' => [
                    [
                        'MONTH' => '12',
                        'MONTH_STRING' => do_lang('DECEMBER'),
                        'URL' => placeholder_url(),
                    ],
                    [
                        'MONTH' => '11',
                        'MONTH_STRING' => do_lang('NOVEMBER'),
                        'URL' => placeholder_url(),
                    ],
                ],
            ],
        ];

        return lorem_globalise(do_lorem_template('BLOCK_SIDE_NEWS_ARCHIVE', [
            'BLOCK_ID' => lorem_word(),
            'TITLE' => lorem_phrase(),
            'YEARS' => $years,
        ]), null, '', true);
    }

    /**
     * Get a map of data for news templates.
     *
     * @return array Map of data for news templates
     */
    protected function get_news_map() : array
    {
        return [
            'BLOG' => lorem_phrase(),
            'AUTHOR_URL' => placeholder_url(),
            'CATEGORY' => lorem_phrase(),
            '_CATEGORY' => placeholder_numeric_id(),
            'CATEGORY_URL' => placeholder_url(),
            'REP_IMAGE_URL' => placeholder_image_url(),
            'AUTHOR' => lorem_phrase(),
            '_AUTHOR' => lorem_phrase(),
            'SUBMITTER' => placeholder_first_admin_id(),
            'AVATAR' => placeholder_avatar(),
            'NEWS_TITLE' => lorem_phrase(),
            'NEWS_TITLE_PLAIN' => lorem_phrase(),
            'DATE' => placeholder_date(),
            'NEWS' => lorem_phrase(),
            'COMMENTS' => lorem_phrase(),
            'VIEW' => lorem_phrase(),
            'ID' => placeholder_numeric_id(),
            'FULL_URL' => placeholder_url(),
            'COMMENT_COUNT' => lorem_phrase(),
            'READ_MORE' => lorem_sentence(),
            'TRUNCATE' => false,
            'FIRSTTIME' => placeholder_date(),
            'LASTTIME' => placeholder_date(),
            'CLOSED' => false,
            'FIRSTUSERNAME' => lorem_word(),
            'LASTUSERNAME' => lorem_word(),
            'FIRSTMEMBERID' => placeholder_first_admin_id(),
            'LASTMEMBERID' => placeholder_first_admin_id(),
            'DATE_RAW' => placeholder_date_raw(),
            'GIVE_CONTEXT' => false,
            'TAGS' => placeholder_tags(),
            'FORUM_ID' => null,
            'BRIEF_CONTENT' => lorem_sentence_html(),
        ];
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__block_main_news() : object
    {
        require_lang('news');
        require_lang('cns');
        require_css('news');

        $summary_contents = new Tempcode();
        foreach (placeholder_array() as $k => $v) {
            $summary_contents->attach(do_lorem_template('NEWS_BOX', $this->get_news_map()));
        }

        $brief_contents = new Tempcode();
        foreach (placeholder_array() as $k => $v) {
            $brief_contents->attach(do_lorem_template('NEWS_BRIEF', [
                'DATE' => placeholder_date(),
                'FULL_URL' => placeholder_url(),
                'NEWS_TITLE_PLAIN' => lorem_phrase(),
                'ID' => placeholder_numeric_id(),
                'NEWS_TITLE' => lorem_phrase(),
                'BLOG' => false,
                'SUBMITTER' => placeholder_first_admin_id(),
                'DATE_RAW' => placeholder_date_raw(),
            ]));
        }

        return lorem_globalise(do_lorem_template('BLOCK_MAIN_NEWS', [
            'BLOCK_ID' => lorem_word(),
            'BLOG' => true,
            'TITLE' => lorem_phrase(),
            'SLIDER' => '',
            'SUMMARY_CONTENT' => $brief_contents,
            'BRIEF_CONTENT' => lorem_phrase(),
            'RSS_URL' => placeholder_url(),
            'ATOM_URL' => placeholder_url(),
            'SUBMIT_URL' => placeholder_url(),
            'ARCHIVE_URL' => placeholder_url(),
            'BLOCK_PARAMS' => '',
            'FILTER' => '',

            'START' => '0',
            'MAX' => '10',
            'START_PARAM' => 'x_start',
            'MAX_PARAM' => 'x_max',
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__block_main_news_grid() : object
    {
        require_lang('news');
        require_lang('cns');
        require_css('news');

        $slides = new Tempcode();
        $slides_count = 0;
        foreach (placeholder_array() as $k => $v) {
            $news_items = [];
            $news_items[] = $this->get_news_map();
            $news_items[] = $this->get_news_map();
            $news_items[] = $this->get_news_map();

            $slides->attach(do_template('BLOCK_MAIN_NEWS_SLIDER_SLIDE', [
                '_GUID' => '9a69edb950075476f82a10584fe997e9',
                'BLOCK_ID' => lorem_word(),
                'ACTIVE' => ($k == 0),
                'NEWS_ITEMS' => $news_items,
            ]));
            $slides_count++;
        }
        $slider = do_lorem_template('BLOCK_MAIN_NEWS_SLIDER', [
            'BLOCK_ID' => lorem_word(),
            'BLOG' => false,
            'SLIDES' => $slides,
            'SLIDES_COUNT' => strval($slides_count),
            'SLIDES_COUNT_ARRAY' => ($slides_count > 1) ? range(1, $slides_count) : null,
            'INTERVAL' => strval(6000),
        ]);

        $summary_contents = new Tempcode();
        foreach (placeholder_array() as $k => $v) {
            $summary_contents->attach(do_lorem_template('BLOCK_MAIN_NEWS_GRID_ITEM', $this->get_news_map()));
        }

        $brief_contents = new Tempcode();
        foreach (placeholder_array() as $k => $v) {
            $brief_contents->attach(do_lorem_template('NEWS_BRIEF', [
                'DATE' => placeholder_date(),
                'FULL_URL' => placeholder_url(),
                'NEWS_TITLE_PLAIN' => lorem_phrase(),
                'ID' => placeholder_numeric_id(),
                'NEWS_TITLE' => lorem_phrase(),
                'BLOG' => false,
                'SUBMITTER' => placeholder_first_admin_id(),
                'DATE_RAW' => placeholder_date_raw(),
            ]));
        }

        return lorem_globalise(do_lorem_template('BLOCK_MAIN_NEWS_GRID', [
            'BLOCK_ID' => lorem_word(),
            'BLOG' => true,
            'TITLE' => lorem_phrase(),
            'SLIDER' => $slider,
            'SUMMARY_CONTENT' => $summary_contents,
            'BRIEF_CONTENT' => $brief_contents,
            'RSS_URL' => placeholder_url(),
            'ATOM_URL' => placeholder_url(),
            'SUBMIT_URL' => placeholder_url(),
            'ARCHIVE_URL' => placeholder_url(),
            'BLOCK_PARAMS' => '',
            'FILTER' => '',

            'START' => '0',
            'MAX' => '10',
            'START_PARAM' => 'x_start',
            'MAX_PARAM' => 'x_max',
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__block_side_news() : object
    {
        require_lang('news');

        $contents = new Tempcode();
        foreach (placeholder_array() as $k => $v) {
            $contents->attach(do_lorem_template('BLOCK_SIDE_NEWS_SUMMARY', [
                'ID' => placeholder_numeric_id(),
                'SUBMITTER' => placeholder_numeric_id(),
                'AUTHOR' => lorem_phrase(),
                'REP_IMAGE_URL' => placeholder_image_url(),
                'CATEGORY' => lorem_phrase(),
                'BLOG' => true,
                'FULL_URL' => placeholder_url(),
                'NEWS' => lorem_paragraph_html(),
                'NEWS_TITLE' => lorem_phrase(),
                '_DATE' => placeholder_date_raw(),
                'DATE' => placeholder_date(),
                'BLOCK_ID' => placeholder_codename(),
            ]));
        }

        return lorem_globalise(do_lorem_template('BLOCK_SIDE_NEWS', [
            'BLOCK_ID' => lorem_word(),
            'BLOG' => true,
            'TITLE' => lorem_phrase(),
            'CONTENT' => $contents,
            'SUBMIT_URL' => placeholder_url(),
            'ARCHIVE_URL' => placeholder_url(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__block_side_news_categories() : object
    {
        require_lang('news');

        $categories = [];
        foreach (placeholder_array() as $k => $v) {
            $categories[] = [
                'URL' => placeholder_url(),
                'NAME' => lorem_phrase(),
                '_COUNT' => placeholder_number(),
                'COUNT' => placeholder_number(),
            ];
        }
        return lorem_globalise(do_lorem_template('BLOCK_SIDE_NEWS_CATEGORIES', [
            'BLOCK_ID' => lorem_word(),
            'CATEGORIES' => $categories,
            'PRE' => '',
            'POST' => '',
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__block_bottom_news() : object
    {
        require_lang('news');

        $contents_arr = [];
        foreach (placeholder_array() as $k => $v) {
            $contents_arr[] = [
                'DATE' => placeholder_date(),
                'FULL_URL' => placeholder_url(),
                'NEWS_TITLE' => lorem_phrase(),
            ];
        }
        return lorem_globalise(do_lorem_template('BLOCK_BOTTOM_NEWS', [
            'BLOCK_ID' => lorem_word(),
            'BLOG' => true,
            'POSTS' => $contents_arr,
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__administrative__news_wordpress_import_screen() : object
    {
        require_lang('news');

        return lorem_globalise(do_lorem_template('NEWS_WORDPRESS_IMPORT_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'XML_UPLOAD_FORM' => placeholder_form(),
            'DB_IMPORT_FORM' => placeholder_form(),
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__news_archive_screen() : object
    {
        require_lang('news');

        return lorem_globalise(do_lorem_template('NEWS_ARCHIVE_SCREEN', [
            'TITLE' => lorem_screen_title(),
            'SUBMIT_URL' => placeholder_url(),
            'EDIT_CAT_URL' => placeholder_url(),
            'BLOG' => false,
            'BLOGS' => '-1',
            'FILTER' => '',
            'SELECT' => '*',
            'SELECT_AND' => '*',
            'MAX' => '30',
            'INLINE' => '0',
        ]), null, '', true);
    }

    /**
     * Get a preview(s) of a (group of) template(s), as a full standalone piece of HTML in Tempcode format.
     * Uses sources/lorem.php functions to place appropriate stock-text. Should not hard-code things, as the code is intended to be declarative.
     * Assumptions: You can assume all Lang/CSS/JavaScript files in this addon have been pre-required.
     *
     * @return Tempcode Preview
     */
    public function tpl_preview__news_full_screen() : object
    {
        require_javascript('editing');
        require_css('news');
        require_lang('news');

        return lorem_globalise(do_lorem_template('NEWS_ENTRY_SCREEN', [
            'ID' => placeholder_numeric_id(),
            'CATEGORY_ID' => placeholder_numeric_id(),
            'BLOG' => true,
            '_TITLE' => lorem_phrase(),
            'CATEGORIES' => placeholder_array(),
            'NEWSLETTER_URL' => addon_installed('newsletter') ? placeholder_url() : '',
            'ADD_DATE_RAW' => placeholder_date_raw(),
            'EDIT_DATE_RAW' => '',
            'SUBMITTER' => placeholder_numeric_id(),
            'CATEGORY' => lorem_phrase(),
            'REP_IMAGE_URL' => placeholder_image_url(),
            'TITLE' => lorem_screen_title(),
            '_VIEWS' => placeholder_number(),
            'VIEWS' => placeholder_number(),
            'COMMENT_DETAILS' => placeholder_comments(placeholder_comments_form(false)),
            'RATING_DETAILS' => placeholder_rating('news'),
            'TRACKBACK_DETAILS' => placeholder_trackbacks_wrapper(),
            'DATE' => placeholder_date(),
            'AUTHOR' => lorem_word(),
            'AUTHOR_URL' => placeholder_url(),
            'AUTHOR_ENTRY_URL' => '',
            'AUTHOR_ENTRY_MEMBER_ID' => null,
            'AUTHOR_ENTRY_DESCRIPTION' => lorem_paragraph_html(),
            'AUTHOR_ENTRY_SKILLS' => lorem_paragraph_html(),
            'NEWS_FULL' => lorem_chunk_html(),
            'NEWS_FULL_PLAIN' => lorem_chunk(),
            'EDIT_URL' => placeholder_url(),
            'ARCHIVE_URL' => placeholder_url(),
            'SUBMIT_URL' => placeholder_url(),
            'WARNING_DETAILS' => '',
            'TAGS' => placeholder_tags(),
        ]), null, '', true);
    }

    /**
     * Uninstall default content.
     */
    public function uninstall_test_content()
    {
        require_code('news2');

        $to_delete = $GLOBALS['SITE_DB']->query_select('news', ['id'], [$GLOBALS['SITE_DB']->translate_field_ref('title') => lorem_phrase()]);
        foreach ($to_delete as $record) {
            delete_news($record['id']);
        }

        $to_delete = $GLOBALS['SITE_DB']->query_select('news_categories', ['id'], [$GLOBALS['SITE_DB']->translate_field_ref('nc_title') => lorem_phrase()]);
        foreach ($to_delete as $record) {
            delete_news_category($record['id']);
        }
    }

    /**
     * Install default content.
     */
    public function install_test_content()
    {
        require_code('news2');

        $news_category_id = $GLOBALS['SITE_DB']->query_select_value_if_there('news_categories', 'MIN(id)');
        if ($news_category_id === null) {
            $news_category_id = add_news_category(lorem_phrase(), 'icons/news/general', '');
            require_code('permissions2');
            set_global_category_access('news', $news_category_id);
        }

        add_news(lorem_phrase(), lorem_chunk(), $GLOBALS['FORUM_DRIVER']->get_username(get_member()), 1, 1, 1, 1, '', lorem_paragraph(), $news_category_id);
    }

    /**
     * Find predefined news category icons.
     *
     * @return array Predefined news category icons
     */
    protected function have_i_got_news_for_you() : array
    {
        return ['technology', 'difficulties', 'community', 'entertainment', 'business', 'art'];
    }

    /**
     * Find available predefined content, and what is installed.
     *
     * @return array A map of available predefined content codenames, and details (if installed, and title)
     */
    public function enumerate_predefined_content() : array
    {
        require_lang('news');

        $ret = [];

        $_news_categories = [];
        $news_categories = $this->have_i_got_news_for_you();
        foreach ($news_categories as $category) {
            $installed = ($GLOBALS['SITE_DB']->query_select_value_if_there('news_categories', 'id', ['nc_img' => 'icons/news/' . $category]) !== null);

            $ret[$category] = [
                'title' => do_lang_tempcode('NC_' . $category),
                'description' => new Tempcode(),
                'installed' => $installed,
            ];
        }

        return $ret;
    }

    /**
     * Install predefined content.
     *
     * @param  ?array $content A list of predefined content labels to install (null: all)
     */
    public function install_predefined_content(?array $content = null)
    {
        $news_categories = $this->have_i_got_news_for_you();
        foreach ($news_categories as $category) {
            if ((($content === null) || (in_array($category, $content))) && (!has_predefined_content('news', $category))) {
                require_code('lang3');
                require_lang('news');
                $map = [
                    'notes' => '',
                    'nc_img' => 'icons/news/' . $category,
                    'nc_owner' => null,
                ];
                $map += lang_code_to_default_content('nc_title', 'NC_' . $category);
                $GLOBALS['SITE_DB']->query_insert('news_categories', $map);
            }
        }
    }

    /**
     * Uninstall predefined content.
     *
     * @param  ?array $content A list of predefined content labels to uninstall (null: all)
     */
    public function uninstall_predefined_content(?array $content = null)
    {
        $news_categories = $this->have_i_got_news_for_you();
        foreach ($news_categories as $category) {
            if ((($content === null) || (in_array($category, $content))) && (has_predefined_content('news', $category))) {
                $id = $GLOBALS['SITE_DB']->query_select_value('news_categories', 'id', ['nc_img' => 'icons/news/' . $category]);
                require_code('news2');
                delete_news_category($id);
            }
        }
    }
}
