<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2023

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    cns_warnings
 */

/**
 * Hook class.
 */
class Hook_cns_warnings_ban_member
{
    /**
     * Get details for this hook.
     *
     * @return ?array The details (null: hook disabled)
     */
    public function get_details() : ?array
    {
        if (!addon_installed('cns_warnings')) {
            return null;
        }

        return [
            'order' => 3,
        ];
    }

    /**
     * Render form fields for the warnings screen.
     *
     * @param  Tempcode &$add_text Tempcode to be included on the intro paragraph of the warnings screen (passed by reference)
     * @param  Tempcode &$fields The fields to be rendered (passed by reference)
     * @param  Tempcode &$hidden The hidden fields to be included (passed by reference)
     * @param  boolean $new Whether it is a new warning/punishment record
     * @param  LONG_TEXT $explanation The explanation for the warning/punishment record
     * @param  BINARY $is_warning Whether to make this a formal warning
     * @param  MEMBER $member_id The member the warning is for
     * @param  BINARY $spam_mode Whether this is a spam warning
     * @param  ?AUTO_LINK $post_id The ID of the forum post of which we clicked warn (null: we are not warning on a forum post)
     * @param  ?SHORT_TEXT $ip_address The IP address of the poster (null: we are not warning on a forum post)
     */
    public function get_form_fields(&$add_text, &$fields, &$hidden, bool $new, string $explanation, int $is_warning, int $member_id, int $spam_mode, ?int $post_id, ?string $ip_address)
    {
        if (!addon_installed('cns_warnings')) {
            return;
        }

        if (!$new) {
            return;
        }

        if (has_privilege(get_member(), 'member_maintenance')) {
            $already_banned = ($GLOBALS['FORUM_DRIVER']->get_member_row_field($member_id, 'm_is_perm_banned') != '0');

            require_code('input_filter');
            list(, $reasoned_bans) = load_advanced_banning();
            if ((empty($reasoned_bans)) || ($already_banned)) {
                $fields->attach(form_input_tick(do_lang_tempcode('BAN_MEMBER'), do_lang_tempcode('DESCRIPTION_BANNED_MEMBER'), 'banned_member', $spam_mode || $already_banned, null, '1', false, $already_banned));
            } else {
                $reasoned_bans_list = new Tempcode();
                $reasoned_bans_list->attach(form_input_list_entry('0', !$spam_mode, do_lang_tempcode('NO')));
                $reasoned_bans_list->attach(form_input_list_entry('1', $spam_mode, do_lang_tempcode('YES')));
                foreach (array_keys($reasoned_bans) as $reasoned_ban) {
                    $reasoned_bans_list->attach(form_input_list_entry($reasoned_ban));
                }
                $fields->attach(form_input_list(do_lang_tempcode('BAN_MEMBER'), do_lang_tempcode('DESCRIPTION_BANNED_MEMBER'), 'banned_member', $reasoned_bans_list, null, false, false));
            }
        }
    }

    /**
     * Actualise punitive actions.
     * Note that this assumes action was applied through the warnings form, and that post parameters still exist.
     *
     * @param array &$punitive_messages Punitive action text to potentially be included in the PT automatically (passed by reference)
     * @param AUTO_LINK $warning_id The ID of the warning that was created for this punitive action
     * @param MEMBER $member_id The member this warning is being applied to
     * @param SHORT_TEXT $username The username of the member this warning is being applied to
     * @param SHORT_TEXT $explanation The defined explanation for this warning
     * @param LONG_TEXT &$message The message to be sent as a PT (passed by reference; you should generally use $punitive_text instead if you want to add PT text)
     */
    public function actualise_punitive_action(array &$punitive_messages, int $warning_id, int $member_id, string $username, string $explanation, string &$message)
    {
        if (!addon_installed('cns_warnings')) {
            return;
        }

        // Perma-ban member if requested and we have the privilege
        $banned_member = post_param_string('banned_member', '0');
        if (has_privilege(get_member(), 'member_maintenance')) {
            if ($banned_member != '0') {
                $GLOBALS['FORUM_DB']->query_update('f_members', ['m_is_perm_banned' => $banned_member], ['id' => $member_id], '', 1);

                require_code('cns_general_action2');
                cns_mod_log_it('BAN_MEMBER', strval($member_id), $username, $explanation);

                $GLOBALS['FORUM_DB']->query_insert('f_warnings_punitive', [
                    'p_warning_id' => $warning_id,
                    'p_hook' => 'ban_member',
                    'p_action' => '_PUNITIVE_BAN_ACCOUNT',
                    'p_param_a' => null,
                    'p_param_b' => null,
                    'p_reversed' => 0,
                ]);

                $punitive_messages[] = do_lang('PUNITIVE_BAN_ACCOUNT', null, null, null, null, false);
            }
        } else {
            $banned_member = '0';
        }
    }
}
