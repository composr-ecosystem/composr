<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2020

 See text/EN/licence.txt for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    cns_forum
 */

/**
 * Hook class.
 */
class Hook_points_posts
{
    /**
     * Get points earned for making posts; some of these will probably have been spent already. This only works for the cns forum type.
     *
     * @param  MEMBER $member_id The ID of the member we are getting points for
     * @param  TIME $timestamp Time to get for
     * @param  array $point_info The map containing the members point info (fields as enumerated in description) from point_info()
     * @return integer the number of points the member has
     */
    public function total_points($member_id, $timestamp, $point_info)
    {
        if (get_forum_type() != 'cns') {
            return 0;
        }

        if (!addon_installed('cns_forum')) {
            return 0;
        }

        $points_gained_posting = $GLOBALS['FORUM_DRIVER']->get_post_count($member_id);
        $points_posting = intval(get_option('points_posting'));

        if ($timestamp !== null) {
            $points_gained_posting -= min($points_gained_posting, @intval($GLOBALS['FORUM_DB']->query_value_if_there('SELECT SUM(f_post_count_increment) FROM ' . $GLOBALS['FORUM_DB']->get_table_prefix() . 'f_posts p JOIN ' . $GLOBALS['FORUM_DB']->get_table_prefix() . 'f_forums f ON f.id=p.p_cache_forum_id WHERE p_time>' . strval($timestamp) . ' AND p_poster=' . strval($member_id))));
        }

        return $points_posting * $points_gained_posting;
    }

    /**
     * Calculate points earned to be displayed on POINTS_PROFILE.tpl.
     *
     * @param  MEMBER $member_id_of The ID of the member who is being viewed
     * @param  ?MEMBER $member_id_viewing The ID of the member who is doing the viewing (null: current member)
     * @param  array $point_info The map containing the members point info (fields as enumerated in description) from point_info()
     * @return ?array Point record map containing LABEL, COUNT, POINTS_EACH, and POINTS_TOTAL for use in POINTS_PROFILE.tpl. (null: not using cns forum)
     */
    public function points_profile($member_id_of, $member_id_viewing, $point_info)
    {
        if (get_forum_type() != 'cns') {
            return null;
        }

        if (!addon_installed('cns_forum')) {
            return null;
        }

        $post_count = $GLOBALS['FORUM_DRIVER']->get_post_count($member_id_of);
        $points_posting = intval(get_option('points_posting'));

        return [
            'LABEL' => do_lang('COUNT_POSTS'),
            'COUNT' => integer_format($post_count),
            'POINTS_EACH' => integer_format($points_posting),
            'POINTS_TOTAL' => integer_format($post_count * $points_posting)
        ];
    }
}
