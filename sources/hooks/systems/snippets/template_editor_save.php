<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2019

 See text/EN/licence.txt for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    core_themeing
 */

/**
 * Hook class.
 */
class Hook_snippet_template_editor_save
{
    /**
     * Run function for snippet hooks. Generates XHTML to insert into a page using AJAX.
     *
     * @return Tempcode The snippet
     */
    public function run()
    {
        if (!has_actual_page_access(get_member(), 'admin_themes', get_module_zone('admin_themes'))) {
            access_denied('I_ERROR');
        }

        require_code('files2');

        $contents = post_param_string('contents');

        $file = get_param_string('file');

        if (strpos($file, ':') === false) {
            // Template...

            require_code('themes2');
            require_code('themes3');
            require_lang('themes');

            $theme = get_param_string('theme');
            $subdir = dirname($file);
            $_file = basename($file);
            $suffix = '.' . get_file_extension($file);
            $clean_file = basename($file, $suffix);

            $custom_path = get_custom_file_base() . '/themes/' . $theme . '/' . $subdir . '_custom/' . $_file;
            $original_path = get_file_base() . '/themes/default/' . $subdir . '/' . $_file;

            if (is_file($original_path) && cms_file_get_contents_safe($original_path) == $contents) { // TODO #3467
                // Delete
                if (file_exists($custom_path)) {
                    unlink($custom_path);
                    sync_file($custom_path);
                }
                if (file_exists($custom_path . '.editfrom')) {
                    unlink($custom_path . '.editfrom');
                    sync_file($custom_path . '.editfrom');
                }
            } else {
                // Save
                cms_file_put_contents_safe($custom_path, $contents, FILE_WRITE_FIX_PERMISSIONS | FILE_WRITE_SYNC_FILE | FILE_WRITE_BOM);

                // Make base-hash-thingy
                if (is_file($original_path) && !is_file($custom_path . '.editfrom')) {
                    $hash = cms_file_get_contents_safe($original_path); // TODO #3467
                    cms_file_put_contents_safe($custom_path . '.editfrom', $hash, FILE_WRITE_FIX_PERMISSIONS | FILE_WRITE_SYNC_FILE | FILE_WRITE_BOM);
                }
            }

            // Store revision
            if (addon_installed('actionlog')) {
                require_code('revisions_engine_files');
                $revision_engine = new RevisionEngineFiles();
                $existing_path = find_template_path($_file, $subdir, $theme);
                if ($existing_path !== null) {
                    $revision_engine->add_revision(
                        dirname($custom_path),
                        $clean_file,
                        ltrim($suffix, '.'),
                        cms_file_get_contents_safe($existing_path), // TODO #3467
                        filemtime($existing_path)
                    );
                }
            }

            // Clear caching
            require_code('caches3');
            erase_cached_templates(false, array($clean_file));
            erase_cached_templates(false, null, TEMPLATE_DECACHE_BASE);

            // Log
            log_it('EDIT_TEMPLATES', $theme, $file);
        } else {
            // Comcode page...

            list($zone, $page) = explode(':', $file, 2);

            require_code('zones3');
            save_comcode_page($zone, $page, get_site_default_lang(), $contents, null, null, null, null, time(), 0, null, null, null, null);
        }

        return do_lang_tempcode('SUCCESS');
    }
}
