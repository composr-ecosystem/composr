<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2020

 See text/EN/licence.txt for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    galleries
 */

/**
 * Hook class.
 */
class Hook_content_meta_aware_gallery extends Hook_CMA
{
    /**
     * Get content type details.
     *
     * @param  ?ID_TEXT $zone The zone to link through to (null: autodetect)
     * @param  boolean $get_extended_data Populate additional data that is somewhat costly to compute (add_url, archive_url)
     * @return ?array Map of content-type info (null: disabled)
     */
    public function info($zone = null, $get_extended_data = false)
    {
        if (!addon_installed('galleries')) {
            return null;
        }

        $extra_where_sql = 'r.name NOT LIKE \'' . db_encode_like('download\_%') . '\'';
        if (get_option('show_empty_galleries') == '0') {
            $extra_where_sql .= ' AND (EXISTS(SELECT * FROM images i WHERE i.cat=r.cat) OR EXISTS(SELECT * FROM videos v WHERE v.cat=r.cat) OR EXISTS(SELECT * FROM galleries g WHERE g.parent_id=r.cat))';
        }

        return [
            'support_custom_fields' => true,

            'content_type_label' => 'galleries:GALLERY',
            'content_type_universal_label' => 'Gallery',

            'db' => $GLOBALS['SITE_DB'],
            'extra_where_sql' => $extra_where_sql,
            'table' => 'galleries',
            'id_field' => 'name',
            'id_field_numeric' => false,
            'parent_category_field' => 'parent_id',
            'parent_category_meta_aware_type' => 'gallery',
            'is_category' => true,
            'is_entry' => false,
            'category_field' => 'parent_id', // For category permissions
            'category_type' => 'galleries', // For category permissions
            'parent_spec__table_name' => 'galleries',
            'parent_spec__parent_name' => 'parent_id',
            'parent_spec__field_name' => 'name',
            'category_is_string' => true,

            'title_field' => 'fullname',
            'title_field_dereference' => true,
            'description_field' => 'the_description',
            'description_field_dereference' => true,
            'description_field_supports_comcode' => true,
            'thumb_field' => ['rep_image', 'CALL: generate_gallery_entry_thumb_url'],
            'thumb_field_is_theme_image' => false,
            'alternate_icon_theme_image' => null,

            'view_page_link_pattern' => '_SEARCH:galleries:browse:_WILD',
            'edit_page_link_pattern' => '_SEARCH:cms_galleries:_edit_category:_WILD',
            'view_category_page_link_pattern' => '_SEARCH:galleries:browse:_WILD',
            'add_url' => ($get_extended_data && has_submit_permission('mid', get_member(), get_ip_address(), 'cms_galleries')) ? (get_module_zone('cms_galleries') . ':cms_galleries:add_category') : null,
            'archive_url' => $get_extended_data ? ((($zone !== null) ? $zone : get_module_zone('galleries')) . ':galleries') : null,

            'support_url_monikers' => true,

            'views_field' => null,
            'order_field' => null,
            'submitter_field' => 'g_owner',
            'author_field' => null,
            'add_time_field' => 'add_date',
            'edit_time_field' => null,
            'date_field' => 'add_date',
            'validated_field' => null,

            'seo_type_code' => 'gallery',

            'feedback_type_code' => 'galleries',

            'permissions_type_code' => 'galleries', // null if has no permissions

            'search_hook' => 'galleries',
            'rss_hook' => null,
            'attachment_hook' => null,
            'notification_hook' => null,
            'sitemap_hook' => 'gallery',

            'addon_name' => 'galleries',

            'cms_page' => 'cms_galleries',
            'module' => 'galleries',

            'commandr_filesystem_hook' => 'galleries',
            'commandr_filesystem__is_folder' => true,

            'support_revisions' => false,

            'support_privacy' => false,

            'support_content_reviews' => true,

            'support_spam_heuristics' => 'the_description',

            'actionlog_regexp' => '\w+_GALLERY',

            'default_prominence_weight' => PROMINENCE_WEIGHT_MEDIUM,
            'default_prominence_flags' => 0,
            'prominence_custom_sort' => db_function('GREATEST', [db_function('COALESCE', ['(SELECT MAX(add_date) FROM ' . get_table_prefix() . 'images WHERE cat=r.name)', 0]), db_function('COALESCE', ['(SELECT MAX(add_date) FROM ' . get_table_prefix() . 'videos WHERE cat=r.name)', 0])]),
            'prominence_custom_sort_dir' => 'DESC',
        ];
    }

    /**
     * Get headings of special relevant data this content type supports.
     *
     * @return array A map of heading codenames to Tempcode labels
     */
    public function get_special_keymap_headings()
    {
        require_lang('galleries');

        $headings = [];

        $headings['subcategory_count'] = do_lang_tempcode('SUBGALLERIES');
        $headings['image_count'] = do_lang_tempcode('IMAGES');
        $headings['video_count'] = do_lang_tempcode('VIDEOS');

        return $headings;
    }

    /**
     * Get special relevant data this content type supports.
     *
     * @param  array $row Database row
     * @return array A map of heading codenames to Tempcode values
     */
    public function get_special_keymap($row)
    {
        require_code('galleries');

        $keymap = [];

        list($num_children, $num_images, $num_videos) = get_recursive_gallery_details($row['name']);

        $keymap['subcategory_count'] = escape_html(integer_format($num_children));
        $keymap['image_count'] = escape_html(integer_format($num_images));
        $keymap['video_count'] = escape_html(integer_format($num_videos));

        return $keymap;
    }

    /**
     * Render a content box for a content row.
     *
     * @param  array $row The database row for the content
     * @param  ID_TEXT $zone The zone to display in
     * @param  boolean $give_context Whether to include context (i.e. say WHAT this is, not just show the actual content)
     * @param  boolean $include_breadcrumbs Whether to include breadcrumbs (if there are any)
     * @param  ?ID_TEXT $root Virtual root to use (null: none)
     * @param  boolean $attach_to_url_filter Whether to copy through any filter parameters in the URL, under the basis that they are associated with what this box is browsing
     * @param  ID_TEXT $guid Overridden GUID to send to templates (blank: none)
     * @return Tempcode Results
     */
    public function render_box($row, $zone, $give_context = true, $include_breadcrumbs = true, $root = null, $attach_to_url_filter = false, $guid = '')
    {
        require_code('galleries');

        return render_gallery_box($row, ($root === null) ? $root : 'root', false, $zone, false, false, $give_context, $include_breadcrumbs, $attach_to_url_filter, $guid);
    }

    /**
     * Get the hook name of an AJAX tree selection list.
     *
     * @return ?string Hook name (null: none)
     */
    public function create_selection_tree_list()
    {
        return 'choose_gallery';
    }
}

/**
 * Find an entry thumbnail.
 *
 * @param  array $row Database row of entry
 * @param  boolean $prefer_large_image Whether we prefer a larger image
 * @return URLPATH The thumbnail URL (blank: none)
 */
function generate_gallery_entry_thumb_url($row, $prefer_large_image = false)
{
    if ($row['rep_image'] != '') {
        $thumb_url = $row['rep_image'];
        if (url_is_local($thumb_url)) {
            $thumb_url = get_custom_base_url() . '/' . $thumb_url;
        }
        return $thumb_url;
    }

    if (addon_installed('galleries')) {
        $thumb_url = $GLOBALS['SITE_DB']->query_select_value_if_there('images', $prefer_large_image ? 'url' : 'thumb_url', ['cat' => $row['name']]);
        if (!cms_empty_safe($thumb_url)) {
            if (url_is_local($thumb_url)) {
                $thumb_url = get_custom_base_url() . '/' . $thumb_url;
            }
            return $thumb_url;
        }

        $thumb_url = $GLOBALS['SITE_DB']->query_select_value_if_there('videos', 'thumb_url', ['cat' => $row['name']]);
        if (!cms_empty_safe($thumb_url)) {
            if (url_is_local($thumb_url)) {
                $thumb_url = get_custom_base_url() . '/' . $thumb_url;
            }
            return $thumb_url;
        }
    }

    return '';
}
