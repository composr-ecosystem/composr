<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2023

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    core_cns
 */

/**
 * Hook class.
 */
class Hook_content_meta_aware_post extends Hook_CMA
{
    /**
     * Get content type details.
     *
     * @param  ?ID_TEXT $zone The zone to link through to (null: autodetect)
     * @param  boolean $get_extended_data Populate additional data that is somewhat costly to compute (add_url, archive_url)
     * @return ?array Map of content-type info (null: disabled)
     */
    public function info(?string $zone = null, bool $get_extended_data = false) : ?array
    {
        if (get_forum_type() != 'cns' || !isset($GLOBALS['FORUM_DB'])) {
            return null;
        }

        if (($zone === null) && ($get_extended_data)) {
            $zone = get_module_zone('forumview');
            if ($zone === null) {
                return null;
            }
        }

        return [
            'support_custom_fields' => true,

            'content_type_label' => 'cns:FORUM_POST',
            'content_type_universal_label' => 'Forum post',

            'db' => get_db_for('f_posts'),
            'extra_where_sql' => 'p_intended_solely_for IS NULL',
            'table' => 'f_posts',
            'id_field' => 'id',
            'id_field_numeric' => true,
            'parent_category_field' => 'p_topic_id',
            'parent_category_meta_aware_type' => 'topic',
            'is_category' => false,
            'is_entry' => true,
            'category_field' => 'p_cache_forum_id', // For category permissions
            'permission_module' => 'forums', // For category permissions
            'parent_spec__table_name' => 'f_forums',
            'parent_spec__parent_name' => 'f_parent_forum',
            'parent_spec__field_name' => 'id',
            'category_is_string' => false,

            'title_field' => 'p_title',
            'title_field_dereference' => false,
            'description_field' => 'p_post',
            'description_field_dereference' => true,
            'description_field_supports_comcode' => true,
            'image_field' => null,
            'image_field_is_theme_image' => false,
            'alternate_icon_theme_image' => 'icons/menu/social/forum/forums',

            'view_page_link_pattern' => '_SEARCH:topicview:findpost:_WILD',
            'edit_page_link_pattern' => '_SEARCH:topics:edit_post:_WILD',
            'view_category_page_link_pattern' => '_SEARCH:topicview:browse:_WILD',
            'add_url' => null,
            'archive_url' => $get_extended_data ? ($zone . ':forumview') : null,

            'support_url_monikers' => false,

            'views_field' => null,
            'order_field' => null,
            'submitter_field' => 'p_poster',
            'author_field' => null,
            'add_time_field' => 'p_time',
            'edit_time_field' => 'p_last_edit_time',
            'date_field' => 'p_time',
            'validated_field' => 'p_validated',
            'validation_is_minor' => true,

            'seo_type_code' => null,

            'feedback_type_code' => 'post',

            'search_hook' => 'cns_posts',
            'rss_hook' => null,
            'attachment_hook' => 'cns_post',
            'notification_hook' => null,
            'sitemap_hook' => null,

            'addon_name' => 'cns_forum',

            'cms_page' => 'topics',
            'module' => 'forumview',

            'commandr_filesystem_hook' => 'forums',
            'commandr_filesystem__is_folder' => false,

            'support_revisions' => true,

            'support_privacy' => false,

            'support_content_reviews' => false,

            'support_spam_heuristics' => 'post',

            'actionlog_regexp' => '\w+_POST',

            'default_prominence_weight' => PROMINENCE_WEIGHT_NONE,
            'default_prominence_flags' => 0,
        ];
    }

    /**
     * Get content title of a content row.
     *
     * @param  array $row The database row for the content
     * @param  integer $render_type A FIELD_RENDER_* constant
     * @param  boolean $falled_back_to_id Whether this has had to fall back to an ID due to missing title (returned by reference)
     * @param  boolean $resource_fs_style Whether to use the content API as resource-fs requires (may be slightly different)
     * @return mixed Content title (string or Tempcode, depending on $render_type)
     */
    public function get_title(array $row, int $render_type = 1, bool &$falled_back_to_id = false, bool $resource_fs_style = false)
    {
        $falled_back_to_id = false;
        $ret = parent::get_title($row, $render_type, $falled_back_to_id, $resource_fs_style);
        if ($falled_back_to_id) {
            $ret = do_lang('cns:FORUM_POST_NUMBERED', ltrim($ret, '#'));
        }
        return $ret;
    }

    /**
     * Render a content box for a content row.
     *
     * @param  array $row The database row for the content
     * @param  ID_TEXT $zone The zone to display in
     * @param  boolean $give_context Whether to include context (i.e. say WHAT this is, not just show the actual content)
     * @param  boolean $include_breadcrumbs Whether to include breadcrumbs (if there are any)
     * @param  ?ID_TEXT $root Virtual root to use (null: none)
     * @param  boolean $attach_to_url_filter Whether to copy through any filter parameters in the URL, under the basis that they are associated with what this box is browsing
     * @param  ID_TEXT $guid Overridden GUID to send to templates (blank: none)
     * @return Tempcode Results
     */
    public function render_box(array $row, string $zone, bool $give_context = true, bool $include_breadcrumbs = true, ?string $root = null, bool $attach_to_url_filter = false, string $guid = '') : object
    {
        require_code('cns_posts2');

        return render_post_box($row, false, $give_context, $include_breadcrumbs, ($root === null) ? null : intval($root), $guid, null, $zone);
    }
}
