<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    authors
 */

/**
 * Hook class.
 */
class Hook_content_meta_aware_author extends Hook_CMA
{
    /**
     * Get content type details.
     *
     * @param  ?ID_TEXT $zone The zone to link through to (null: autodetect)
     * @param  boolean $get_extended_data Populate additional data that is somewhat costly to compute (add_url, archive_url)
     * @return ?array Map of content-type info (null: disabled)
     */
    public function info(?string $zone = null, bool $get_extended_data = false) : ?array
    {
        if (!addon_installed('authors')) {
            return null;
        }

        return [
            'support_custom_fields' => true,

            'content_type_label' => 'global:AUTHOR',
            'content_type_universal_label' => 'Author',

            'db' => $GLOBALS['SITE_DB'],
            'table' => 'authors',
            'id_field' => 'author',
            'id_field_numeric' => false,
            'parent_category_field' => null,
            'parent_category_meta_aware_type' => null,
            'is_category' => false,
            'is_entry' => true,
            'category_field' => null, // For category permissions
            'permission_module' => null, // For category permissions
            'parent_spec__table_name' => null,
            'parent_spec__parent_name' => null,
            'parent_spec__field_name' => null,
            'category_is_string' => true,

            'title_field' => 'author',
            'title_field_dereference' => false,
            'description_field' => 'the_description',
            'description_field_dereference' => true,
            'description_field_supports_comcode' => true,
            'image_field' => null,
            'image_field_is_theme_image' => false,
            'alternate_icon_theme_image' => 'icons/menu/rich_content/authors',

            'view_page_link_pattern' => '_SEARCH:authors:browse:_WILD',
            'edit_page_link_pattern' => '_SEARCH:cms_authors:_add:_WILD',
            'view_category_page_link_pattern' => null,
            'add_url' => ($get_extended_data && has_submit_permission('mid', get_member(), get_ip_address(), 'cms_authors')) ? (get_module_zone('cms_authors') . ':cms_authors:_add') : null,
            'archive_url' => $get_extended_data ? ((($zone !== null) ? $zone : get_module_zone('authors')) . ':authors') : null,

            'support_url_monikers' => false,

            'views_field' => null,
            'order_field' => null,
            'submitter_field' => null,
            'author_field' => null,
            'add_time_field' => null,
            'edit_time_field' => null,
            'date_field' => null,
            'validated_field' => null,
            'validation_time_field' => null,
            'additional_sort_fields' => null,

            'seo_type_code' => null,

            'feedback_type_code' => null,

            'search_hook' => null,
            'rss_hook' => 'authors',
            'attachment_hook' => 'author',
            'notification_hook' => null,
            'sitemap_hook' => 'author',

            'addon_name' => 'authors',

            'cms_page' => 'cms_authors',
            'module' => 'authors',

            'commandr_filesystem_hook' => 'authors',
            'commandr_filesystem__is_folder' => false,

            'support_revisions' => false,

            'support_privacy' => false,

            'support_content_reviews' => true,

            'support_spam_heuristics' => null,

            'actionlog_regexp' => '\w+_AUTHOR',

            'default_prominence_weight' => PROMINENCE_WEIGHT_NONE,
            'default_prominence_flags' => 0,
        ];
    }

    /**
     * Render a content box for a content row.
     *
     * @param  array $row The database row for the content
     * @param  ID_TEXT $zone The zone to display in
     * @param  boolean $give_context Whether to include context (i.e. say WHAT this is, not just show the actual content)
     * @param  boolean $include_breadcrumbs Whether to include breadcrumbs (if there are any)
     * @param  ?ID_TEXT $root Virtual root to use (null: none)
     * @param  boolean $attach_to_url_filter Whether to copy through any filter parameters in the URL, under the basis that they are associated with what this box is browsing
     * @param  ID_TEXT $guid Overridden GUID to send to templates (blank: none)
     * @return Tempcode Results
     */
    public function render_box(array $row, string $zone, bool $give_context = true, bool $include_breadcrumbs = true, ?string $root = null, bool $attach_to_url_filter = false, string $guid = '') : object
    {
        require_code('authors');

        return render_author_box($row, $zone, $give_context, $guid);
    }
}
