<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2020

 See text/EN/licence.txt for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    downloads
 */

/**
 * Hook class.
 */
class Hook_content_meta_aware_download extends Hook_CMA
{
    /**
     * Get content type details.
     *
     * @param  ?ID_TEXT $zone The zone to link through to (null: autodetect)
     * @param  boolean $get_extended_data Populate additional data that is somewhat costly to compute (add_url, archive_url)
     * @return ?array Map of content-type info (null: disabled)
     */
    public function info($zone = null, $get_extended_data = false)
    {
        if (!addon_installed('downloads')) {
            return null;
        }

        return [
            'support_custom_fields' => true,

            'content_type_label' => 'downloads:DOWNLOAD_NOUN',
            'content_type_universal_label' => 'Download',

            'db' => $GLOBALS['SITE_DB'],
            'table' => 'download_downloads',
            'id_field' => 'id',
            'id_field_numeric' => true,
            'parent_category_field' => 'category_id',
            'parent_category_meta_aware_type' => 'download_category',
            'is_category' => false,
            'is_entry' => true,
            'category_field' => 'category_id', // For category permissions
            'category_type' => 'downloads', // For category permissions
            'parent_spec__table_name' => 'download_categories',
            'parent_spec__parent_name' => 'parent_id',
            'parent_spec__field_name' => 'id',
            'category_is_string' => false,

            'title_field' => 'name',
            'title_field_dereference' => true,
            'description_field' => 'the_description',
            'description_field_dereference' => true,
            'description_field_supports_comcode' => true,
            'thumb_field' => ['rep_image', 'CALL: generate_download_entry_thumb_url'],
            'thumb_field_is_theme_image' => false,
            'alternate_icon_theme_image' => null,

            'view_page_link_pattern' => '_SEARCH:downloads:entry:_WILD',
            'edit_page_link_pattern' => '_SEARCH:cms_downloads:_edit:_WILD',
            'view_category_page_link_pattern' => '_SEARCH:downloads:browse:_WILD',
            'add_url' => ($get_extended_data && has_submit_permission('mid', get_member(), get_ip_address(), 'cms_downloads')) ? (get_module_zone('cms_downloads') . ':cms_downloads:add') : null,
            'archive_url' => $get_extended_data ? ((($zone !== null) ? $zone : get_module_zone('downloads')) . ':downloads') : null,

            'support_url_monikers' => true,

            'views_field' => 'download_views',
            'order_field' => null,
            'submitter_field' => 'submitter',
            'author_field' => 'author',
            'add_time_field' => 'add_date',
            'edit_time_field' => 'edit_date',
            'date_field' => 'add_date',
            'validated_field' => 'validated',

            'seo_type_code' => 'downloads_download',

            'feedback_type_code' => 'downloads',

            'permissions_type_code' => 'downloads', // null if has no permissions

            'search_hook' => 'downloads',
            'rss_hook' => 'downloads',
            'attachment_hook' => null,
            'notification_hook' => 'download',
            'sitemap_hook' => 'download',

            'addon_name' => 'downloads',

            'cms_page' => 'cms_downloads',
            'module' => 'downloads',

            'commandr_filesystem_hook' => 'downloads',
            'commandr_filesystem__is_folder' => false,

            'support_revisions' => false,

            'support_privacy' => true,

            'support_content_reviews' => true,

            'support_spam_heuristics' => 'the_description',

            'actionlog_regexp' => '\w+_DOWNLOAD',

            'default_prominence_weight' => PROMINENCE_WEIGHT_HIGH,
            'default_prominence_flags' => 0,
        ];
    }

    /**
     * Get headings of special relevant data this content type supports.
     *
     * @return array A map of heading codenames to Tempcode labels
     */
    public function get_special_keymap_headings()
    {
        require_lang('downloads');

        $headings = [];

        $headings['entry_count'] = do_lang_tempcode('COUNT_DOWNLOADS');
        $headings['file_size'] = do_lang_tempcode('FILE_SIZE');

        return $headings;
    }

    /**
     * Get special relevant data this content type supports.
     *
     * @param  array $row Database row
     * @return array A map of heading codenames to Tempcode values
     */
    public function get_special_keymap($row)
    {
        $keymap = [];

        $keymap['entry_count'] = escape_html(integer_format($row['num_downloads']));

        $file_size = $row['file_size'];
        $keymap['file_size'] = escape_html(($file_size > 0) ? clean_file_size($file_size) : do_lang('UNKNOWN'));

        return $keymap;
    }

    /**
     * Render a content box for a content row.
     *
     * @param  array $row The database row for the content
     * @param  ID_TEXT $zone The zone to display in
     * @param  boolean $give_context Whether to include context (i.e. say WHAT this is, not just show the actual content)
     * @param  boolean $include_breadcrumbs Whether to include breadcrumbs (if there are any)
     * @param  ?ID_TEXT $root Virtual root to use (null: none)
     * @param  boolean $attach_to_url_filter Whether to copy through any filter parameters in the URL, under the basis that they are associated with what this box is browsing
     * @param  ID_TEXT $guid Overridden GUID to send to templates (blank: none)
     * @return Tempcode Results
     */
    public function render_box($row, $zone, $give_context = true, $include_breadcrumbs = true, $root = null, $attach_to_url_filter = false, $guid = '')
    {
        require_code('downloads');

        return render_download_box($row, true, $include_breadcrumbs, $zone, null, $give_context, ($root === null) ? null : intval($root), $guid);
    }

    /**
     * Get the hook name of an AJAX tree selection list.
     *
     * @return ?string Hook name (null: none)
     */
    public function create_selection_tree_list()
    {
        return 'choose_download';
    }
}

/**
 * Find an entry thumbnail.
 *
 * @param  array $row Database row of entry
 * @param  boolean $prefer_large_image Whether we prefer a larger image
 * @return URLPATH The thumbnail URL (blank: none)
 */
function generate_download_entry_thumb_url($row, $prefer_large_image = false)
{
    if ($row['rep_image'] != '') {
        $thumb_url = $row['rep_image'];
        if (url_is_local($thumb_url)) {
            $thumb_url = get_custom_base_url() . '/' . $thumb_url;
        }
        return $thumb_url;
    }

    if (addon_installed('galleries')) {
        $thumb_url = $GLOBALS['SITE_DB']->query_select_value_if_there('images', $prefer_large_image ? 'url' : 'thumb_url', ['cat' => 'download_' . strval($row['id'])]);
        if (!cms_empty_safe($thumb_url)) {
            if (url_is_local($thumb_url)) {
                $thumb_url = get_custom_base_url() . '/' . $thumb_url;
            }
            return $thumb_url;
        }

        $thumb_url = $GLOBALS['SITE_DB']->query_select_value_if_there('videos', 'thumb_url', ['cat' => 'download_' . strval($row['id'])]);
        if (!cms_empty_safe($thumb_url)) {
            if (url_is_local($thumb_url)) {
                $thumb_url = get_custom_base_url() . '/' . $thumb_url;
            }
            return $thumb_url;
        }
    }

    return '';
}
