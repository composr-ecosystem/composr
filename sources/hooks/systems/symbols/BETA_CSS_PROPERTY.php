<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2019

 See text/EN/licence.txt for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    core
 */

/**
 * Hook class.
 */
class Hook_symbol_BETA_CSS_PROPERTY
{
    /**
     * Run function for symbol hooks. Searches for tasks to perform.
     *
     * @param  array $param Symbol parameters
     * @return string Result
     */
    public function run($param)
    {
        /*
        Properties currently used:
         filter
         flex-wrap
         flex-grow
         order
         user-select
         text-size-adjust
         text-overflow
         touch-action
         appearance

        Property settings currently used:
         display
          flex
        */
        // ^ Also keep in sync with css_beta.php code

        $value = '';

        if (isset($param[0])) {
            // No prefixing needed for these
            $is_supported = array(
                '-o-' => array(
                ),
                '-webkit-' => array(
                ),
                '-ms-' => array(
                ),
                '-moz-' => array(
                ),
            );

            $value = '';
            $matches = array();

            $vendors = array('', '-o-', '-webkit-', '-ms-', '-moz-');
            foreach ($vendors as $prefix) {
                // Skip over some
                if ((strpos($param[0], ':') !== false) && (isset($is_supported[$prefix][substr($param[0], 0, strpos($param[0], ':'))]))) {
                    continue;
                }

                // Normalise
                if (substr(trim($param[0]), -1) != ';') {
                    $value .= '; ';
                }

                // Flexbox is a prefixed extension to an existing one
                if (preg_match('#^display:\s*flex(.*)$#s', $param[0], $matches) != 0) {
                    if ($prefix == '-ms-') {
                        // For IE10 we need an additional option
                        $value .= 'display: -ms-flexbox;';
                        $value .= "\n\t";
                    }

                    $value .= 'display: ' . $prefix . 'flex;';
                    $value .= "\n\t";
                    continue;
                }

                // Most cases
                $value .= $prefix . $param[0];
                $value .= "\n\t";
            }
            $value = rtrim($value);
        }

        return $value;
    }
}
