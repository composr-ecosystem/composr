<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2022

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    cns_multi_moderations
 */

/**
 * Hook class.
 */
class Hook_actionlog_cns_multi_moderations extends Hook_actionlog
{
    /**
     * Get details of action log entry types handled by this hook.
     *
     * @return array Map of handler data in standard format
     */
    public function get_handlers() : array
    {
        if (get_forum_type() != 'cns') {
            return [];
        }

        if (!addon_installed('cns_multi_moderations')) {
            return [];
        }

        require_lang('cns_multi_moderations');

        return [
            'ADD_MULTI_MODERATION' => [
                'flags' => ACTIONLOG_FLAGS_NONE,
                'cma_hook' => 'multi_moderation',
                'identifier_index' => 0,
                'written_context_index' => 1,
                'followup_page_links' => [
                    'EDIT_THIS_MULTI_MODERATION' => '_SEARCH:admin_cns_multi_moderations:_edit:{ID}',
                    'ADD_MULTI_MODERATION' => '_SEARCH:admin_cns_multi_moderations:add',
                ],
            ],
            'EDIT_MULTI_MODERATION' => [
                'flags' => ACTIONLOG_FLAGS_NONE,
                'cma_hook' => 'multi_moderation',
                'identifier_index' => 0,
                'written_context_index' => 1,
                'followup_page_links' => [
                    'EDIT_THIS_MULTI_MODERATION' => '_SEARCH:admin_cns_multi_moderations:_edit:{ID}',
                    'ADD_MULTI_MODERATION' => '_SEARCH:admin_cns_multi_moderations:add',
                ],
            ],
            'DELETE_MULTI_MODERATION' => [
                'flags' => ACTIONLOG_FLAGS_NONE,
                'cma_hook' => 'multi_moderation',
                'identifier_index' => 0,
                'written_context_index' => 1,
                'followup_page_links' => [
                    'ADD_MULTI_MODERATION' => '_SEARCH:admin_cns_multi_moderations:add',
                ],
            ],
            'PERFORM_MULTI_MODERATION' => [
                'flags' => ACTIONLOG_FLAGS_NONE,
                'cma_hook' => 'multi_moderation',
                'identifier_index' => 0,
                'written_context_index' => null,
                'followup_page_links' => [
                    'VIEW_TOPIC' => '_SEARCH:topicview:browse:{1}',
                    'EDIT_THIS_MULTI_MODERATION' => '_SEARCH:admin_cns_multi_moderations:_edit:{ID}',
                ],
            ],
            'IMPORT_STOCK_RESPONSES' => [
                'flags' => ACTIONLOG_FLAGS_NONE,
                'cma_hook' => null,
                'identifier_index' => null,
                'written_context_index' => null,
                'followup_page_links' => [
                    'MULTI_MODERATIONS' => '_SEARCH:admin_cns_multi_moderations',
                ],
            ],
        ];
    }

    /**
     * Get written context for an action log entry handled by this hook.
     *
     * @param  array $actionlog_row Action log row
     * @param  array $handler_data Handler data
     * @param  ?string $identifier Identifier (null: none)
     * @return ?string Written context (null: none)
     */
    protected function get_written_context(array $actionlog_row, array $handler_data, ?string $identifier) : ?string
    {
        switch ($actionlog_row['the_type']) {
            case 'PERFORM_MULTI_MODERATION':
                $_multi_moderation_name = $GLOBALS['FORUM_DB']->query_select_value_if_there('f_multi_moderations', 'mm_name', ['id' => intval($actionlog_row['param_a'])]);
                if ($_multi_moderation_name === null) {
                    $multi_moderation_name = '#' . $actionlog_row['param_a'];
                } else {
                    $multi_moderation_name = get_translated_text($_multi_moderation_name, $GLOBALS['FORUM_DB']);
                }

                $topic_title = $GLOBALS['FORUM_DB']->query_select_value_if_there('f_topics', 't_cache_first_title', ['id' => intval($actionlog_row['param_b'])]);
                if ($topic_title === null) {
                    $topic_title = '#' . $actionlog_row['param_b'];
                }

                $written_context = do_lang('SOMETHING_ON', $multi_moderation_name, $topic_title);
                return $written_context;
        }

        return parent::get_written_context($actionlog_row, $handler_data, $identifier);
    }
}
