<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2019

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    core
 */

/**
 * Hook class.
 */
class Hook_privacy_core extends Hook_privacy_base
{
    /**
     * Find privacy details.
     *
     * @return ?array A map of privacy details in a standardised format (null: disabled)
     */
    public function info()
    {
        return array(
            'cookies' => array(
                'cms_autosave_*' => array(
                    'purpose' => 'References to auto-saved incomplete content',
                ),
                'has_cookies' => array(
                    'purpose' => 'To detect whether cookies are enabled, so we know whether to enable/disable features that need it',
                ),
                'has_js' => (get_option('detect_javascript') == '0') ? null : array(
                    'purpose' => 'To detect whether JavaScript is enabled, so we know whether to enable/disable features that need it',
                ),
                'last_visit' => array(
                    'purpose' => 'When you visited the website last, used for tracking what content is new',
                ),
                get_member_cookie() . ' & ' . get_pass_cookie() => array(
                    'purpose' => 'The "remember me" feature for passwords',
                ),
                get_member_cookie() . '_invisible' => array(
                    'purpose' => 'Whether you have logged in in invisible mode',
                ),
                get_session_cookie() => array(
                    'purpose' => 'Identifies your session so that we temporarily can uniquely link your requests together',
                ),
                'tray_*, hide*, og_*' => array(
                    'purpose' => 'Values (yes/no) for remembering what things have been turned off/closed',
                ),
                'use_wysiwyg' => array(
                    'purpose' => 'Whether the WYSIWYG text editor is enabled',
                ),
                'client_time*' => array(
                    'purpose' => 'To detect your time-zone',
                ),
                'font_size' => array(
                    'purpose' => 'To remember your font size choice',
                ),
                '__ut*, _ga, _gid' => (get_option('google_analytics') == '') ? null : array(
                    'purpose' => 'Analysing visitor trends and tracking the effectiveness of our advertisements',
                ),
            ),

            'positive' => array(
                array(
                    'heading' => 'Personal data deletion',
                    'explanation' => 'Contact us if you wish to have personal data deleted/anonymised from our database. We can delete/anonymise data by username, e-mail address, IP address, or member ID -- specify all that you have so we can maximise deletion.

Exceptions:
 - Some raw log data, or data in backups, will remain with us until it is automatically deleted.
 - Editorial data, such as content you\'ve submitted, will not be deleted as standard -- but you may request that we delete/alter particular content if you specifically identify it.
 - Logged security incidents, or bans, from/on your personal data, will generally not be cleared unless there is what we consider a good reason.
' . (addon_installed('ecommerce') ? ' - Pending transactions with you, such as outstanding invoices or non-delivered orders, or records of your ongoing earned benefits, will generally not be cleared unless there is what we consider a good reason.
' : ''),
                ),
                array(
                    'heading' => 'Personal data download',
                    'explanation' => 'Contact us if you want a copy of all the personal data we have stored on you. We can locate your data by username, e-mail address, IP address, or member ID -- specify all that you have so we can maximise deletion. Raw server logs will generally not be included, unless you specifically request it.',
                ),
                array(
                    'heading' => 'Corrections',
                    'explanation' => 'If you believe data we hold is incorrect and you cannot amend this yourself, you can contact us to request that we make corrections.',
                ),
            ),

            'general' => array(
                (get_option('spam_check_level') == 'NEVER') ? null : array(
                    'heading' => 'Information transfer',
                    'action' => 'IP addresses, e-mail address, and usernames, may be checked against the [url="http://www.stopforumspam.com/"]Stop Forum Spam[/url] web service, which involves these details being transmitted within a service request. If spam activity is detected then the same details may be reported to the service.',
                    'reason' => 'To reduce spam.',
                ),
                ((get_option('spam_check_level') == 'NEVER') || (get_option('stopforumspam_api_key') == '')) ? null : array(
                    'heading' => 'Information transfer',
                    'action' => 'IP addresses may be checked against multiple block lists, which involves these details being transmitted within a service request.',
                    'reason' => 'To reduce spam.',
                ),
                (get_option('recaptcha_site_key') == '') ? null : array(
                    'heading' => 'Information transfer',
                    'action' => 'When submitting forms metadata is sent to Google to verify you are a human.',
                    'reason' => 'Google reCAPTCHA reduces spam because Google is able to use its tracking data to do pattern analysis.',
                ),
                array(
                    'heading' => 'Information storage',
                    'action' => 'User metadata is logged when website activity happens. Metadata may include dates/time, IP address, web browser name, operating system, and account IDs. Log data is automatically deleted on a schedule. Your most recent IP address and visit time will remain a part of your member account.',
                    'reason' => 'So we can track success and failure, and audit user behaviour for security and integrity.',
                ),
                array(
                    'heading' => 'Information storage',
                    'action' => 'Information entered manually into the system, or explicitly authorised, will typically be retained -- although you may request removal.',
                    'reason' => 'This information is key to either material published on the website, or the integrity of user accounts.',
                ),
                array(
                    'heading' => 'Information storage',
                    'action' => 'IP addresses that have been banned will be permanently stored, as will data about suspicious activity.',
                    'reason' => 'We need to be able to permanently ban IP addresses which appear to be abusing our systems.',
                ),
                array(
                    'heading' => 'General',
                    'action' => 'We may occasionally send bulk e-mails about {$SITE_NAME*}, or matters relating to {$SITE_SCOPE*} to our members. We will not send bulk e-mails or allow others to send bulk e-mails, which we believe would be considered spam.',
                    'reason' => 'To keep you informed, and for sales/marketing activity.',
                ),
                array(
                    'heading' => 'Information disclosure',
                    'action' => 'Your online status may be shown publicly' . ((get_option('is_on_invisibility') == '1') ? ', unless you log in in invisibility mode' : '') . '.',
                    'reason' => 'Online status helps foster community communication.',
                ),
            ),

            'database_records' => array(
                'email_bounces' => array(
                    'timestamp_field' => 'b_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array(),
                    'ip_address_fields' => array(),
                    'email_fields' => array('b_email_address'),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'actionlogs' => array(
                    'timestamp_field' => 'date_and_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('member_id'),
                    'ip_address_fields' => array('ip'),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_anonymise,
                ),
                'logged_mail_messages' => array(
                    'timestamp_field' => 'm_date_and_time',
                    'retention_days' => null,//intval(get_option('email_log_store_time')),
                    'retention_handle_method' => PRIVACY_METHOD_leave, // Happens automatically
                    'member_id_fields' => array('m_member_id', 'm_as'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(/*'m_to_email', Not actually a standalone field plus not important due to m_member_id*/'m_from_email', 'm_sender_email'),
                    'additional_anonymise_fields' => array('m_to_name', 'm_from_name'),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'rating' => array(
                    'timestamp_field' => 'rating_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('rating_member'),
                    'ip_address_fields' => array('rating_ip'),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_anonymise,
                ),
                'trackbacks' => array(
                    'timestamp_field' => 'trackback_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array(),
                    'ip_address_fields' => array('trackback_ip'),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'link_tracker' => array(
                    'timestamp_field' => 'c_date_and_time',
                    'retention_days' => intval(get_option('website_activity_store_time')),
                    'retention_handle_method' => PRIVACY_METHOD_anonymise,
                    'member_id_fields' => array('c_member_id'),
                    'ip_address_fields' => array('c_ip_address'),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_anonymise,
                ),
                'failedlogins' => array(
                    'timestamp_field' => 'date_and_time',
                    'retention_days' => intval(get_option('website_activity_store_time')),
                    'retention_handle_method' => PRIVACY_METHOD_anonymise,
                    'member_id_fields' => array(),
                    'ip_address_fields' => array('ip'),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_anonymise,
                ),
                'post_tokens' => array(
                    'timestamp_field' => 'generation_time',
                    'retention_days' => intval(ceil(floatval(get_option('csrf_token_expire_new')) / 24.0)),
                    'retention_handle_method' => PRIVACY_METHOD_delete,
                    'member_id_fields' => array('member_id'),
                    'ip_address_fields' => array('ip_address'),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'sessions' => array(
                    'timestamp_field' => 'last_activity',
                    'retention_days' => intval(ceil(floatval(get_option('session_expiry_time')) / 24.0)),
                    'retention_handle_method' => PRIVACY_METHOD_delete,
                    'member_id_fields' => array('member_id'),
                    'ip_address_fields' => array('ip'),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array('cache_username'),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'attachments' => array(
                    'timestamp_field' => 'a_add_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('a_member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_anonymise,
                ),
                'staff_tips_dismissed' => array(
                    'timestamp_field' => null,
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('t_member'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'member_tracking' => array(
                    'timestamp_field' => 'mt_time',
                    'retention_days' => intval(ceil(floatval(get_option('users_online_time')) / 24.0)),
                    'retention_handle_method' => PRIVACY_METHOD_delete,
                    'member_id_fields' => array('mt_member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array('mt_cache_username'),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'member_zone_access' => array(
                    'timestamp_field' => null,
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'member_page_access' => array(
                    'timestamp_field' => null,
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'member_category_access' => array(
                    'timestamp_field' => null,
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'autosave' => array(
                    'timestamp_field' => 'a_time',
                    'retention_days' => 1,
                    'retention_handle_method' => PRIVACY_METHOD_delete,
                    'member_id_fields' => array('a_member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'comcode_pages' => array(
                    'timestamp_field' => 'p_add_date',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('p_submitter'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_anonymise,
                ),
                'incoming_uploads' => array(
                    'timestamp_field' => 'i_date_and_time',
                    'retention_days' => 2,
                    'retention_handle_method' => PRIVACY_METHOD_delete,
                    'member_id_fields' => array('i_submitter'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'cron_caching_requests' => array(
                    'timestamp_field' => null,
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('c_member'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'cache' => array(
                    'timestamp_field' => 'date_and_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('the_member'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'notifications_enabled' => array(
                    'timestamp_field' => null,
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('l_member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'digestives_tin' => array(
                    'timestamp_field' => 'd_date_and_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('d_from_member_id', 'd_to_member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'digestives_consumed' => array(
                    'timestamp_field' => 'c_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('c_member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'task_queue' => array(
                    'timestamp_field' => null,
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('t_member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'translate' => array(
                    'timestamp_field' => null,
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('source_user'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_anonymise,
                ),
                'edit_pings' => array(
                    'timestamp_field' => 'the_time',
                    'retention_days' => 1,
                    'retention_handle_method' => PRIVACY_METHOD_delete,
                    'member_id_fields' => array('the_member'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_anonymise,
                ),
            ),
        );
    }

    /**
     * Serialise a row.
     *
     * @param  ID_TEXT $table_name Table name
     * @param  array $row Row raw from the database
     * @return array Row in a cleanly serialised format
     */
    public function serialise($table_name, $row)
    {
        $ret = $this->serialise($table_name, $row);

        switch ($table_name) {
            case 'rating':
                require_code('content');
                list($title) = content_get_details($row['rating_for_type'], $row['rating_for_id']);
                $ret += array(
                    'content_title__dereferenced' => $title,
                );
                break;

            case 'trackbacks':
                require_code('content');
                list($title) = content_get_details($row['trackback_for_type'], $row['trackback_for_id']);
                $ret += array(
                    'content_title__dereferenced' => $title,
                );
                break;
        }

        return $ret;
    }

    /**
     * Delete a row.
     *
     * @param  ID_TEXT $table_name Table name
     * @param  array $row Row raw from the database
     */
    public function delete($table_name, $row)
    {
        switch ($table_name) {
            case 'attachments':
                require_code('attachments3');
                _delete_attachment($row['id'], $GLOBALS['SITE_DB']);
                break;

            case 'comcode_pages':
                require_code('zones3');
                delete_cms_page($row['the_zone'], $row['the_page'], 'comcode_custom', false);
                break;

            case 'translate':
                // Deleting not acceptable!
                $this->anonymise($table_name, $row);
                break;

            default:
                $this->delete($table_name, $row);
                break;
        }
    }
}
