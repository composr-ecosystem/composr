<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2019

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    core_cns
 */

/**
 * Hook class.
 */
class Hook_privacy_core_cns extends Hook_privacy_base
{
    /**
     * Find privacy details.
     *
     * @return ?array A map of privacy details in a standardised format (null: disabled)
     */
    public function info()
    {
        return array(
            'cookies' => array(
            ),

            'positive' => array(
                ((get_option('is_on_coppa') == '0') || (get_option('dobs') == '0')) ? null : array(
                    'heading' => 'Child protection',
                    'explanation' => 'In order for children under the age of thirteen to join this website, a parent or guardian must approve it. A notice will be sent, by e-mail, to the e-mail address given when a child joins, which will provide notice on how to approve the membership. This is done for compliance with law across various juridictions.

    The parent or guardian has the option to agree to the collection and use of the child\'s information without consenting to the disclosure of the information to third parties.

    The parent or guardian can review the child\'s personal information, ask to have it deleted and refuse to allow any further collection or use of the child\'s information. This may be done by contacting the staff in the same way as was done to approve the membership originally.',
                ),
                array(
                    'heading' => 'Cookies',
                    'explanation' => 'If you wish to see what exact cookies are saved, or delete cookies, you may do so using [url="standard tools built into your web browser"]http://www.wikihow.com/View-Cookies[/url].',
                ),
                array(
                    'heading' => 'General',
                    'explanation' => 'We will not share private details other than what can be seen in your forum profile and content submission, unless for a reason covered in this policy, or legally required to do so.',
                ),
            ),

            'general' => array(
                array(
                    'heading' => 'Information disclosure',
                    'action' => 'Some of the information you submitted with your account profile will be displayed publicly. This will not include information that many would consider confidential, but rather basic details such as your Username. Additionally, your last activity time will be shown publicly.',
                    'reason' => 'This is fundamental to the social networking capability of this website.',
                ),
                array(
                    'heading' => 'Information disclosure',
                    'action' => 'The staff reserve the right to read any Private Topics and posts placed on this website. Any form of conversation made through this website should be considered viewable by staff. All private-posts and posts, unless deleted by specific request, are stored on the server.',
                    'reason' => 'Information may be reviewed if we feel we have cause for an investigation. Situations involving investigations can be anything at our discretion, for example, to investigate specific incidents of our services being used for racism or harassment.',
                ),
            ),

            'database_records' => array(
                'f_moderator_logs' => array(
                    'timestamp_field' => 'l_date_and_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('l_by'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_anonymise,
                ),
                'f_member_known_login_ips' => array(
                    'timestamp_field' => 'i_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('i_member_id'),
                    'ip_address_fields' => array('i_ip'),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'f_group_join_log' => array(
                    'timestamp_field' => 'join_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'f_invites' => array(
                    'timestamp_field' => 'i_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('i_inviter'),
                    'ip_address_fields' => array(),
                    'email_fields' => array('i_email_address'),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_anonymise,
                ),
                'f_warnings' => array(
                    'timestamp_field' => 'w_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('w_member_id', 'w_by'),
                    'ip_address_fields' => array('p_banned_ip'),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'f_members' => array(
                    'timestamp_field' => 'm_join_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('id'),
                    'ip_address_fields' => array('m_ip_address'),
                    'email_fields' => array('m_email_address'),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'f_posts' => array(
                    'timestamp_field' => 'p_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('p_poster', 'p_intended_solely_for', 'p_last_edit_by'),
                    'ip_address_fields' => array('p_ip_address'),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array('p_poster_name_if_guest'),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_anonymise,
                ),
                'f_password_history' => array(
                    'timestamp_field' => 'p_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('p_member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'f_member_cpf_perms' => array(
                    'timestamp_field' => null,
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'f_group_members' => array(
                    'timestamp_field' => null,
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('gm_member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'f_groups' => array(
                    'timestamp_field' => null,
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('g_group_leader'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_anonymise,
                ),
                'f_forums' => array(
                    'timestamp_field' => null,
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('f_cache_last_member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array('f_cache_last_username'),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_anonymise,
                ),
                'f_topics' => array(
                    'timestamp_field' => 't_cache_first_time',
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('t_pt_from', 't_pt_to', 't_cache_first_member_id', 't_cache_last_member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array('t_cache_first_username', 't_cache_last_username'),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_anonymise,
                ),
                'f_special_pt_access' => array(
                    'timestamp_field' => null,
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('s_member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'f_poll_votes' => array(
                    'timestamp_field' => null,
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('pv_member_id'),
                    'ip_address_fields' => array('pv_ip'),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_anonymise,
                ),
                'f_read_logs' => array(
                    'timestamp_field' => 'l_time',
                    'retention_days' => intval(get_option('post_read_history_days')),
                    'retention_handle_method' => PRIVACY_METHOD_delete,
                    'member_id_fields' => array('l_member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
                'f_group_member_timeouts' => array(
                    'timestamp_field' => null,
                    'retention_days' => null,
                    'retention_handle_method' => PRIVACY_METHOD_leave,
                    'member_id_fields' => array('member_id'),
                    'ip_address_fields' => array(),
                    'email_fields' => array(),
                    'additional_anonymise_fields' => array(),
                    'extra_where' => null,
                    'removal_default_handle_method' => PRIVACY_METHOD_delete,
                ),
            ),
        );
    }

    /**
     * Serialise a row.
     *
     * @param ID_TEXT Table name
     * @param array Row raw from the database
     * @return array Row in a cleanly serialised format
     */
    public function serialise($table_name, $row)
    {
        $ret = serialise($table_name, $row);

        switch ($table_name) {
            case 'TODO':
                $ret += array(
                    'TODO__dereferenced' => get_translated_text($GLOBALS['SITE_DB']->query_select_value('TODO', 'TODO', array('id' => $row['TODO']))),
                );
                break;
        }

        return $ret;
    }

    /**
     * Anonymise a row.
     *
     * @param ID_TEXT Table name
     * @param array Row raw from the database
     */
    public function anonymise($table_name, $row)
    {
        return new TODO;
    }

    /**
     * Delete a row.
     *
     * @param ID_TEXT Table name
     * @param array Row raw from the database
     */
    public function delete($table_name, $row)
    {
        switch ($table_name) {
            case 'TODO':
                require_code('TODO');
                delete_TODO($row['id']);
                break;

            default:
                $this->delete($table_name, $row);
                break;
        }
    }
}
