<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    commandr
 */

/**
 * Hook class.
 */
class Hook_commandr_command_cpf_encrypt
{
    /**
     * Run function for Commandr hooks.
     *
     * @param  array $options The options with which the command was called
     * @param  array $parameters The parameters with which the command was called
     * @param  object $commandr_fs A reference to the Commandr filesystem object
     * @return array Array of stdcommand, stdhtml, stdout, and stderr responses
     */
    public function run(array $options, array $parameters, object &$commandr_fs) : array
    {
        if ((array_key_exists('h', $options)) || (array_key_exists('help', $options))) {
            return ['', do_command_help('cpf_encrypt', ['h'], [true]), '', ''];
        }

        if (get_forum_type() != 'cns') {
            return ['', '', '', do_lang('NO_CNS')];
        }

        require_code('encryption');

        if (!is_encryption_enabled()) {
            return ['', '', '', do_lang('CPF_ENCRYPTION_NOT_AVAILABLE')];
        }

        if (!array_key_exists(0, $parameters)) {
            return ['', '', '', do_lang('MISSING_PARAM', '1', 'cpf_encrypt')];
        }

        $_cpf_id = $parameters[0];
        if (preg_match('#^\d+$#', $_cpf_id) == 0) {
            return ['', '', '', do_lang('_MISSING_RESOURCE', $_cpf_id, 'cpf')];
        }
        $cpf_id = intval($_cpf_id);
        $cpf_type = $GLOBALS['FORUM_DB']->query_select_value_if_there('f_custom_fields', 'cf_type', ['id' => $cpf_id]);
        if ($cpf_type === null) {
            return ['', '', '', do_lang('_MISSING_RESOURCE', $_cpf_id, 'cpf')];
        }
        $encryptable = (strpos($cpf_type, '_text') !== false || strpos($cpf_type, '_trans') !== false || strpos($cpf_type, 'posting') !== false); // See also cpf_decrypt.php and core_cns.js
        if (!$encryptable) {
            return ['', '', '', do_lang('NOT_ENCRYPTABLE_FIELD', $_cpf_id, 'cpf')];
        }

        cms_extend_time_limit(TIME_LIMIT_EXTEND__CRAWL);

        $num_encrypted = 0;

        $start = 0;
        $max = 20;
        do {
            $rows = $GLOBALS['FORUM_DB']->query_select('f_member_custom_fields', ['mf_member_id', 'field_' . $_cpf_id], [], '', $max, $start);
            foreach ($rows as $row) {
                $is_lang_string = is_integer($row['field_' . $_cpf_id]);
                $data = $is_lang_string ? get_translated_text($row['field_' . $_cpf_id], $GLOBALS['FORUM_DB']) : $row['field_' . $_cpf_id];
                if ((!is_data_encrypted($data)) && ($data != '')) {
                    $error_msg = '';
                    $encrypted = encrypt_data($data, $error_msg);
                    if ($error_msg == '') {
                        if ($is_lang_string) {
                            $update_map = lang_remap('field_' . $_cpf_id, $row['field_' . $_cpf_id], $encrypted, $GLOBALS['FORUM_DB']);
                        } else {
                            $update_map = ['field_' . $_cpf_id => $encrypted];
                        }
                        $GLOBALS['FORUM_DB']->query_update('f_member_custom_fields', $update_map, ['mf_member_id' => $row['mf_member_id']], '', 1);
                        $num_encrypted++;
                    } else {
                        return ['', '', '', $error_msg];
                    }
                }
            }
            $start += $max;
        } while (!empty($rows));

        $result = do_lang('CPF_ENCRYPT_RESULT', integer_format($num_encrypted));

        return ['', '', $result, ''];
    }
}
