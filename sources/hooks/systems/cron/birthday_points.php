<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2022

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    points
 */

/**
 * Hook class.
 */
class Hook_cron_birthday_points
{
    protected $this_birthday_day;

    /**
     * Get info from this hook.
     *
     * @param  ?TIME $last_run Last time run (null: never)
     * @param  ?boolean $calculate_num_queued Calculate the number of items queued, if possible (null: the hook may decide / low priority)
     * @return ?array Return a map of info about the hook (null: disabled)
     */
    public function info(?int $last_run, ?bool $calculate_num_queued) : ?array
    {
        if (!addon_installed('points') || get_forum_type() != 'cns') {
            return null;
        }

        // Do not calculate on low priority; can use lots of memory on sites with many members
        if ($calculate_num_queued === null) {
            $calculate_num_queued = false;
        }

        if ($calculate_num_queued) {
            $this->this_birthday_day = date('d/m/Y', tz_time(time(), get_site_timezone()));
            if (get_value('last_birthday_points_day', null, true) !== $this->this_birthday_day) {
                require_code('cns_general');
                $num_queued = count(cns_find_birthdays(null, true, get_site_timezone()));
            } else {
                $num_queued = 0;
            }
        } else {
            $num_queued = null;
        }

        return [
            'label' => 'Send Birthday Wishes (and Points, if applicable)',
            'num_queued' => $num_queued,
            'minutes_between_runs' => 60,
        ];
    }

    /**
     * Run function for system scheduler hooks. Searches for things to do. ->info(..., true) must be called before this method.
     *
     * @param  ?TIME $last_run Last time run (null: never)
     */
    public function run(?int $last_run)
    {
        if (get_value('last_birthday_points_day', null, true) !== $this->this_birthday_day) {
            set_value('last_birthday_points_day', $this->this_birthday_day, true);

            require_lang('points');
            require_code('cns_general');

            $birthday_points = get_option('points_birthday');
            $_birthdays = cns_find_birthdays(null, true, get_site_timezone());

            foreach ($_birthdays as $_birthday) {
                $username = $_birthday['username'];
                $displayname = $GLOBALS['CNS_DRIVER']->get_displayname($username);

                require_code('notifications');

                $subject = do_lang('BIRTHDAY_POINTS_NOTIFICATION_MAIL_SUBJECT', $displayname);

                // Award birthday points if applicable
                if ($birthday_points !== null && $birthday_points != '' && intval($birthday_points) > 0) {
                    $mail = do_notification_lang(
                        'BIRTHDAY_POINTS_NOTIFICATION_MAIL_POINTS',
                        comcode_escape(get_site_name()),
                        comcode_escape($username),
                        comcode_escape(integer_format(intval($birthday_points)))
                    );

                    require_code('points2');

                    system_gift_transfer(do_lang('BIRTHDAY_POINTS'), intval($birthday_points), $_birthday['id']);
                } else {
                    $mail = do_notification_lang(
                        'BIRTHDAY_POINTS_NOTIFICATION_MAIL_NO_POINTS',
                        comcode_escape(get_site_name()),
                        comcode_escape($username)
                    );
                }

                dispatch_notification('birthday_points', null, $subject, $mail, [$_birthday['id']]);
            }
        }
    }
}
