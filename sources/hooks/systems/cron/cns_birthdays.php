<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2023

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    core_cns
 */

/**
 * Hook class.
 */
class Hook_cron_cns_birthdays
{
    protected $this_birthday_day;

    /**
     * Get info from this hook.
     *
     * @param  ?TIME $last_run Last time run (null: never)
     * @param  ?boolean $calculate_num_queued Calculate the number of items queued, if possible (null: the hook may decide / low priority)
     * @return ?array Return a map of info about the hook (null: disabled)
     */
    public function info(?int $last_run, ?bool $calculate_num_queued) : ?array
    {
        if (get_forum_type() != 'cns') {
            return null;
        }

        // Do not calculate on low priority
        if ($calculate_num_queued === null) {
            $calculate_num_queued = false;
        }

        if ($calculate_num_queued) {
            $this->this_birthday_day = date('d/m/Y', tz_time(time(), get_site_timezone()));
            if (get_value('last_birthday_day', null, true) !== $this->this_birthday_day) {
                require_code('cns_general');
                $num_queued = count(cns_find_birthdays(null, true, get_site_timezone()));
            } else {
                $num_queued = 0;
            }
        } else {
            $num_queued = null;
        }

        return [
            'label' => 'Send Member Birthday Notifications',
            'num_queued' => $num_queued,
            'minutes_between_runs' => 60,
        ];
    }

    /**
     * Run function for system scheduler hooks. Searches for things to do. ->info(..., true) must be called before this method.
     *
     * @param  ?TIME $last_run Last time run (null: never)
     */
    public function run(?int $last_run)
    {
        if (get_value('last_birthday_day', null, true) !== $this->this_birthday_day) {
            set_value('last_birthday_day', $this->this_birthday_day, true);

            require_lang('cns');

            require_code('cns_general');
            $_birthdays = cns_find_birthdays(null, true, get_site_timezone());

            $combined_birthdays_mail = '';
            foreach ($_birthdays as $_birthday) {
                $member_url = $GLOBALS['CNS_DRIVER']->member_profile_url($_birthday['id'], true);

                $username = $_birthday['username'];
                $displayname = $GLOBALS['CNS_DRIVER']->get_displayname($username);

                $birthday_url = build_url(['page' => 'topics', 'type' => 'birthday', 'id' => $_birthday['username']], get_module_zone('topics'));

                require_code('notifications');

                $subject = do_lang('BIRTHDAY_NOTIFICATION_MAIL_SUBJECT', get_site_name(), $displayname, $username);
                $mail = do_notification_lang(
                    'BIRTHDAY_NOTIFICATION_MAIL',
                    comcode_escape(get_site_name()),
                    comcode_escape($username),
                    [
                        $member_url->evaluate(),
                        $birthday_url->evaluate(),
                        comcode_escape($displayname),
                    ]
                );

                $combined_birthdays_mail .= do_lang(
                    'COMBINED_BIRTHDAY_NOTIFICATION_MAIL_ITEM',
                    comcode_escape(get_site_name()),
                    comcode_escape($username),
                    [
                        $member_url->evaluate(),
                        $birthday_url->evaluate(),
                        comcode_escape($displayname),
                    ]
                );

                if (addon_installed('chat')) {
                    $friends = $GLOBALS['SITE_DB']->query_select('chat_friends', ['member_likes'], ['member_liked' => $_birthday['id']]);
                    dispatch_notification('chat:cns_friend_birthday', null, $subject, $mail, collapse_1d_complexity('member_likes', $friends));
                }

                if (count($_birthdays) == 1) {
                    dispatch_notification('cns_birthday', null, $subject, $mail);
                }
            }

            if (count($_birthdays) > 1) {
                $combined_birthdays_subject = do_lang('COMBINED_BIRTHDAY_NOTIFICATION_MAIL_SUBJECT', get_site_name(), integer_format(count($_birthdays), 0));
                $combined_birthdays_mail = do_notification_lang('COMBINED_BIRTHDAY_NOTIFICATION_MAIL', comcode_escape(get_site_name()), $combined_birthdays_mail, comcode_escape(integer_format(count($_birthdays), 0)));

                dispatch_notification('cns_birthday', null, $combined_birthdays_subject, $combined_birthdays_mail);
            }
        }
    }
}
