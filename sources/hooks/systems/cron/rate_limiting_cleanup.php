<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    core
 */

/**
 * Hook class.
 */
class Hook_cron_rate_limiting_cleanup
{
    /**
     * Get info from this hook.
     *
     * @param  ?TIME $last_run Last time run (null: never)
     * @param  ?boolean $calculate_num_queued Calculate the number of items queued, if possible (null: the hook may decide / low priority)
     * @return ?array Return a map of info about the hook (null: disabled)
     */
    public function info(?int $last_run, ?bool $calculate_num_queued) : ?array
    {
        global $SITE_INFO;
        $rate_limiting = !empty($SITE_INFO['rate_limit_time_window']) || !empty($SITE_INFO['rate_limiting']);
        if (!$rate_limiting) {
            return null;
        }

        return [
            'label' => 'Cleanup rate limit data',
            'num_queued' => null,
            'minutes_between_runs' => 1,
            'enabled_by_default' => true,
        ];
    }

    /**
     * Run function for system scheduler hooks. Searches for things to do. ->info(..., true) must be called before this method.
     *
     * @param  ?TIME $last_run Last time run (null: never)
     */
    public function run(?int $last_run)
    {
        global $SITE_INFO;

        require_code('files2');

        $time_window = $SITE_INFO['rate_limit_time_window'];

        $rate_limiter_dir = get_custom_file_base() . '/data_custom/rate_limiting';
        $files = get_directory_contents($rate_limiter_dir, $rate_limiter_dir, IGNORE_ACCESS_CONTROLLERS, true, true, ['json']);
        foreach ($files as $file) {
            if (filemtime($file) < (time() - $time_window - 1)) {
                @unlink($file);
            }
        }
    }
}
