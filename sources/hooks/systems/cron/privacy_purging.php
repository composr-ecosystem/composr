<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2019

 See text/EN/licence.txt for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    core_privacy
 */

/**
 * Hook class.
 */
class Hook_cron_privacy_purging
{
    /**
     * Get info from this hook.
     *
     * @param  ?TIME $last_run Last time run (null: never)
     * @param  boolean $calculate_num_queued Calculate the number of items queued, if possible
     * @return ?array Return a map of info about the hook (null: disabled)
     */
    public function info($last_run, $calculate_num_queued)
    {
        return array(
            'label' => 'Privacy purging (database)',
            'num_queued' => null,
            'minutes_between_runs' => 60 * 24,
        );
    }

    /**
     * Run function for system scheduler scripts. Searches for things to do. ->info(..., true) must be called before this method.
     *
     * @param  ?TIME $last_run Last time run (null: never)
     */
    public function run($last_run)
    {
        disable_php_memory_limit();

        require_code('privacy');

        $hook_obs = find_all_hook_obs('systems', 'privacy', 'Hook_privacy_');
        foreach ($hook_obs as $hook_ob) {
            $details = $hook_ob->info();
            if ($details !== null) {
                foreach ($details['database_records'] as $table_name => $table_details) {
                    if ($table_details['retention_handle_method'] != PRIVACY_METHOD_leave) {
                        $table_action = $table_details['retention_handle_method'];
                        $this->handle_for_table($hook_ob, $table_name, $table_details, $table_action);
                    }
                }
            }
        }
    }

    /**
     * Run the task hook.
     *
     * @param  object $hook_ob Privacy object
     * @param  string $table_name Table name
     * @param  array $table_details Table details
     * @param  integer $table_action A PRIVACY_METHOD_* constant
     */
    protected function handle_for_table($hook_ob, $table_name, $table_details, $table_action)
    {
        $db = get_db_for($table_name);

        $selection_sql = $hook_ob->get_selection_sql($table_name, $table_details);
        $sql = 'SELECT FROM ' . $db->get_table_prefix() . $table_name;
        $sql .= $selection_sql;
        $sql .= ' AND ' . $table_details['timestamp_field'] . '<=' . strval(time() - 60 * 60 * 24 * $table_details['retention_days']);
        $rows = $db->query($sql);

        foreach ($rows as $row) {
            switch ($table_action) {
                case PRIVACY_METHOD_anonymise:
                    $hook_ob->anonymise($table_name, $row);
                    break;

                case PRIVACY_METHOD_delete:
                    $hook_ob->delete($table_name, $row);
                    break;
            }
        }
    }
}
