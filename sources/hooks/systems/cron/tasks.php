<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2021

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    core
 */

/**
 * Hook class.
 */
class Hook_cron_tasks
{
    /**
     * Get info from this hook.
     *
     * @param  ?TIME $last_run Last time run (null: never)
     * @param  boolean $calculate_num_queued Calculate the number of items queued, if possible
     * @return ?array Return a map of info about the hook (null: disabled)
     */
    public function info(?int $last_run, bool $calculate_num_queued) : ?array
    {
        if (GOOGLE_APPENGINE) { // GAE has its own external task queue
            return null;
        }

        return [
            'label' => 'Run queued background tasks',
            'num_queued' => $calculate_num_queued ? $GLOBALS['SITE_DB']->query_select_value('task_queue', 'COUNT(*)') : null,
            'minutes_between_runs' => 0,
        ];
    }

    /**
     * Show a tooltip of further details about the queue.
     *
     * @return Tempcode Queue details
     */
    public function queued_details_tooltip() : object
    {
        $rows = $GLOBALS['SITE_DB']->query_select('task_queue', ['id', 't_title', 't_member_id', 't_locked', 't_add_time'], [], 'ORDER BY t_add_time');

        require_code('templates_columned_table');
        $header_row = columned_table_header_row([
            do_lang_tempcode('IDENTIFIER'),
            do_lang_tempcode('TITLE'),
            do_lang_tempcode('MEMBER'),
            do_lang_tempcode('CURRENT'),
            do_lang_tempcode('ADDED'),
        ]);

        $_rows = new Tempcode();
        foreach ($rows as $row) {
            $_rows->attach(columned_table_row([
                '#' . strval($row['id']),
                $row['t_title'],
                $GLOBALS['FORUM_DRIVER']->get_username($row['t_member_id']),
                do_lang_tempcode(($row['t_locked'] == 1) ? 'YES' : 'NO'),
                do_lang_tempcode('_AGO', escape_html(display_time_period(time() - $row['t_add_time']))),
            ], false));
        }

        return do_template('COLUMNED_TABLE', ['HEADER_ROW' => $header_row, 'ROWS' => $_rows]);
    }

    /**
     * Run function for system scheduler scripts. Searches for things to do. ->info(..., true) must be called before this method.
     *
     * @param  ?TIME $last_run Last time run (null: never)
     */
    public function run(?int $last_run)
    {
        require_code('tasks');

        $task_rows = $GLOBALS['SITE_DB']->query_select('task_queue', ['*'], ['t_locked' => 0]);
        foreach ($task_rows as $task_row) {
            $GLOBALS['SITE_DB']->query_update(
                'task_queue',
                [
                    't_locked' => 1,
                ],
                [
                    'id' => $task_row['id'],
                ],
                '',
                1
            );

            require_code('files');
            //$url = find_script('tasks') . '?id=' . strval($task_row['id']) . '&secure_ref=' . urlencode($task_row['t_secure_ref']);
            //http_get_contents($url);
            execute_task_background($task_row);
        }
    }
}
