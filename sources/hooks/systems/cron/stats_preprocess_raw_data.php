<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    stats
 */

/**
 * Hook class.
 */
class Hook_cron_stats_preprocess_raw_data
{
    protected const END_TIME_CUTOFF = 24 * 60 * 60; // Only process up to one day at a time to avoid server freezes.
    protected const INITIAL_BACK_TIME = 24 * 60 * 60 * 31; // Don't calculate stats older than 31 days ago to prevent server freezes.

    /**
     * Get info from this hook.
     *
     * @param  ?TIME $last_run Last time run (null: never)
     * @param  ?boolean $calculate_num_queued Calculate the number of items queued, if possible (null: the hook may decide / low priority)
     * @return ?array Return a map of info about the hook (null: disabled)
     */
    public function info(?int $last_run, ?bool $calculate_num_queued) : ?array
    {
        if (!addon_installed('stats')) {
            return null;
        }

        return [
            'label' => 'Stats preprocessing',
            'num_queued' => null,
            'minutes_between_runs' => 60,
            'enabled_by_default' => true,
        ];
    }

    /**
     * Run function for system scheduler hooks. Searches for tasks to perform.
     */
    public function run()
    {
        $start_time = null;
        $_start_time = get_value('stats__last_processed', null, true);

        // LEGACY: 11.beta7
        if ($_start_time === null) {
            $_start_time = get_value('stats__last_day_processed', null, true);
            if ($_start_time !== null) {
                list($year, $month, $day) = array_map('intval', explode('-', $_start_time));
                $start_time = cms_mktime(0, 0, 0, $month, $day, $year);
                $start_time = tz_time($start_time, get_server_timezone());
                delete_value('stats__last_day_processed', true);

                $_start_time = strval($start_time);
            }
        }

        if ($_start_time === null) {
            require_code('global4');
            $start_time = get_site_start_time();
        } else {
            $start_time = intval($_start_time);
        }

        // Do not process too far back
        if ($start_time < (time() - self::INITIAL_BACK_TIME)) {
            $start_time = (time() - self::INITIAL_BACK_TIME);
        }

        /*
            NB: We subtract 1 second due to an edge case; the current second is not over yet, so additional stats (especially views)
            that happen this second might later get logged. If we process this second now, those views / stats might get neglected.
        */
        $end_time = (time() - 1);

        // Do not process too much at once
        if (($end_time - $start_time) > self::END_TIME_CUTOFF) {
            $end_time = ($start_time + self::END_TIME_CUTOFF);
        }

        if ($end_time > $start_time) {
            require_code('global3');
            cms_profile_start_for('Hook_cron_stats_preprocess_raw_data');

            push_query_limiting(false);
            disable_php_memory_limit();

            require_code('stats');
            require_lang('stats');

            $hook_obs = find_all_hooks('modules', 'admin_stats');
            foreach (array_keys($hook_obs) as $hook_name) {
                preprocess_raw_data_for($hook_name, $start_time, $end_time);
            }

            set_value('stats__last_processed', strval($end_time), true);

            // Send KPI notifications...

            send_kpi_notifications();

            pop_query_limiting();

            cms_profile_end_for('Hook_cron_stats_preprocess_raw_data');
        }
    }
}
