<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    core_cns
 */

/**
 * Hook class.
 */
class Hook_endpoint_authorization_members
{
    /**
     * Run an endpoint authorisation.
     *
     * @param  array $authorizations Array of authorizations allowed by this call
     * @param  ?MEMBER $member The authorised member ID, passed by reference (null: we did not authorise to a specific member)
     * @param  ID_TEXT $hook_type The endpoint hook type called
     * @param  ID_TEXT $hook The endpoint hook called
     * @param  ?ID_TEXT $type The type of endpoint request made (null: none)
     * @param  ?ID_TEXT $id The resource ID requested in the endpoint call (null: none)
     * @return boolean Whether this call is authorised; false means check other authorisation hooks if applicable or throw access denied
     */
    public function run(array $authorizations, ?int &$member, string $hook_type, string $hook, ?string $type, ?string $id) : bool
    {
        // Exit if requested authorizations do not include member ones
        $handles = ['member', 'staff', 'super_admin'];
        if (empty(array_intersect($handles, $authorizations))) {
            return false;
        }

        $authorized = false;

        // Try header authorization
        if ($member === null) {
            if (!@cms_empty_safe($_SERVER['PHP_AUTH_USER']) && !@cms_empty_safe($_SERVER['PHP_AUTH_PW'])) {
                $login_array = $GLOBALS['FORUM_DRIVER']->authorise_login($_SERVER['PHP_AUTH_USER'], null, $_SERVER['PHP_AUTH_PW']);
                $member = $login_array['id'];
            }
        }

        // Try device/cookie authorization (the endpoint script would have already transferred POSTed cookie info into the COOKIE variables of PHP by now)
        if ($member === null) {
            $login_array = $GLOBALS['FORUM_DRIVER']->authorise_cookie_login();
            $member = $login_array['id'];
        }

        // Try session authorization
        if ($member === null) {
            require_code('users');

            $session = get_session_id(true);
            if ($session != '') {
                global $SESSION_CACHE;
                if (isset($SESSION_CACHE[$session])) {
                    $authorized = true;
                    $member = $SESSION_CACHE[$session]['member_id'];
                }
            }
        }

        // Check access level of the member if we got a member
        if ($member !== null) {
            if (in_array('member', $authorizations)) {
                $authorized = !is_guest($member); // Guests are never authorized
            } elseif (in_array('staff', $authorizations)) {
                $authorized = $GLOBALS['FORUM_DRIVER']->is_staff($member);
            } elseif (in_array('super_admin', $authorizations)) {
                $authorized = $GLOBALS['FORUM_DRIVER']->is_super_admin($member);
            }
        } else {
            $authorized = false;
        }

        return $authorized;
    }
}
