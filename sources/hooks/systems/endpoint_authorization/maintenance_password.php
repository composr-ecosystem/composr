<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    core
 */

/**
 * Hook class.
 */
class Hook_endpoint_authorization_maintenance_password
{
    /**
     * Run an endpoint authorisation.
     *
     * @param  array $authorizations Array of authorizations allowed by this call
     * @param  ?MEMBER $member The authorised member ID, passed by reference (null: we did not authorise to a specific member)
     * @param  ID_TEXT $hook_type The endpoint hook type called
     * @param  ID_TEXT $hook The endpoint hook called
     * @param  ?ID_TEXT $type The type of endpoint request made (null: none)
     * @param  ?ID_TEXT $id The resource ID requested in the endpoint call (null: none)
     * @return boolean Whether this call is authorised; false means check other authorisation hooks if applicable or throw access denied
     */
    public function run(array $authorizations, ?int &$member, string $hook_type, string $hook, ?string $type, ?string $id) : bool
    {
        // Exit if requested authorizations do not include member ones
        $handles = ['maintenance_password'];
        if (empty(array_intersect($handles, $authorizations))) {
            return false;
        }

        // Make sure a header was provided
        if (preg_match('#^Basic #', $_SERVER['HTTP_AUTHORIZATION']) !== 0) {
            return false;
        }

        $authorized = false;

        $password_given = base64_decode(substr($_SERVER['HTTP_AUTHORIZATION'], 6));

        // Strip STRING_MAGIC_NULL_BASE64 if it exists
        if (strpos($password_given, STRING_MAGIC_NULL_BASE64) === 0) {
            $password_given = substr($password_given, (strlen(STRING_MAGIC_NULL_BASE64) + 1)); //+1 because of the colon after STRING_MAGIC_NULL_BASE64
        }

        // Validate given password
        require_code('crypt_maintenance');
        if (check_maintenance_password($password_given, true)) {
            $authorized = true;

            // Authorise as the first admin user
            require_code('users_active_actions');
            $member = get_first_admin_user();
        }

        return $authorized;
    }
}
