<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2022

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    core_cns
 */

/**
 * Hook class.
 */
class Hook_profiles_tabs_edit_delete
{
    /**
     * Find whether this hook is active.
     *
     * @param  MEMBER $member_id_of The ID of the member who is being viewed
     * @param  MEMBER $member_id_viewing The ID of the member who is doing the viewing
     * @return boolean Whether this hook is active
     */
    public function is_active(int $member_id_of, int $member_id_viewing) : bool
    {
        return has_privilege($member_id_viewing, 'delete_account') && (($member_id_of == $member_id_viewing) || (has_privilege($member_id_viewing, 'assume_any_member')));
    }

    /**
     * Render function for profile tabs edit hooks.
     *
     * @param  MEMBER $member_id_of The ID of the member who is being viewed
     * @param  MEMBER $member_id_viewing The ID of the member who is doing the viewing
     * @param  boolean $leave_to_ajax_if_possible Whether to leave the tab contents null, if this hook supports it, so that AJAX can load it later
     * @return ?array A tuple: The tab title, the tab body text (may be blank), the tab fields, extra JavaScript (may be blank) the suggested tab order, hidden fields (optional) (null: if $leave_to_ajax_if_possible was set), the icon
     */
    public function render_tab(int $member_id_of, int $member_id_viewing, bool $leave_to_ajax_if_possible = false) : ?array
    {
        $memory_debugging = (get_param_integer('keep_show_loading', 0) == 1);
        if ($memory_debugging) {
            $usage_before = memory_get_usage();
        }

        $title = do_lang_tempcode('DELETE');

        $order = 200;

        // Actualiser
        $delete_account = post_param_integer('delete', 0);
        if ($delete_account == 1) {
            if (is_guest($member_id_of)) {
                warn_exit(do_lang_tempcode('INTERNAL_ERROR'));
            }

            require_code('cns_members_action');
            require_code('cns_members_action2');

            cns_delete_member($member_id_of);

            inform_exit(do_lang_tempcode('SUCCESS'));
        }

        if ($leave_to_ajax_if_possible) {
            return null;
        }

        // UI fields
        $username = $GLOBALS['FORUM_DRIVER']->get_username($member_id_of);

        $text = paragraph(do_lang_tempcode('_DELETE_MEMBER' . (($member_id_of == $member_id_viewing) ? '_SUICIDAL' : ''), escape_html($username), escape_html(strval($member_id_of))));

        if ($member_id_of != $member_id_viewing) {
            $alternate_actions = new Tempcode();

            $merge_url = build_url(['page' => 'admin_cns_merge_members', 'from' => $username, 'to' => $GLOBALS['FORUM_DRIVER']->get_username(get_member())], get_module_zone('admin_cns_merge_members'));

            if (has_privilege($member_id_of, 'comcode_dangerous')) {
                $text->attach(paragraph(do_lang_tempcode('_DELETE_MEMBER_ADMIN', escape_html($merge_url->evaluate()))));
            }

            $alternate_actions->attach(paragraph(do_lang_tempcode('_DELETE_MEMBER_MERGE', escape_html($merge_url->evaluate()))));

            if (addon_installed('search')) {
                $search_url = build_url(['page' => 'search', 'type' => 'results', 'author' => $username], get_module_zone('search'));
                $alternate_actions->attach(paragraph(do_lang_tempcode('_DELETE_MEMBER_SEARCH', escape_html($search_url->evaluate()))));
            }

            if (addon_installed('cns_warnings')) {
                $warn_url = build_url(['page' => 'warnings', 'member_id' => $member_id_of], get_module_zone('warnings'));
                $alternate_actions->attach(paragraph(do_lang_tempcode('_DELETE_MEMBER_WARNING', escape_html($warn_url->evaluate()))));
            }

            $privacy_url = build_url(['page' => 'admin_privacy', 'type' => 'browse', 'member_id' => $member_id_of], get_module_zone('admin_privacy'));
            $alternate_actions->attach(paragraph(do_lang_tempcode('_DELETE_MEMBER_PRIVACY_PURGE', escape_html($privacy_url->evaluate()))));

            $text->attach(put_in_standard_box($alternate_actions, do_lang_tempcode('ALTERNATE_ACTIONS')));
        }

        if (addon_installed('ecommerce')) {
            $subscriptions_count = $GLOBALS['SITE_DB']->query_select_value('ecom_subscriptions', 'COUNT(*)', ['s_member_id' => $member_id_of, 's_state' => 'active']);
            if ($subscriptions_count > 0) {
                $text->attach(paragraph(do_lang_tempcode('MEMBER_HAS_SUBSCRIPTIONS', escape_html($username))));
            }
        }

        $fields = new Tempcode();
        require_code('form_templates');
        $fields->attach(form_input_tick(do_lang_tempcode(($member_id_of != $member_id_viewing) ? 'DELETE_WITHOUT_MERGING' : 'DELETE'), do_lang_tempcode('DESCRIPTION_DELETE'), 'delete', false));

        require_javascript('core_cns');
        $js_function_calls = ['hookProfilesTabsEditDeleteRenderTab'];

        if ($memory_debugging) {
            require_code('files');
            $usage_after = memory_get_usage();
            $text->attach(paragraph('Memory debugging: ' . clean_file_size($usage_after - $usage_before) . ' used, now at ' . clean_file_size($usage_after)));
        }

        return [$title, $fields, $text, $js_function_calls, $order, null, 'tabs/member_account/edit/delete'];
    }
}
