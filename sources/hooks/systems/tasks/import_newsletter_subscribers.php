<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2019

 See text/EN/licence.txt for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    newsletter
 */

/**
 * Hook class.
 */
class Hook_task_import_newsletter_subscribers
{
    /**
     * Run the task hook.
     *
     * @param  LANGUAGE_NAME $_language The language for subscribers
     * @param  AUTO_LINK $newsletter_id The newsletter being imported into
     * @param  boolean $subscribe Whether we are subscribing the member (true=adding, false=removing)
     * @param  PATH $path The path of the file to import
     * @param  ?string $filename The filename of the file to import (null: detect from $path)
     * @return ?array A tuple of at least 2: Return mime-type, content (either Tempcode, or a string, or a filename and file-path pair to a temporary file), map of HTTP headers if transferring immediately, map of ini_set commands if transferring immediately (null: show standard success message)
     */
    public function run($_language, $newsletter_id, $subscribe, $path, $filename = null)
    {
        if (!addon_installed('newsletter')) {
            return null;
        }

        set_mass_import_mode();

        require_lang('cns');
        require_lang('newsletter');
        require_code('newsletter');

        $done_special_notice = false;

        push_query_limiting(false);

        require_code('files_spreadsheets_read');
        $sheet_reader = spreadsheet_open_read($path, $filename, CMS_Spreadsheet_Reader::ALGORITHM_RAW);

        $email_address_index = 0;
        $forename_index = null;
        $surname_index = null;
        $name_index = null;
        $hash_index = null;
        $language_index = null;
        $salt_index = null;
        $code_confirm_index = null;
        $join_time_index = null;

        $count = 0;
        $count2 = 0;

        // Process data
        $i = 0;
        while (($spreadsheet_line = $sheet_reader->read_row()) !== false) {
            // If this looks like a header row, try and detect columns using it (if we don't have a header row we won't be able to import anything)
            if (($i == 0) && (count($spreadsheet_line) >= 1) && (($email_address_index === null) || (!isset($spreadsheet_line[$email_address_index])) || (strpos($spreadsheet_line[$email_address_index], '@') === false))) {
                list($email_address_index, $forename_index, $surname_index, $name_index, , $hash_index, $language_index, $salt_index, $code_confirm_index, $join_time_index) = detect_newsletter_spreadsheet_columns($spreadsheet_line);
                $i++;
                continue;
            }

            task_log($this, 'Processing record', $i);

            $i++;

            if ((count($spreadsheet_line) >= 1) && ($email_address_index !== null) && (isset($spreadsheet_line[$email_address_index])) && (strpos($spreadsheet_line[$email_address_index], '@') !== false)) {
                $email_address = $spreadsheet_line[$email_address_index];

                $forename = (($forename_index !== null) && (array_key_exists($forename_index, $spreadsheet_line))) ? $spreadsheet_line[$forename_index] : '';
                if ($forename == $email) {
                    $forename = ucfirst(strtolower(preg_replace('#^(\w+)([^\w].*)?$#', '\\1', $forename)));
                    if (in_array($forename, array('Sales', 'Info', 'Business', 'Enquiries', 'Admin', 'Webmaster'))) {
                        $forename = '';
                    }
                }

                $surname = (($surname_index !== null) && (array_key_exists($surname_index, $spreadsheet_line))) ? $spreadsheet_line[$surname_index] : '';

                $name = (($name_index !== null) && (array_key_exists($name_index, $spreadsheet_line))) ? $spreadsheet_line[$name_index] : '';

                $hash = (($hash_index !== null) && (array_key_exists($hash_index, $spreadsheet_line))) ? $spreadsheet_line[$hash_index] : '';

                $salt = (($salt_index !== null) && (array_key_exists($salt_index, $spreadsheet_line))) ? $spreadsheet_line[$salt_index] : '';

                $language = (($language_index !== null) && (array_key_exists($language_index, $spreadsheet_line)) && ((file_exists(get_custom_file_base() . '/lang/' . $spreadsheet_line[$language_index])) || (file_exists(get_custom_file_base() . '/lang_custom/' . $spreadsheet_line[$language_index])))) ? $spreadsheet_line[$language_index] : $_language;
                if ($language == '') {
                    $language = $_language;
                }

                $code_confirm = (($code_confirm_index !== null) && (array_key_exists($code_confirm_index, $spreadsheet_line))) ? intval($spreadsheet_line[$code_confirm_index]) : 0;

                $join_time = (($join_time_index !== null) && (!empty($spreadsheet_line[$join_time_index]))) ? strtotime($spreadsheet_line[$join_time_index]) : time();
                if ($join_time === false) {
                    $join_time = time();
                }

                if ($newsletter_id == -1) {
                    $test = $GLOBALS['FORUM_DB']->query_select_value_if_there('f_members', 'id', array('m_email_address' => $email_address));
                    if ($test === null) {
                        if ($subscribe) {
                            if (!$done_special_notice) {
                                attach_message(do_lang_tempcode('NEWSLETTER_WONT_IMPORT_MEMBERS'), 'notice');
                                $done_special_notice = true;
                            }
                        }
                    } else {
                        if ($subscribe) {
                            $GLOBALS['FORUM_DB']->query_update('f_members', array('m_allow_emails_from_staff' => 1), array('m_email_address' => $email_address), '', 1);
                        } else {
                            $GLOBALS['FORUM_DB']->query_update('f_members', array('m_allow_emails_from_staff' => 0), array('m_email_address' => $email_address), '', 1);
                            $count++;
                        }
                    }
                } else {
                    $test = $GLOBALS['SITE_DB']->query_select_value_if_there('newsletter_subscribers', 'id', array('email' => $email_address));
                    if ($test === null) {
                        add_newsletter_subscriber($email_address, $join_time, $code_confirm, $hash, $salt, $language, $forename, $surname);

                        if ($subscribe) {
                            $count++;
                        }
                    } else {
                        if (($forename != '') || ($surname != '')) {
                            edit_newsletter_subscriber($test, null, null, null, null, null, null, $forename, $surname);
                        }

                        if (!$subscribe) {
                            $count++;
                        }
                    }

                    // In case $email is already a subscriber, we delete first
                    $GLOBALS['SITE_DB']->query_delete('newsletter_subscribe', array(
                        'newsletter_id' => $newsletter_id,
                        'email' => $email_address,
                    ), '', 1);
                    if ($subscribe) {
                        $GLOBALS['SITE_DB']->query_insert('newsletter_subscribe', array(
                            'newsletter_id' => $newsletter_id,
                            'email' => $email_address,
                        ), false, true/*in case already exists*/);
                    }
                }

                $count2++;
            }
        } while (!empty($_spreadsheet_data));

        $sheet_reader->close();

        if ($subscribe) {
            $message = do_lang_tempcode('NEWSLETTER_IMPORTED_THIS', escape_html(integer_format($count)), escape_html(integer_format($count2)));
        } else {
            $message = do_lang_tempcode('NEWSLETTER_REMOVED_THIS', escape_html(integer_format($count)), escape_html(integer_format($count2)));
        }

        @unlink($path);
        return array('text/html', $message);
    }
}
