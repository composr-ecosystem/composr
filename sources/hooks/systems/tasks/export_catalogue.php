<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2019

 See text/EN/licence.txt for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    catalogues
 */

/**
 * Hook class.
 */
class Hook_task_export_catalogue
{
    /**
     * Run the task hook.
     *
     * @param  ID_TEXT $catalogue_name The catalogue to export
     * @return ?array A tuple of at least 2: Return mime-type, content (either Tempcode, or a string, or a filename and file-path pair to a temporary file), map of HTTP headers if transferring immediately, map of ini_set commands if transferring immediately (null: show standard success message)
     */
    public function run($catalogue_name)
    {
        if (!addon_installed('catalogues')) {
            return null;
        }

        require_code('catalogues');

        $catalogue_row = $GLOBALS['SITE_DB']->query_select('catalogues', array('*'), array('c_name' => $catalogue_name));
        if ($catalogue_row === null) {
            $catalogue_row = array();
        }
        if (isset($catalogue_row[0])) {
            $catalogue_row = $catalogue_row[0];
        }

        $category_names = array();

        require_code('files_spreadsheets_write');
        $filename = $catalogue_name . '-' . date('Y-m-d') . '.' . spreadsheet_write_default();
        $outfile_path = null;
        $sheet_writer = spreadsheet_open_write($outfile_path, $filename, CMS_Spreadsheet_Writer::ALGORITHM_RAW);

        $fields = $GLOBALS['SITE_DB']->query_select('catalogue_fields', array('*'), array('c_name' => $catalogue_name), 'ORDER BY cf_order,' . $GLOBALS['SITE_DB']->translate_field_ref('cf_name'));
        global $CAT_FIELDS_CACHE;
        $CAT_FIELDS_CACHE[$catalogue_name] = $fields;
        $header_row = array('ID', 'CATEGORY');
        foreach ($fields as $k) {
            $header_row[] = get_translated_text($k['cf_name']);
        }
        $sheet_writer->write_row($header_row);

        $num_rows = $GLOBALS['SITE_DB']->query_select_value('catalogue_entries', 'COUNT(*)', array('c_name' => $catalogue_name));

        $start = 0;
        do {
            $entry_rows = $GLOBALS['SITE_DB']->query_select('catalogue_entries', array('*'), array('c_name' => $catalogue_name), 'ORDER BY ce_add_date ASC', 4000, $start);

            foreach ($entry_rows as $i => $entry_row) {
                task_log($this, 'Exporting catalogue row', $i, $num_rows);

                if ($entry_row === null) {
                    $entry_row = array();
                }
                if (isset($entry_row[0])) {
                    $entry_row = $entry_row[0];
                }

                $details = get_catalogue_entry_field_values($catalogue_name, $entry_row);

                if (!isset($category_names[$entry_row['cc_id']])) {
                    if (!array_key_exists($entry_row['cc_id'], $category_names)) {
                        $category_names[$entry_row['cc_id']] = get_translated_text($GLOBALS['SITE_DB']->query_select_value('catalogue_categories', 'cc_title', array('id' => $entry_row['cc_id'])));
                    }
                }

                $row = array($entry_row['id'], $category_names[$entry_row['cc_id']]);
                foreach ($details as $val) {
                    $row[] = $val['effective_value_pure'];
                }

                $sheet_writer->write_row($row);
            }

            $start += 4000;
        } while (count($entry_rows) != 0);
        $sheet_writer->close();

        $headers = array();
        $headers['Content-type'] = $sheet_writer->get_mime_type();
        $headers['Content-Disposition'] = 'attachment; filename="' . escape_header($filename) . '"';

        $ini_set = array();
        $ini_set['ocproducts.xss_detect'] = '0';

        return array($sheet_writer->get_mime_type(), array($filename, $outfile_path), $headers, $ini_set);
    }
}
