<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2022

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    ecommerce
 */

/**
 * Hook class.
 */
class Hook_task_export_ecom_sales
{
    /**
     * Run the task hook.
     *
     * @param  ID_TEXT $filter_username Filter transactions by username (blank: do not filter)
     * @param  ID_TEXT $filter_txn_id Filter by transaction ID (blank: do not filter)
     * @param  LONG_TEXT $_filter_type_code Filter by comma-delimited product type codes (blank: do not filter)
     * @param  ?TIME $filter_start Filter out all transactions before the given time (null: do not filter)
     * @param  ?TIME $filter_end Filter out all transactions after the given time (null: do not filter)
     * @param  ?string $file_type The file type to export with (null: default)
     * @return ?array A tuple of at least 2: Return mime-type, content (either Tempcode, or a string, or a filename and file-path pair to a temporary file), map of HTTP headers if transferring immediately, map of ini_set commands if transferring immediately (null: show standard success message)
     */
    public function run(string $filter_username = '', string $filter_txn_id = '', string $_filter_type_code = '', ?int $filter_start = null, ?int $filter_end = null, ?string $file_type = null) : ?array
    {
        if (!addon_installed('ecommerce')) {
            return null;
        }

        require_code('ecommerce');

        // Build WHERE query and filename
        $where = '1=1';
        $end_filename = '';
        $filter_type_code = explode(',', $_filter_type_code);
        if ($filter_username != '') {
            $member_id = $GLOBALS['FORUM_DRIVER']->get_member_from_username($filter_username);
            if ($member_id !== null) {
                $where .= ' AND member_id=' . strval($member_id);
                $end_filename .= '_' . $filter_username;
            }
        }
        if ($filter_txn_id != '') {
            $end_filename .= '_' . $filter_txn_id;
            $where .= ' AND (' . db_string_equal_to('t_id', $filter_txn_id) . ' OR ' . db_string_equal_to('t_parent_txn_id', $filter_txn_id) . ')';
        }
        if ($_filter_type_code != '') {
            $end_filename .= '_' . $_filter_type_code;
            $where .= ' AND (';
            foreach ($filter_type_code as $key => $product) {
                if ($key > 0) {
                    $where .= ' OR ';
                }
                $where .= db_string_equal_to('t_type_code', $product);
            }
            $where .= ')';
        }
        if ($filter_start !== null) {
            $end_filename .= '_s' . strval($filter_start);
            $where .= ' AND date_and_time>=' . strval($filter_start);
        }
        if ($filter_end !== null) {
            $end_filename .= '_e' . strval($filter_end);
            $where .= ' AND date_and_time<=' . strval($filter_end);
        }

        require_code('files_spreadsheets_write');
        if ($file_type === null) {
            $file_type = spreadsheet_write_default();
        }
        $filename = 'sales' . $end_filename . '.' . $file_type;
        $outfile_path = null;
        $sheet_writer = spreadsheet_open_write($outfile_path, $filename);

        $max = 500;
        $start = 0;

        $query = 'FROM ' . get_table_prefix() . 'ecom_sales s LEFT JOIN ' . get_table_prefix() . 'ecom_transactions t ON t.id=s.txn_id WHERE ' . $where;

        $max_rows = $GLOBALS['SITE_DB']->query_value_if_there('SELECT COUNT(*) ' . $query);

        do {
            $rows = $GLOBALS['SITE_DB']->query('SELECT *, s.id AS s_id, t.id AS t_id ' . $query . ' ORDER BY date_and_time', $max, $start);

            foreach ($rows as $i => $_sale) {
                task_log($this, 'Processing sales row', $i, $max_rows);

                list($details, $product_object) = find_product_details($_sale['t_type_code']);
                if ($details !== null) {
                    $item_name = $details['item_name'];
                } else {
                    $item_name = $_sale['t_type_code'];
                }

                $transaction = [];

                $transaction[do_lang('DATE_TIME')] = get_timezoned_date_time($_sale['date_and_time'], false);

                $transaction[do_lang('TRANSACTION')] = $_sale['t_id'];

                $transaction[do_lang('PARENT')] = $_sale['t_parent_txn_id'];

                $member_id = null;
                if ($product_object !== null) {
                    $member_id = method_exists($product_object, 'member_for') ? $product_object->member_for($_sale['t_type_code'], $_sale['t_purchase_id']) : null;
                }
                if ($member_id !== null) {
                    $username = $GLOBALS['FORUM_DRIVER']->get_username($member_id);
                } else {
                    $username = do_lang('UNKNOWN');
                }
                $transaction[do_lang('MEMBER')] = $username;

                $transaction[do_lang('PRODUCT')] = $item_name;

                $transaction[do_lang('DETAILS')] = $_sale['details'];

                $transaction[do_lang('OTHER_DETAILS')] = $_sale['details2'];

                $sheet_writer->write_row($transaction);
            }

            $start += $max;
        } while (!empty($rows));

        $sheet_writer->close();

        $headers = [];
        $headers['Content-Type'] = $sheet_writer->get_mime_type();
        $headers['Content-Disposition'] = 'attachment; filename="' . escape_header($filename) . '"';

        $ini_set = [];
        $ini_set['ocproducts.xss_detect'] = '0';

        return [$sheet_writer->get_mime_type(), [$filename, $outfile_path], $headers, $ini_set];
    }
}
