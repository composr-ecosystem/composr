<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    quizzes
 */

/**
 * Hook class.
 */
class Hook_task_export_quiz
{
    /**
     * Run the task hook.
     *
     * @param  AUTO_LINK $quiz_id The quiz ID
     * @param  ?string $file_type The file type to export with (null: default)
     * @return ?array A tuple of at least 2: Return mime-type, content (either Tempcode, or a string, or a filename and file-path pair to a temporary file), map of HTTP headers if transferring immediately, map of ini_set commands if transferring immediately (null: show standard success message)
     */
    public function run(int $quiz_id, ?string $file_type = null) : ?array
    {
        if (!addon_installed('quizzes')) {
            return null;
        }

        $questions_rows = list_to_map('id', $GLOBALS['SITE_DB']->query_select('quiz_questions', ['*'], ['q_quiz_id' => $quiz_id], 'ORDER BY q_order'));
        $answer_rows = $GLOBALS['SITE_DB']->query_select('quiz_question_answers a JOIN ' . get_table_prefix() . 'quiz_questions q ON q.id=a.q_question_id', ['q_answer_text', 'q_question_id', 'a.id'], ['q_quiz_id' => $quiz_id], 'ORDER BY q.q_order,a.q_order');

        require_code('files_spreadsheets_write');
        if ($file_type === null) {
            $file_type = spreadsheet_write_default();
        }
        $filename = 'quiz.' . $file_type;
        $outfile_path = null;
        $sheet_writer = spreadsheet_open_write($outfile_path, $filename);

        $max = 500;
        $start = 0;

        $max_rows = $GLOBALS['SITE_DB']->query_select_value('quiz_entries', 'COUNT(*)', ['q_quiz_id' => $quiz_id]);

        do {
            $rows = $GLOBALS['SITE_DB']->query_select('quiz_entries', ['*'], ['q_quiz_id' => $quiz_id], 'ORDER BY q_time', $max, $start);

            foreach ($rows as $i => $row) {
                task_log($this, 'Processing quiz row', $i, $max_rows);

                $member_id = $row['q_member'];
                $username = $GLOBALS['FORUM_DRIVER']->get_username($member_id);
                $member_email = $GLOBALS['FORUM_DRIVER']->get_member_email_address($member_id);

                $member_answer_rows = collapse_2d_complexity('q_question_id', 'q_answer', $GLOBALS['SITE_DB']->query_select('quiz_entry_answer a JOIN ' . get_table_prefix() . 'quiz_questions q ON q.id=a.q_question_id', ['a.q_question_id', 'a.q_answer'], ['q_quiz_id' => $quiz_id]));

                $quiz_entry = [];

                $quiz_entry[do_lang('IDENTIFIER')] = $member_id;
                $quiz_entry[do_lang('DATE_TIME')] = get_timezoned_date_time($row['q_time']);
                $quiz_entry[do_lang('USERNAME')] = $username;
                $quiz_entry[do_lang('EMAIL')] = $member_email;
                $quiz_entry[do_lang('MARKS')] = $row['q_results'];

                foreach ($questions_rows as $j => $question_row) {
                    $member_answer = array_key_exists($question_row['id'], $member_answer_rows) ? $member_answer_rows[$question_row['id']] : '';
                    if (($question_row['q_type'] == 'MULTIPLECHOICE') && (is_numeric($member_answer))) {
                        foreach ($answer_rows as $question_answer_row) {
                            if (($question_answer_row['id'] == intval($member_answer)) && ($question_answer_row['q_question_id'] == $question_row['id'])) {
                                $member_answer = get_translated_text($question_answer_row['q_answer_text']);
                                break;
                            }
                        }
                    }

                    $quiz_entry[integer_format($j + 1) . ') ' . get_translated_text($question_row['q_question_text'])] = $member_answer;
                }

                $sheet_writer->write_row($quiz_entry);
            }

            $start += $max;
        } while (!empty($rows));

        $sheet_writer->close();

        $headers = [];
        $headers['Content-Type'] = $sheet_writer->get_mime_type();
        $headers['Content-Disposition'] = 'attachment; filename="' . escape_header($filename) . '"';

        $ini_set = [];
        $ini_set['ocproducts.xss_detect'] = '0';

        return [$sheet_writer->get_mime_type(), [$filename, $outfile_path], $headers, $ini_set];
    }
}
