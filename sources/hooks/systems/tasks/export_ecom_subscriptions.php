<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    ecommerce
 */

/**
 * Hook class.
 */
class Hook_task_export_ecom_subscriptions
{
    /**
     * Run the task hook.
     *
     * @param  BINARY $filter_manual Whether to only include manual transactions
     * @param  SHORT_TEXT $filter_username Filter by username (blank: do not filter)
     * @param  SHORT_TEXT $_filter_state Filter by transaction state (comma-delimited) (blank: do not filter)
     * @param  LONG_TEXT $_filter_type_code Filter by products (comma-delimited) (blank: do not filter)
     * @param  ?string $file_type The file type to export with (null: default)
     * @return ?array A tuple of at least 2: Return mime-type, content (either Tempcode, or a string, or a filename and file-path pair to a temporary file), map of HTTP headers if transferring immediately, map of ini_set commands if transferring immediately (null: show standard success message)
     */
    public function run(int $filter_manual = 1, string $filter_username = '', string $_filter_state = '', string $_filter_type_code = '', ?string $file_type = null) : ?array
    {
        if (!addon_installed('ecommerce')) {
            return null;
        }

        $filter_state = explode(',', $_filter_state);
        $filter_type_code = explode(',', $_filter_type_code);

        require_lang('ecommerce');
        require_code('ecommerce');

        // Build WHERE query
        $where = [];
        $end = '';
        $end_filename = '';
        if ($filter_manual == 1) {
            $where = ['s_payment_gateway' => 'manual'];
        }
        if ($filter_username != '') {
            $member_id = $GLOBALS['FORUM_DRIVER']->get_member_from_username($filter_username);
            if ($member_id !== null) {
                $where['s_member_id'] = $member_id;
                $end_filename .= '_' . $filter_username;
            }
        }
        if ($_filter_state != '') {
            $end_filename .= '_' . $_filter_state;
            $end .= ' AND (';
            foreach ($filter_state as $key => $state) {
                if ($key > 0) {
                    $end .= ' OR ';
                }
                $end .= db_string_equal_to('s_state', $state);
            }
            $end .= ')';
        }
        if ($_filter_type_code != '') {
            $end_filename .= '_' . $_filter_type_code;
            $end .= ' AND (';
            foreach ($filter_type_code as $key => $product) {
                if ($key > 0) {
                    $end .= ' OR ';
                }
                $end .= db_string_equal_to('s_type_code', $product);
            }
            $end .= ')';
        }

        // Prepare the file
        require_code('files_spreadsheets_write');
        if ($file_type === null) {
            $file_type = spreadsheet_write_default();
        }
        $filename = 'subscriptions_' . strval(time()) . $end_filename . '.' . $file_type;
        $outfile_path = null;
        $sheet_writer = spreadsheet_open_write($outfile_path, $filename);


        $end .= ' ORDER BY s_time DESC';

        $start = 0;
        $max = 1000;
        $subscriptions = [];
        do {
            // Grab subscriptions
            $subscriptions = $GLOBALS['SITE_DB']->query_select('ecom_subscriptions', ['*'], $where, $end, $max, $start);

            // Write data to the file
            foreach ($subscriptions as $row) {
                list($details) = find_product_details($row['s_type_code']);

                $data_point = [];
                $data_point[do_lang('IDENTIFIER')] = $row['id'];
                $data_point[do_lang('DATE_TIME')] = get_timezoned_date_time($row['s_time'], false);
                $data_point[do_lang('MEMBER')] = $GLOBALS['FORUM_DRIVER']->get_username($row['s_member_id'], false, USERNAME_DEFAULT_DELETED);

                if ($details === null) {
                    $data_point[do_lang('PRODUCT')] = do_lang('UNKNOWN');
                    $data_point[do_lang('EXPIRY_DATE')] = do_lang('UNKNOWN');
                } else {
                    $s_length = $details['type_special_details']['length'];
                    $s_length_units = $details['type_special_details']['length_units']; // y-year, m-month, w-week, d-day
                    $time_period_units = ['y' => 'year', 'm' => 'month', 'w' => 'week', 'd' => 'day'];
                    $expiry_time = strtotime('+' . strval($s_length) . ' ' . $time_period_units[$s_length_units], $row['s_time']);
                    $expiry_date = get_timezoned_date_time($expiry_time, false);

                    $data_point[do_lang('PRODUCT')] = $details['item_name'];
                    $data_point[do_lang('EXPIRY_DATE')] = $expiry_date;
                }

                $sheet_writer->write_row($data_point);
            }

            $start += $max;
        } while (count($subscriptions) > 0);

        $sheet_writer->close();

        $headers = [];
        $headers['Content-Type'] = $sheet_writer->get_mime_type();
        $headers['Content-Disposition'] = 'attachment; filename="' . escape_header($filename) . '"';

        $ini_set = [];
        $ini_set['ocproducts.xss_detect'] = '0';

        return [$sheet_writer->get_mime_type(), [$filename, $outfile_path], $headers, $ini_set];
    }
}
