<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2023

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    banners
 */

/**
 * Hook class.
 */
class Hook_sw_banners
{
    /**
     * Run function for features in the setup wizard.
     *
     * @return array Current settings
     */
    public function get_current_settings() : array
    {
        $settings = [];
        $settings['have_default_banners_donation'] = has_predefined_content('banners', 'have_default_banners_donation') ? '1' : '0';
        $settings['have_default_banners_advertising'] = has_predefined_content('banners', 'have_default_banners_advertising') ? '1' : '0';
        return $settings;
    }

    /**
     * Run function for features in the setup wizard.
     *
     * @param  array $field_defaults Default values for the fields, from the install-profile
     * @return array A pair: Input fields, Hidden fields
     */
    public function get_fields(array $field_defaults) : array
    {
        if (!addon_installed('banners') || post_param_integer('addon_banners', null) === 0) {
            return [new Tempcode(), new Tempcode()];
        }

        $current_settings = $this->get_current_settings();
        $field_defaults += $current_settings; // $field_defaults will take precedence, due to how "+" operator works in PHP

        require_lang('banners');
        $fields = new Tempcode();
        $fields->attach(form_input_tick(do_lang_tempcode('HAVE_DEFAULT_BANNERS_DONATION'), do_lang_tempcode('DESCRIPTION_HAVE_DEFAULT_BANNERS_DONATION'), 'have_default_banners_donation', $field_defaults['have_default_banners_donation'] == '1'));
        $fields->attach(form_input_tick(do_lang_tempcode('HAVE_DEFAULT_BANNERS_ADVERTISING'), do_lang_tempcode('DESCRIPTION_HAVE_DEFAULT_BANNERS_ADVERTISING'), 'have_default_banners_advertising', $field_defaults['have_default_banners_advertising'] == '1'));
        return [$fields, new Tempcode()];
    }

    /**
     * Run function for setting features from the setup wizard.
     */
    public function set_fields()
    {
        if (!addon_installed('banners') || post_param_integer('addon_banners', null) === 0) {
            return;
        }

        install_predefined_content('banners', [
            'have_default_banners_donation' => (post_param_integer('have_default_banners_donation', 0) == 1),
            'have_default_banners_advertising' => (post_param_integer('have_default_banners_advertising', 0) == 1),
        ]);
    }
}
