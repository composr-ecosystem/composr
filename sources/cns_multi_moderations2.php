<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    cns_multi_moderations
 */

/**
 * Edit a Multi Moderation.
 *
 * @param  AUTO_LINK $id The ID of the Multi Moderation we are editing
 * @param  SHORT_TEXT $name The name of the Multi Moderation
 * @param  LONG_TEXT $post_text The default post text to add when applying (may be blank)
 * @param  ?AUTO_LINK $move_to The forum to move the topic when applying (null: do not move)
 * @param  ?BINARY $pin_state The pin state after applying (null: unchanged)
 * @param  ?BINARY $open_state The open state after applying (null: unchanged)
 * @param  SHORT_TEXT $forum_multi_code The forum multi code for where this Multi Moderation may be applied
 * @param  SHORT_TEXT $title_suffix The title suffix
 */
function cns_edit_multi_moderation(int $id, string $name, string $post_text, ?int $move_to, ?int $pin_state, ?int $open_state, string $forum_multi_code, string $title_suffix)
{
    if (!addon_installed('cns_multi_moderations')) {
        warn_exit(do_lang_tempcode('MISSING_ADDON', escape_html('cns_multi_moderations')));
    }

    $_name = $GLOBALS['FORUM_DB']->query_select_value('f_multi_moderations', 'mm_name', ['id' => $id]);

    $map = [
        'mm_post_text' => $post_text,
        'mm_move_to_forum_id' => $move_to,
        'mm_pin_state' => $pin_state,
        'mm_open_state' => $open_state,
        'mm_forum_multi_code' => $forum_multi_code,
        'mm_title_suffix' => $title_suffix,
    ];
    $map += lang_remap('mm_name', $_name, $name, $GLOBALS['FORUM_DB']);
    $GLOBALS['FORUM_DB']->query_update('f_multi_moderations', $map, ['id' => $id], '', 1);

    require_lang('cns_multi_moderations');
    log_it('EDIT_MULTI_MODERATION', strval($id), $name);

    if ((addon_installed('commandr')) && (!running_script('install')) && (!get_mass_import_mode())) {
        require_code('resource_fs');
        generate_resource_fs_moniker('multi_moderation', strval($id));
    }
}

/**
 * Delete a Multi Moderation.
 *
 * @param  AUTO_LINK $id The ID of the Multi Moderation we are deleting
 */
function cns_delete_multi_moderation(int $id)
{
    if (!addon_installed('cns_multi_moderations')) {
        warn_exit(do_lang_tempcode('MISSING_ADDON', escape_html('cns_multi_moderations')));
    }

    $_name = $GLOBALS['FORUM_DB']->query_select_value_if_there('f_multi_moderations', 'mm_name', ['id' => $id]);
    if ($_name === null) {
        warn_exit(do_lang_tempcode('MISSING_RESOURCE'));
    }
    $name = get_translated_text($_name, $GLOBALS['FORUM_DB']);
    $GLOBALS['FORUM_DB']->query_delete('f_multi_moderations', ['id' => $id], '', 1);
    delete_lang($_name, $GLOBALS['FORUM_DB']);

    require_lang('cns_multi_moderations');
    log_it('DELETE_MULTI_MODERATION', strval($id), $name);

    if ((addon_installed('commandr')) && (!running_script('install')) && (!get_mass_import_mode())) {
        require_code('resource_fs');
        expunge_resource_fs_moniker('multi_moderation', strval($id));
    }
}

/**
 * Perform a Multi Moderation.
 *
 * @param  AUTO_LINK $id The ID of the Multi Moderation we are performing
 * @param  AUTO_LINK $topic_id The ID of the topic we are performing the Multi Moderation on
 * @param  LONG_TEXT $reason The reason for performing the Multi Moderation (may be blank)
 * @param  LONG_TEXT $post_text The post text for a post to be added to the topic (blank: do not add a post)
 * @param  BINARY $is_emphasised Whether the post is marked emphasised
 * @param  BINARY $skip_sig Whether to skip showing the posters signature in the post
 */
function cns_perform_multi_moderation(int $id, int $topic_id, string $reason, string $post_text = '', int $is_emphasised = 1, int $skip_sig = 0)
{
    if (!addon_installed('cns_multi_moderations')) {
        warn_exit(do_lang_tempcode('MISSING_ADDON', escape_html('cns_multi_moderations')));
    }

    $topic_details = $GLOBALS['FORUM_DB']->query_select('f_topics', ['t_forum_id', 't_cache_first_title', 't_cache_first_post_id'], ['id' => $topic_id], '', 1);
    if (!array_key_exists(0, $topic_details)) {
        warn_exit(do_lang_tempcode('MISSING_RESOURCE', 'multi_moderation'));
    }
    $from = $topic_details[0]['t_forum_id'];
    if (!cns_may_perform_multi_moderation($from)) {
        access_denied('I_ERROR');
    }

    $mm = $GLOBALS['FORUM_DB']->query_select('f_multi_moderations', ['*'], ['id' => $id], '', 1);
    if (!array_key_exists(0, $mm)) {
        warn_exit(do_lang_tempcode('MISSING_RESOURCE', 'multi_moderation'));
    }

    require_code('selectcode');
    $idlist = selectcode_to_idlist_using_db($mm[0]['mm_forum_multi_code'], 'id', 'f_forums', 'f_forums', 'f_parent_forum_id', 'f_parent_forum_id', 'id', true, true, $GLOBALS['FORUM_DB']);
    if (!in_array($from, $idlist)) {
        warn_exit(do_lang_tempcode('MM_APPLY_TWICE'));
    }

    $pin_state = $mm[0]['mm_pin_state'];
    $open_state = $mm[0]['mm_open_state'];
    $move_to = $mm[0]['mm_move_to_forum_id'];
    $title_suffix = $mm[0]['mm_title_suffix'];
    //$post_text = $mm[0]['mm_post_text']; We'll allow user to specify the post_text, with this as a default
    $update_array = [];
    if ($pin_state !== null) {
        $update_array['t_pinned'] = $pin_state;
    }
    if ($open_state !== null) {
        $update_array['t_is_open'] = $open_state;
    }
    if ($title_suffix != '') {
        $new_title = $topic_details[0]['t_cache_first_title'] . ' [' . $title_suffix . ']';
        $update_array['t_cache_first_title'] = $new_title;
        $GLOBALS['FORUM_DB']->query_update('f_posts', ['p_title' => $new_title], ['id' => $topic_details[0]['t_cache_first_post_id']], '', 1);
    }

    if (!empty($update_array)) {
        $GLOBALS['FORUM_DB']->query_update('f_topics', $update_array, ['id' => $topic_id], '', 1);
    }

    if ($move_to !== null) {
        require_code('cns_topics_action');
        require_code('cns_topics_action2');
        cns_move_topics($from, $move_to, [$topic_id]);
    }

    if ($post_text != '') {
        require_code('cns_posts_action');
        require_code('cns_posts_action2');
        require_code('cns_topics_action');
        require_code('cns_topics_action2');
        cns_make_post($topic_id, '', $post_text, $skip_sig, false, 1, $is_emphasised);

        $forum_id = ($move_to === null) ? $from : $move_to;
        handle_topic_ticket_reply($forum_id, $topic_id, $topic_details[0]['t_cache_first_title'], $post_text);
    }

    require_lang('cns_multi_moderations');
    require_code('cns_general_action2');
    cns_mod_log_it('PERFORM_MULTI_MODERATION', strval($id), strval($topic_id), $reason);
}
