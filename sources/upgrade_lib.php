<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2023

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    core_upgrader
 */

/**
 * Standard code module initialisation function.
 *
 * @ignore
 */
function init__upgrade_lib()
{
    require_lang('upgrade');
}

/**
 * Clear many caches.
 */
function clear_caches_1() // These have to happen early - to prevent things that could kill the update process
{
    require_code('caches3');
    erase_theme_images_cache();
    erase_cached_templates();
    erase_cached_language();
    delete_value('cdn');
}

/**
 * Clear more caches. This is intentionally done after db upgrading.
 */
function clear_caches_2()
{
    require_code('caches3');
    erase_comcode_cache();
    erase_block_cache(true);
    erase_comcode_page_cache();
    erase_persistent_cache();
}

// Useful functions for major upgrades...

/**
 * Zone index.php files could go stale, rebuild them.
 */
function rebuild_zone_files()
{
    $zones = find_all_zones();
    foreach ($zones as $zone) {
        if (!in_array($zone, ['', 'cms', 'adminzone', 'site', 'forum', 'collaboration'/*LEGACY*/])) {
            if (strpos(cms_file_get_contents_safe(get_custom_file_base() . '/' . $zone . (($zone == '') ? '' : '/') . 'index.php', FILE_READ_LOCK), 'core') !== false) {
                @cms_file_put_contents_safe(get_custom_file_base() . (($zone == '') ? '' : '/') . $zone . '/index.php', cms_file_get_contents_safe(get_custom_file_base() . '/site/index.php', FILE_READ_LOCK), FILE_WRITE_FIX_PERMISSIONS | FILE_WRITE_SYNC_FILE);
            }
        }
    }
}

/**
 * Move files from one folder to another.
 * Doesn't move .htaccess and index.html.
 * Deletes the folder afterward.
 *
 * @param  PATH $from Source path
 * @param  PATH $to Destination path
 */
function move_folder_contents(string $from, string $to)
{
    $dh = @opendir(get_custom_file_base() . '/' . $from);
    if ($dh !== false) {
        while (($f = readdir($dh)) !== false) {
            if (($f == 'index.html') || ($f == '.htaccess')) {
                continue;
            }

            @rename(get_custom_file_base() . '/' . $from . '/' . $f, $to . '/' . $f);
        }
        closedir($dh);
        @rmdir(get_custom_file_base() . '/' . $from);
    }
}

/**
 * Perform a big search and replace.
 *
 * @param  array $reps Change from/to this
 */
function perform_search_replace(array $reps)
{
    // Find directories to do replacements in...

    $target_dirs = [];

    $langs = find_all_langs();

    require_code('themes2');
    $themes = find_all_themes();
    foreach (array_keys($themes) as $theme) {
        $target_dirs[] = 'themes/' . $theme . '/templates_custom';
        $target_dirs[] = 'themes/' . $theme . '/css_custom';
        $target_dirs[] = 'themes/' . $theme . '/text_custom';
        $target_dirs[] = 'themes/' . $theme . '/xml_custom';
        $target_dirs[] = 'themes/' . $theme . '/javascript_custom';
    }

    $target_dirs[] = 'text_custom';
    foreach (array_keys($langs) as $lang) {
        $target_dirs[] = 'text_custom/' . $lang;
    }

    $zones = find_all_zones();
    foreach ($zones as $zone) {
        foreach (array_keys($langs) as $lang) {
            $target_dirs[] = $zone . (($zone == '') ? '' : '/') . 'pages/comcode_custom/' . $lang;
        }
    }

    // Do replacement...

    foreach ($target_dirs as $_dir) {
        $dir = get_custom_file_base() . '/' . $_dir;
        if (is_dir($dir)) {
            $dh = opendir($dir);
            if ($dh !== false) {
                while (($f = readdir($dh)) !== false) {
                    $path = $dir . '/' . $f;
                    $contents = cms_file_get_contents_safe($path, FILE_READ_LOCK);
                    $contents_orig = $contents;
                    $contents = preg_replace(array_keys($reps), array_values($reps), $contents);
                    if ($contents != $contents_orig) {
                        require_code('files');
                        cms_file_put_contents_safe($path, $contents, FILE_WRITE_FIX_PERMISSIONS | FILE_WRITE_SYNC_FILE | FILE_WRITE_BOM);
                    }
                }
                closedir($dh);
            }
        }
    }
}

/**
 * Rename a zone in the database and move any custom pages in it.
 *
 * @param  ID_TEXT $zone The old name of the zone
 * @param  ID_TEXT $new_zone The new name of the zone
 * @param  boolean $dont_bother_with_main_row Whether to assume the main zone row has already been renamed as part of a wider editing operation
 */
function rename_zone(string $zone, string $new_zone, bool $dont_bother_with_main_row = false)
{
    require_code('zones2');
    require_code('zones3');
    actual_rename_zone_lite($zone, $new_zone, $dont_bother_with_main_row);
    $pages = find_all_pages_wrap($zone, true, false, FIND_ALL_PAGES__ALL);
    foreach ($pages as $page => $type) {
        cms_extend_time_limit(1);

        send_http_output_ping();

        $path = get_file_base() . (($zone == '') ? '' : '/') . $zone . '/pages/' . $type . '/' . $page;
        $new_path = get_file_base() . '/' . $new_zone . '/pages/' . $type . '/' . $page;
        if ((cms_is_writable($path)) && (cms_is_writable($new_path))) {
            rename($path, $new_path);
            sync_file_move($path, $new_path);
        }
    }
}
