<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    validation
 */

/**
 * Module page class.
 */
class Module_admin_validation
{
    /**
     * Find details of the module.
     *
     * @return ?array Map of module info (null: module is disabled)
     */
    public function info() : ?array
    {
        $info = [];
        $info['author'] = 'Chris Graham';
        $info['organisation'] = 'ocProducts';
        $info['hacked_by'] = null;
        $info['hack_version'] = null;
        $info['version'] = 2;
        $info['locked'] = false;
        $info['min_cms_version'] = 11.0;
        $info['addon'] = 'validation';
        return $info;
    }

    /**
     * Find entry-points available within this module.
     *
     * @param  boolean $check_perms Whether to check permissions
     * @param  ?MEMBER $member_id The member to check permissions as (null: current user)
     * @param  boolean $support_crosslinks Whether to allow cross links to other modules (identifiable via a full-page-link rather than a screen-name)
     * @param  boolean $be_deferential Whether to avoid any entry-point (or even return null to disable the page in the Sitemap) if we know another module, or page_group, is going to link to that entry-point. Note that "!" and "browse" entry points are automatically merged with container page nodes (likely called by page-groupings) as appropriate.
     * @return ?array A map of entry points (screen-name=>language-code/string or screen-name=>[language-code/string, icon-theme-image]) (null: disabled)
     */
    public function get_entry_points(bool $check_perms = true, ?int $member_id = null, bool $support_crosslinks = true, bool $be_deferential = false) : ?array
    {
        if (!addon_installed('validation')) {
            return null;
        }

        return [
            '!' => ['NONVALIDATED_RESOURCES', 'menu/adminzone/audit/nonvalidated'],
        ];
    }

    public $title;

    /**
     * Module pre-run function. Allows us to know metadata for <head> before we start streaming output.
     *
     * @return ?Tempcode Tempcode indicating some kind of exceptional output (null: none)
     */
    public function pre_run() : ?object
    {
        $error_msg = new Tempcode();
        if (!addon_installed__messaged('validation', $error_msg)) {
            return $error_msg;
        }

        $type = get_param_string('type', 'browse');

        require_lang('validation');

        set_helper_panel_tutorial('tut_censor');

        $this->title = get_screen_title('NONVALIDATED_RESOURCES');

        return null;
    }

    /**
     * Execute the module.
     *
     * @return Tempcode The result of execution
     */
    public function run() : object
    {
        $out = [];

        require_code('content');
        require_code('form_templates');

        $_hooks = find_all_hook_obs('systems', 'content_meta_aware', 'Hook_content_meta_aware_');
        foreach ($_hooks as $object) {
            $info = $object->info();
            if ($info === null) {
                continue;
            }
            if ($info['validated_field'] === null) {
                continue;
            }

            $db = $info['db'];

            $select = [];
            append_content_select_for_fields($select, $info, ['id', 'title', 'category']);

            $rows = $db->query_select($info['table'], $select, [$info['validated_field'] => 0], '', intval(get_option('general_safety_listing_limit')));
            if (count($rows) == intval(get_option('general_safety_listing_limit'))) {
                attach_message(do_lang_tempcode('TOO_MANY_TO_CHOOSE_FROM'), 'warn');
            }
            $content = new Tempcode();
            foreach ($rows as $row) {
                $id = $object->get_id($row);
                $_title = $object->get_title($row);
                $content->attach(form_input_list_entry(is_integer($id) ? strval($id) : $id, false, $_title));
            }

            if (!$content->is_empty()) {
                $id_parameter = 'id';
                list(, $attributes) = page_link_decode($info['edit_page_link_pattern']);
                foreach ($attributes as $key => $val) {
                    if ($val == '_WILD') {
                        $id_parameter = $key;
                        break;
                    }
                }

                $edit_url = $object->get_edit_url(null, false, ':validated=1');
                $fields = form_input_list(do_lang_tempcode('CONTENT'), '', $id_parameter, $content, null, true);

                $content = do_template('FORM', [
                    '_GUID' => '51dcee39273a0fee29569190344f2e41',
                    'SKIP_REQUIRED' => true,
                    'GET' => true,
                    'HIDDEN' => '',
                    'SUBMIT_ICON' => 'buttons/save',
                    'SUBMIT_NAME' => do_lang_tempcode('EDIT'),
                    'FIELDS' => $fields,
                    'URL' => $edit_url,
                    'TEXT' => '',
                    'TARGET' => '_blank',
                ]);
            }

            $out[do_lang($info['content_type_label'])] = do_template('VALIDATION_SECTION', [
                '_GUID' => '838240008e190b9cbaa0280fbddd6baf',
                'TITLE' => do_lang_tempcode($info['content_type_label']),
                'CONTENT' => $content,
            ]);
        }

        cms_mb_ksort($out, SORT_NATURAL | SORT_FLAG_CASE);

        $_out = new Tempcode();
        foreach ($out as $__out) {
            $_out->attach($__out);
        }

        return do_template('VALIDATION_SCREEN', [
            '_GUID' => '4e971f1c8851b821af030b5c7bbcb3fb',
            'TITLE' => $this->title,
            'TEXT' => do_lang_tempcode('NONVALIDATED_PAGE_TEXT'),
            'SECTIONS' => $_out,
        ]);
    }
}
