<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    core_cns
 */

require_code('files');

require_lang('cns');

require_javascript('core_form_interfaces');

$title = get_screen_title('EDIT_PARENTAL_CONTROLS');
$type = get_param_string('type', 'browse');

$full_path_custom = get_custom_file_base() . '/data_custom/xml_config/parental_controls.xml';
$full_path_orig = get_custom_file_base() . '/data/xml_config/parental_controls.xml';
$full_path = $full_path_custom;
if (!is_file($full_path_custom)) {
    $full_path = $full_path_orig;
}

$post_url = build_url(['page' => '_SELF', 'type' => 'save'], '_SELF');

// Load current contents of the XML file (or what we are about to save if applicable)
$prev_xml = file_exists($full_path_custom) ? cms_file_get_contents_safe($full_path_custom, FILE_READ_LOCK | FILE_READ_BOM) : cms_file_get_contents_safe($full_path_orig, FILE_READ_LOCK | FILE_READ_BOM);

if ($type == 'save') {
    $xml = post_param_string('xml');
} else {
    $xml = $prev_xml;
}

// Save actualisation
if ($type == 'save') {
    require_code('input_filter_2');
    if (get_value('disable_modsecurity_workaround') !== '1') {
        modsecurity_workaround_enable();
    }

    // Drop the new XML into the file
    cms_file_put_contents_safe($full_path_custom, $xml, FILE_WRITE_FIX_PERMISSIONS | FILE_WRITE_SYNC_FILE | FILE_WRITE_BOM);

    log_it('EDIT_PARENTAL_CONTROLS');

    // This will display validation errors
    require_code('cns_parental_controls');
    load_parental_control_settings(true);

    // Clear Privacy Policy cache because it generates Parental Controls information
    require_code('caches');
    delete_cache_entry('main_privacy_policy_auto');

    attach_message(do_lang_tempcode('SUCCESS'));
}

// Support revisions tracking for achievements
$revision_loaded = null;
if (addon_installed('actionlog')) {
    require_code('revisions_engine_files');
    $revision_engine = new RevisionEngineFiles();
    $directory = 'data_custom/xml_config';

    // Log a revision if we are about to save
    if ($type == 'save') {
        $revision_engine->add_revision(
            dirname($full_path_custom),
            'parental_controls',
            'xml',
            $prev_xml,
            filemtime($full_path_custom)
        );
    }

    $revisions = $revision_engine->ui_revisions_controller($directory, 'parental_controls', 'xml', 'EDIT_PARENTAL_CONTROLS', $xml, $revision_loaded);
    if ((get_param_integer('diffing', 0) == 1) && (!$revisions->is_empty())) {
        return $revisions;
    }
} else {
    $revisions = new Tempcode();
}

$description = do_lang_tempcode('DESCRIPTION_EDIT_PARENTAL_CONTROLS');

set_helper_panel_tutorial('tut_parental_controls');

require_code('form_templates');
list($warning_details, $ping_url) = handle_conflict_resolution('', false);

// Render the XML editing screen (and revisions)
return do_template('XML_CONFIG_SCREEN', [
    '_GUID' => 'ce262bbc79165820b8cfd022c87b2bba',
    'TITLE' => $title,
    'POST_URL' => $post_url,
    'XML' => $xml,
    'DESCRIPTION' => $description,
    'REVISIONS' => $revisions,
    'WARNING_DETAILS' => $warning_details,
    'PING_URL' => $ping_url,
]);
