<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    installprofile_generator
 */

i_solemnly_declare(I_UNDERSTAND_SQL_INJECTION | I_UNDERSTAND_XSS | I_UNDERSTAND_PATH_INJECTION);

$error_msg = new Tempcode();
if (!addon_installed__messaged('installprofile_generator', $error_msg)) {
    return $error_msg;
}

if (post_param_integer('confirm', 0) == 0) {
    $preview = 'Generate install profile';
    $title = get_screen_title($preview, false);
    $url = get_self_url(false, false);
    return do_template('CONFIRM_SCREEN', ['_GUID' => '7888f341677b280b3f0e8290ce9c7268', 'TITLE' => $title, 'PREVIEW' => $preview, 'FIELDS' => form_input_hidden('confirm', '1'), 'URL' => $url]);
}

require_code('addons2');

function find_blocks_in_page($page)
{
    $blocks = [];
    $page_path = get_custom_file_base() . '/pages/comcode_custom/' . get_site_default_lang() . '/' . $page . '.txt';
    if (!is_file($page_path)) {
        $page_path = get_custom_file_base() . '/pages/comcode/' . get_site_default_lang() . '/' . $page . '.txt';
    }
    if (is_file($page_path)) {
        $page_contents = cms_file_get_contents_safe($page_path, FILE_READ_LOCK);
        $matches = [];
        $num_matches = preg_match_all('#\[block.*\](.*)\[/block\]#U', $page_contents, $matches);
        for ($i = 0; $i < $num_matches; $i++) {
            $full_tag = $matches[0][$i];
            $block = $matches[1][$i];
            $blocks[$block] = $full_tag;
        }
    }
    return $blocks;
}

$profile = <<<END
<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    setupwizard
 */

/**
 * Hook class.
 */
class Hook_admin_setupwizard_installprofiles_mycustomprofile
{
    /**
     * Get info about the installprofile.
     *
     * @return ?array Map of installprofile details (null: profile is unavailable)
     */
    public function info() : ?array
    {
        if (!addon_installed('setupwizard')) {
            return null;
        }

        return [
            'title' => 'My Custom installprofile',
        ];
    }

    /**
     * Get a list of addons that are kept with this installation profile (added to the list of addons always kept).
     *
     * @return array Triple: List of addons in the profile, Separated list of ones to show under advanced, Ones we really are shunning
     */
    public function get_addon_list() : array
    {
        return [
            [

END;
$addons = find_installed_addons();
sort($addons);
foreach ($addons as $addon_info) {
    $profile .= "\t\t\t\t\"" . php_addslashes($addon_info['name']) . "\",\n";
}
$profile .= <<<END
            ],
            [
            ],
            [

END;
$non_installed_addons = find_available_addons(false);
sort($non_installed_addons);
foreach ($non_installed_addons as $addon_info) {
    $profile .= "\t\t\t\t\"" . php_addslashes($addon_info['name']) . "\",\n";
}
$profile .= <<<END
            ],
        ];
    }

    /**
     * Get a map of default settings associated with this installation profile.
     *
     * @return array Map of default settings
     */
    public function field_defaults() : array
    {
        return [

END;
require_code('content2');
$hooks = find_all_hooks('modules', 'admin_setupwizard');
foreach (array_keys($hooks) as $hook) {
    $path = get_file_base() . '/sources_custom/hooks/modules/admin_setupwizard/' . filter_naughty_harsh($hook) . '.php';
    if (!file_exists($path)) {
        $path = get_file_base() . '/sources/hooks/modules/admin_setupwizard/' . filter_naughty_harsh($hook) . '.php';
    }
    $_hook_bits = extract_module_functions($path, ['get_current_settings']);
    if ($_hook_bits[0] !== null) {
        if (is_array($_hook_bits[0])) {
            $settings = call_user_func_array($_hook_bits[0][0], $_hook_bits[0][1]);
        } else {
            $settings = cms_eval($_hook_bits[0], $path);
        }
        foreach ($settings as $key => $val) {
            $profile .= "\t\t\t\"" . php_addslashes($key) . "\"=>\"" . php_addslashes($val) . "\",\n";
        }
    }
}
$profile .= <<<END
        ];
    }

    /**
     * Find details of desired blocks.
     *
     * @return array Details of what blocks are wanted
     */
    public function default_blocks() : array
    {
        return [
            BLOCK_POSITION_MAIN => [

END;
$blocks = find_blocks_in_page(DEFAULT_ZONE_PAGE_NAME);
foreach (array_keys($blocks) as $block) {
    $profile .= "\t\t\t\t\"" . php_addslashes($block) . "\",\n";
}
$profile .= <<<END
            ],
            BLOCK_POSITION_CELL => [
            ],
            BLOCK_POSITION_PANEL => [

END;
$blocks = find_blocks_in_page('panel_left');
foreach (array_keys($blocks) as $block) {
    $profile .= "\t\t\t\t\"" . php_addslashes($block) . "\",\n";
}
$blocks = find_blocks_in_page('panel_right');
foreach (array_keys($blocks) as $block) {
    $profile .= "\t\t\t\t\"" . php_addslashes($block) . "\",\n";
}
$profile .= <<<END
            ],
        ];
    }

    /**
     * Get options for blocks in this profile.
     *
     * @return array Details of what block options are wanted
     */
    public function block_options() : array
    {
        return [

END;
require_code('zones2');
$blocks = array_merge(find_blocks_in_page(DEFAULT_ZONE_PAGE_NAME), find_blocks_in_page('panel_left'), find_blocks_in_page('panel_right'));
foreach ($blocks as $block => $full_tag) {
    require_code('comcode_compiler');
    $parameters = parse_single_comcode_tag($full_tag, 'block');
    $profile .= "\t\t\t\t\"" . php_addslashes($block) . "\" => [\n";
    foreach ($parameters as $key => $val) {
        if ($key != '') {
            $profile .= "\t\t\t\t\t\"" . php_addslashes($key) . "\"=>\"" . php_addslashes($val) . "\",\n";
        }
    }
    $profile .= "\t\t\t\t),\n";
}
$profile .= <<<END
        ];
    }

    /**
     * Execute any special code needed to put this install profile into play.
     */
    public function install_code()
    {

END;
$config_options = $GLOBALS['SITE_DB']->query_select('config', ['*']);
require_code('config2');
foreach ($config_options as $option) {
    $name = $option['c_name'];
    if (in_array($name, ['site_name', 'description', 'site_scope', 'copyright', 'staff_address', 'keywords', 'google_analytics', 'fixed_width', 'site_closed', 'closed', 'stats_store_time', 'show_content_tagging', 'show_content_tagging_inline', 'show_screen_actions', 'single_public_zone'])) {
        continue; // These are set separately
    }
    $value = get_option($name);
    if ($value == get_default_option($name)) {
        continue;
    }
    $_name = php_addslashes($name);
    $_value = php_addslashes($value);
    $profile .= "\t\tif (get_option(\"{$_name}\", true) !== null) set_option(\"{$_name}\", \"{$_value}\");\n";
}
$profile .= <<<END
    }
}
END;

$site_name = get_option('site_name');
$addon_inf = <<<END
name="My Custom installprofile"
author="Me"
organisation="{$site_name}"
version="1"
incompatibilities=""
dependencies=""
description="Auto-generated installprofile for the Setup Wizard."
category="Installation profiles"
copyright_attribution=""
licence="(Unstated)"
END;

$filename = 'mycustomprofile.tar';
header('Content-Type: application/octet-stream');
header('Content-Disposition: attachment; filename="' . escape_header($filename, true) . '"');

require_code('tar');

$tar = tar_open('php://output', 'wb');

tar_add_file($tar, 'sources_custom/hooks/modules/admin_setupwizard_installprofiles/mycustomprofile.php', $profile);
tar_add_file($tar, 'addon.inf', $addon_inf);

tar_close($tar);

$GLOBALS['SCREEN_TEMPLATE_CALLED'] = '';
exit();
