<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2022

 See docs/LICENSE.md for full licensing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    testing_platform
 */

/**
 * Composr test case class (unit testing).
 */
class bot_detection_test_set extends cms_test_case
{
    public function testUADetect()
    {
        $_SERVER['HTTP_USER_AGENT'] = 'aaaa';
        $GLOBALS['BOT_TYPE_CACHE'] = false;
        $this->assertTrue(get_bot_type() === null);

        $_SERVER['HTTP_USER_AGENT'] = 'Some Googlebot running';
        $GLOBALS['BOT_TYPE_CACHE'] = false;
        $this->assertTrue(get_bot_type() !== null);
    }

    public function testDNSDetect()
    {
        require_code('failure');

        $this->assertTrue(!is_unbannable_bot_dns('93.184.216.34')); // example.com

        $this->assertTrue(is_unbannable_bot_dns('64.68.90.26')); // Google
    }

    public function testIPDetect()
    {
        require_code('failure');

        $this->assertTrue(!is_unbannable_bot_ip('93.184.216.34')); // example.com

        $this->assertTrue(is_unbannable_bot_ip('64.68.90.26')); // Google
    }

    public function testBotListInSync()
    {
        require_code('files');
        $file_bots = cms_parse_ini_file_fast(get_file_base() . '/text/bots.txt');
        ksort($file_bots);

        $_SERVER['HTTP_USER_AGENT'] = ''; // Force away optimisation
        get_bot_type(); // Force $BOT_MAP_CACHE to load
        global $BOT_MAP_CACHE;
        ksort($BOT_MAP_CACHE);

        require_code('diff');
        $this->assertTrue($BOT_MAP_CACHE == $file_bots, diff_simple_text(implode("\n", $BOT_MAP_CACHE), implode("\n", $file_bots)));
    }
}
