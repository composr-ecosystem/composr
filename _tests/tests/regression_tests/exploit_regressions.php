<?php /*

 Composr
 Copyright (c) Christopher Graham, 2004-2024

 See docs/LICENSE.md for full licensing information.

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  Christopher Graham
 * @package    testing_platform
 */

/**
 * Composr test case class (unit testing).
 */
class exploit_regressions_test_set extends cms_test_case
{
    /**
     * Test if a reference serialized object exploit still exists in ajax_tree.
     * Since we use JSON for options now, this attempt should trigger an internal error.
     *
     * @see https://github.com/MegadodoPublications/exploits/blob/master/composr.md
     */
    public function testNoSerializeObjectReferenceExploit()
    {
        $url = get_base_url() . '/data/ajax_tree.php?hook=choose_catalogue_entry&options=' . urlencode('a:2:{i:0;C:19:"SplDoublyLinkedList":152:{i:0;:O:8:"Tempcode":2:{s:9:"seq_parts";a:1:{i:0;a:1:{i:0;a:1:{i:0;s:0:"";}}}s:18:"code_to_preexecute";a:1:{s:0:"";s:28:"echo \'FAIL\';exit();";}}}s:14:"catalogue_name";r:4;}');

        $result = cms_http_request($url, ['trigger_error' => false]);
        $this->assertTrue((!is_string($result->data) || ($result->data != 'FAIL')), 'Exploit detected!');
        if ($this->debug) {
            $this->dump($result, 'Result of exploit attempt');
        }
    }
}
